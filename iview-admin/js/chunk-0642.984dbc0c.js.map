{"version":3,"sources":["webpack:///./node_modules/echarts/lib/component/tooltip.js","webpack:///./node_modules/echarts/lib/coord/cartesian/cartesianAxisHelper.js","webpack:///./node_modules/echarts/lib/component/gridSimple.js","webpack:///./node_modules/echarts/lib/component/dataset.js","webpack:///./node_modules/zrender/lib/core/timsort.js","webpack:///./node_modules/zrender/lib/contain/polygon.js","webpack:///./node_modules/zrender/lib/animation/Animator.js","webpack:///./src/api/pangzhan-api.js","webpack:///./node_modules/echarts/lib/component/tooltip/TooltipContent.js","webpack:///./src/mixin/ROLE.js","webpack:///./node_modules/zrender/lib/core/GestureMgr.js","webpack:///./node_modules/zrender/lib/mixin/Transformable.js","webpack:///./node_modules/zrender/lib/graphic/Image.js","webpack:///./node_modules/echarts/lib/data/helper/sourceHelper.js","webpack:///./node_modules/echarts/lib/component/axisPointer/findPointFromSeries.js","webpack:///./node_modules/echarts/lib/chart/helper/Symbol.js","webpack:///./node_modules/echarts/lib/helper.js","webpack:///./node_modules/zrender/lib/core/matrix.js","webpack:///./node_modules/echarts/lib/chart/bar/BarSeries.js","webpack:///./node_modules/echarts/lib/component/axisPointer/globalListener.js","webpack:///./node_modules/echarts/lib/scale/Ordinal.js","webpack:///./node_modules/zrender/lib/graphic/Displayable.js","webpack:///./node_modules/zrender/lib/mixin/Eventful.js","webpack:///./node_modules/echarts/lib/coord/axisModelCommonMixin.js","webpack:///./node_modules/echarts/lib/CoordinateSystem.js","webpack:///./node_modules/zrender/lib/core/PathProxy.js","webpack:///./node_modules/echarts/lib/scale/Time.js","webpack:///./node_modules/echarts/lib/chart/line/LineSeries.js","webpack:///./node_modules/zrender/lib/core/env.js","webpack:///./node_modules/echarts/lib/util/graphic.js","webpack:///./node_modules/echarts/lib/preprocessor/helper/compatStyle.js","webpack:///./node_modules/echarts/lib/model/mixin/makeStyleMapper.js","webpack:///./node_modules/echarts/lib/lang.js","webpack:///./node_modules/echarts/lib/data/helper/dataProvider.js","webpack:///./node_modules/zrender/lib/graphic/Style.js","webpack:///./node_modules/zrender/lib/config.js","webpack:///./node_modules/echarts/lib/data/helper/dimensionHelper.js","webpack:///./node_modules/echarts/lib/chart/bar/BaseBarSeries.js","webpack:///./node_modules/zrender/lib/animation/Animation.js","webpack:///./node_modules/echarts/lib/chart/helper/createListFromArray.js","webpack:///./node_modules/zrender/lib/tool/path.js","webpack:///./node_modules/echarts/lib/util/number.js","webpack:///./node_modules/echarts/lib/model/mixin/dataFormat.js","webpack:///./node_modules/echarts/lib/model/mixin/lineStyle.js","webpack:///./node_modules/zrender/lib/graphic/IncrementalDisplayable.js","webpack:///./node_modules/echarts/lib/echarts.js","webpack:///./node_modules/zrender/lib/core/vector.js","webpack:///./node_modules/zrender/lib/tool/color.js","webpack:///./node_modules/zrender/lib/graphic/Gradient.js","webpack:///./node_modules/echarts/lib/component/tooltip/TooltipView.js","webpack:///./node_modules/echarts/lib/model/Model.js","webpack:///./node_modules/zrender/lib/animation/Clip.js","webpack:///./node_modules/zrender/lib/graphic/shape/Ring.js","webpack:///./node_modules/zrender/lib/graphic/LinearGradient.js","webpack:///./node_modules/echarts/lib/component/axisPointer/AxisPointerModel.js","webpack:///./node_modules/echarts/lib/coord/cartesian/AxisModel.js","webpack:///./node_modules/zrender/lib/core/log.js","webpack:///./node_modules/zrender/lib/core/curve.js","webpack:///./node_modules/echarts/lib/component/axisPointer/CartesianAxisPointer.js","webpack:///./node_modules/zrender/lib/graphic/shape/Sector.js","webpack:///./node_modules/echarts/lib/config.js","webpack:///./node_modules/echarts/lib/model/Series.js","webpack:///./node_modules/zrender/lib/graphic/helper/poly.js","webpack:///./node_modules/echarts/lib/model/mixin/itemStyle.js","webpack:///./node_modules/zrender/lib/graphic/helper/roundRect.js","webpack:///./node_modules/echarts/lib/coord/cartesian/Grid.js","webpack:///./node_modules/zrender/lib/Layer.js","webpack:///./node_modules/zrender/lib/graphic/helper/image.js","webpack:///./node_modules/zrender/lib/core/event.js","webpack:///./node_modules/echarts/lib/data/List.js","webpack:///./node_modules/zrender/lib/graphic/helper/smoothSpline.js","webpack:///./node_modules/echarts/lib/util/clazz.js","webpack:///./node_modules/echarts/lib/component/title.js","webpack:///./node_modules/echarts/lib/component/axis/AxisView.js","webpack:///./node_modules/echarts/lib/chart/bar/BarView.js","webpack:///./node_modules/zrender/lib/contain/quadratic.js","webpack:///./node_modules/echarts/lib/coord/axisHelper.js","webpack:///./node_modules/zrender/lib/zrender.js","webpack:///./node_modules/echarts/lib/stream/Scheduler.js","webpack:///./node_modules/echarts/lib/model/Component.js","webpack:///./node_modules/zrender/lib/core/util.js","webpack:///./node_modules/echarts/lib/coord/axisDefault.js","webpack:///./node_modules/zrender/lib/animation/easing.js","webpack:///./node_modules/zrender/lib/graphic/Text.js","webpack:///./node_modules/zrender/lib/graphic/helper/fixShadow.js","webpack:///./node_modules/echarts/lib/model/Global.js","webpack:///./node_modules/echarts/lib/visual/symbol.js","webpack:///./node_modules/echarts/lib/data/DataDiffer.js","webpack:///./node_modules/echarts/lib/ExtensionAPI.js","webpack:///./node_modules/echarts/lib/coord/Axis.js","webpack:///./node_modules/zrender/lib/contain/util.js","webpack:///./node_modules/echarts/lib/data/helper/completeDimensions.js","webpack:///./node_modules/zrender/lib/contain/windingLine.js","webpack:///./node_modules/zrender/lib/graphic/shape/Polygon.js","webpack:///./src/view/single-page/home/home.vue?facf","webpack:///src/view/single-page/home/home.vue","webpack:///./src/view/single-page/home/home.vue?b868","webpack:///./src/view/single-page/home/home.vue","webpack:///./src/view/single-page/home/index.js","webpack:///./node_modules/echarts/lib/layout/points.js","webpack:///./node_modules/echarts/lib/util/throttle.js","webpack:///./node_modules/echarts/lib/util/component.js","webpack:///./node_modules/echarts/lib/model/globalDefault.js","webpack:///./node_modules/zrender/lib/graphic/helper/fixClipWithShadow.js","webpack:///./node_modules/echarts/lib/scale/Interval.js","webpack:///./node_modules/echarts/lib/model/referHelper.js","webpack:///./node_modules/echarts/lib/scale/Log.js","webpack:///./node_modules/zrender/lib/graphic/shape/Arc.js","webpack:///./node_modules/echarts/lib/data/OrdinalMeta.js","webpack:///./node_modules/echarts/lib/coord/cartesian/GridModel.js","webpack:///./node_modules/echarts/lib/data/helper/sourceType.js","webpack:///./node_modules/echarts/lib/scale/helper.js","webpack:///./node_modules/echarts/lib/chart/bar.js","webpack:///./node_modules/zrender/lib/contain/line.js","webpack:///./node_modules/zrender/lib/core/BoundingRect.js","webpack:///./node_modules/zrender/lib/animation/requestAnimationFrame.js","webpack:///./node_modules/echarts/lib/loading/default.js","webpack:///./node_modules/echarts/lib/model/mixin/areaStyle.js","webpack:///./node_modules/zrender/lib/graphic/helper/smoothBezier.js","webpack:///./node_modules/echarts/lib/layout/barGrid.js","webpack:///./node_modules/zrender/lib/graphic/mixin/RectText.js","webpack:///./node_modules/echarts/lib/coord/axisModelCreator.js","webpack:///./node_modules/zrender/lib/contain/arc.js","webpack:///./node_modules/echarts/lib/chart/line/helper.js","webpack:///./node_modules/echarts/lib/util/symbol.js","webpack:///./node_modules/zrender/lib/graphic/helper/text.js","webpack:///./node_modules/echarts/lib/component/tooltip/TooltipModel.js","webpack:///./node_modules/zrender/lib/graphic/shape/BezierCurve.js","webpack:///./src/view/single-page/home/home.vue?3c11","webpack:///./node_modules/echarts/lib/component/axis.js","webpack:///./node_modules/zrender/lib/Storage.js","webpack:///./node_modules/echarts/lib/view/Component.js","webpack:///./node_modules/echarts/lib/data/helper/createDimensions.js","webpack:///./node_modules/echarts/lib/chart/bar/barItemStyle.js","webpack:///./node_modules/echarts/lib/export.js","webpack:///./node_modules/echarts/lib/visual/aria.js","webpack:///./node_modules/zrender/lib/mixin/Animatable.js","webpack:///./node_modules/echarts/lib/coord/geo/parseGeoJson.js","webpack:///./node_modules/echarts/lib/theme/light.js","webpack:///./node_modules/echarts/lib/chart/helper/labelHelper.js","webpack:///./node_modules/zrender/lib/graphic/shape/Rect.js","webpack:///./node_modules/echarts/lib/model/OptionManager.js","webpack:///./node_modules/zrender/lib/graphic/shape/Line.js","webpack:///./node_modules/zrender/lib/mixin/Draggable.js","webpack:///./node_modules/echarts/lib/component/axisPointer.js","webpack:///./node_modules/zrender/lib/graphic/Path.js","webpack:///./node_modules/echarts/lib/coord/cartesian/Cartesian2D.js","webpack:///./node_modules/echarts/lib/chart/helper/createRenderPlanner.js","webpack:///./node_modules/echarts/lib/component/axisPointer/modelHelper.js","webpack:///./node_modules/zrender/lib/dom/HandlerProxy.js","webpack:///./node_modules/echarts/lib/coord/cartesian/Cartesian.js","webpack:///./node_modules/echarts/lib/processor/dataStack.js","webpack:///./node_modules/zrender/lib/Handler.js","webpack:///./node_modules/zrender/lib/graphic/shape/Polyline.js","webpack:///./node_modules/echarts/lib/component/axisPointer/AxisPointerView.js","webpack:///./node_modules/zrender/lib/graphic/CompoundPath.js","webpack:///./node_modules/echarts/lib/chart/line/poly.js","webpack:///./node_modules/zrender/lib/core/LRU.js","webpack:///./node_modules/zrender/lib/Element.js","webpack:///./node_modules/zrender/lib/contain/path.js","webpack:///./node_modules/zrender/lib/graphic/shape/Circle.js","webpack:///./node_modules/zrender/lib/graphic/Pattern.js","webpack:///./node_modules/echarts/lib/component/axisPointer/BaseAxisPointer.js","webpack:///./node_modules/zrender/lib/graphic/RadialGradient.js","webpack:///./node_modules/zrender/lib/core/guid.js","webpack:///./node_modules/echarts/lib/model/mixin/boxLayout.js","webpack:///./node_modules/echarts/lib/coord/axisTickLabelBuilder.js","webpack:///./node_modules/echarts/lib/util/model.js","webpack:///./node_modules/echarts/lib/scale/Scale.js","webpack:///./node_modules/zrender/lib/container/Group.js","webpack:///./node_modules/zrender/lib/core/bbox.js","webpack:///./node_modules/echarts/lib/model/mixin/colorPalette.js","webpack:///./node_modules/echarts/lib/chart/bar/helper.js","webpack:///./node_modules/zrender/lib/contain/cubic.js","webpack:///./node_modules/zrender/lib/contain/text.js","webpack:///./node_modules/echarts/lib/view/Chart.js","webpack:///./node_modules/echarts/lib/component/axisPointer/axisTrigger.js","webpack:///./node_modules/echarts/lib/coord/cartesian/Axis2D.js","webpack:///./node_modules/echarts/lib/data/Source.js","webpack:///./node_modules/zrender/lib/Painter.js","webpack:///./node_modules/echarts/lib/util/format.js","webpack:///./node_modules/echarts/lib/data/helper/dataStackHelper.js","webpack:///./node_modules/zrender/lib/tool/transformPath.js","webpack:///./node_modules/echarts/lib/chart/line.js","webpack:///./node_modules/echarts/lib/chart/line/lineAnimationDiff.js","webpack:///./node_modules/echarts/lib/chart/line/LineView.js","webpack:///./node_modules/echarts/lib/theme/dark.js","webpack:///./node_modules/echarts/lib/component/axis/CartesianAxisView.js","webpack:///./node_modules/echarts/lib/coord/geo/Region.js","webpack:///./node_modules/echarts/lib/stream/task.js","webpack:///./node_modules/echarts/lib/chart/helper/SymbolDraw.js","webpack:///./node_modules/echarts/lib/util/layout.js","webpack:///./node_modules/echarts/lib/component/axis/AxisBuilder.js","webpack:///./node_modules/echarts/lib/preprocessor/backwardCompat.js","webpack:///./node_modules/echarts/lib/visual/seriesColor.js","webpack:///./node_modules/echarts/lib/processor/dataSample.js","webpack:///./node_modules/echarts/lib/model/mixin/textStyle.js","webpack:///./node_modules/echarts/lib/component/axisPointer/viewHelper.js"],"names":["echarts","__webpack_require__","registerAction","type","event","update","zrUtil","layout","gridModel","axisModel","opt","grid","coordinateSystem","axis","otherAxisOnZeroOf","getAxesOnZeroOf","rawAxisPosition","position","axisPosition","axisDim","dim","rect","getRect","rectBound","x","width","y","height","idx","left","right","top","bottom","onZero","axisOffset","get","posBound","onZeroCoord","toGlobalCoord","dataToCoord","Math","max","min","rotation","PI","dirMap","labelDirection","tickDirection","nameDirection","labelOffset","retrieve","labelInside","labelRotate","z2","exports","graphic","extendComponentView","render","ecModel","this","group","removeAll","add","Rect","shape","style","defaults","fill","getItemStyle","silent","registerPreprocessor","option","xAxis","yAxis","ComponentModel","ComponentView","_sourceHelper","detectSourceFormat","_sourceType","SERIES_LAYOUT_BY_COLUMN","extend","defaultOption","seriesLayoutBy","sourceHeader","dimensions","source","optionUpdated","DEFAULT_MIN_MERGE","DEFAULT_MIN_GALLOPING","minRunLength","n","r","makeAscendingRun","array","lo","hi","compare","runHi","reverseRun","t","binaryInsertionSort","start","mid","pivot","gallopLeft","value","length","hint","lastOffset","maxOffset","offset","tmp","m","gallopRight","TimSort","runStart","runLength","minGallop","stackSize","pushRun","_runStart","_runLength","mergeRuns","mergeAt","forceMergeRuns","i","start1","length1","start2","length2","k","mergeLow","mergeHigh","cursor1","cursor2","dest","count1","count2","exit","_minGallop","Error","customCursor","customDest","sort","remaining","ts","minRun","force","module","windingLine","EPSILON","isAroundEqual","a","b","abs","contain","points","w","p","p2","p0","Clip","color","_util","isArrayLike","arraySlice","Array","prototype","slice","defaultGetter","target","key","defaultSetter","interpolateNumber","p1","percent","interpolateString","interpolateArray","out","arrDim","len","len2","j","fillArr","arr0","arr1","arr0Len","arr1Len","isPreviousLarger","push","call","isNaN","isArraySame","catmullRomInterpolateArray","p3","t2","t3","catmullRomInterpolate","v0","v1","cloneValue","ret","rgba2String","rgba","floor","join","getArrayDim","keyframes","lastValue","createTrackClip","animator","easing","oneTrackDone","propName","forceAnimate","getter","_getter","setter","_setter","useSpline","trackLen","trackMaxTime","firstVal","isValueArray","isValueColor","isValueString","time","kfPercents","kfValues","prevValue","isAllValueEqual","colorArray","parse","_target","lastFrame","lastFramePercent","onframe","frame","range","clip","life","loop","_loop","delay","_delay","ondestroy","Animator","_tracks","_clipCount","_doneList","_onframeList","_clipList","when","props","tracks","hasOwnProperty","during","callback","pause","_paused","resume","isPaused","_doneCallback","doneList","lastClip","self","clipCount","animation","addClip","oldOnFrame","stop","forwardToLast","clipList","removeClip","done","cb","getClips","_default","obj","Object","getOperationLogListByIdType","data","_httpClient__WEBPACK_IMPORTED_MODULE_4__","url","exportWordsBatchPZ","_libs_api_request__WEBPACK_IMPORTED_MODULE_3__","exportImagesByPzIdAndType","post","exportImagesForPZ","exportImagesBatchPZ","exportExcelForJXGZPZ","getListByCondition","pangzhanStatistics","exportJXGZWord","concat","id","exportSNJBWord","exportYYLGZWord","__webpack_exports__","zrColor","eventUtil","env","formatUtil","each","toCamelCase","vendors","gCssText","assembleTransition","duration","transitionCurve","transitionText","map","vendorPrefix","assembleFont","textStyleModel","cssText","fontSize","getTextColor","getFont","round","name","val","assembleCssText","tooltipModel","transitionDuration","backgroundColor","getModel","padding","canvasSupported","toHex","borderName","camelCase","normalizeCssArray","TooltipContent","container","api","wxa","el","document","createElement","zr","_zr","getZr","_x","getWidth","_y","getHeight","appendChild","_container","_show","_hideTimeout","onmouseenter","_enterable","clearTimeout","_inContent","onmousemove","e","window","handler","normalizeEvent","dispatch","onmouseleave","hideLater","_hideDelay","constructor","stl","currentStyle","defaultView","getComputedStyle","domStyle","show","display","innerHTML","setContent","content","setEnterable","enterable","getSize","clientWidth","clientHeight","moveTo","viewportRootOffset","painter","getViewportRootOffset","offsetLeft","offsetTop","hide","setTimeout","bind","isShow","computed","F_huaou_iview_admin_admin_huaou_huaou_node_modules_babel_runtime_helpers_builtin_es6_objectSpread__WEBPACK_IMPORTED_MODULE_0__","vuex__WEBPACK_IMPORTED_MODULE_4__","PROJECT","state","user","project","BUILDING","building","ROLE","watch","deep","console","log","getList","buildingChange","created","GestureMgr","_track","dist","pointPair","dx","dy","sqrt","center","recognize","root","_doTrack","_recognize","clear","touches","trackItem","touch","pos","clientToLocal","zrX","zrY","eventName","recognizers","gestureInfo","pinch","track","pinchEnd","pinchPre","pinchScale","isFinite","pinchCenter","pinchX","pinchY","matrix","vector","mIdentity","identity","isNotAroundZero","Transformable","opts","scale","origin","transformableProto","transform","needLocalTransform","updateTransform","parent","parentHasTransform","create","getLocalTransform","mul","copy","invTransform","invert","setTransform","ctx","dpr","restoreTransform","tmpTransform","decomposeTransform","sx","sy","atan2","getGlobalScale","transformCoordToLocal","v2","applyTransform","transformCoordToGlobal","rotate","Displayable","BoundingRect","imageHelper","ZImage","brush","prevEl","src","image","_image","createOrUpdateImage","onload","isImageReady","aspect","sWidth","sHeight","drawImage","text","drawRectText","getBoundingRect","_rect","inherits","_config","_model","__DEV__","makeInner","getDataItemValue","_referHelper","getCoordSysDefineBySeries","createHashMap","isArray","isString","isObject","isTypedArray","Source","assert","SOURCE_FORMAT_ORIGINAL","SOURCE_FORMAT_ARRAY_ROWS","SOURCE_FORMAT_OBJECT_ROWS","SOURCE_FORMAT_KEYED_COLUMNS","SOURCE_FORMAT_UNKNOWN","SOURCE_FORMAT_TYPED_ARRAY","SERIES_LAYOUT_BY_ROW","inner","datasetModel","sourceFormat","item","getSource","seriesModel","resetSourceDefaulter","datasetMap","prepareSource","seriesOption","fromDataset","dimensionsDefine","getDatasetModel","datasetOption","completeResult","completeBySourceData","encodeDefine","encode","makeDefaultEncode","startIndex","dimensionsDetectCount","normalizeDimensionsDefine","findPotentialName","potentialNameDimIndex","arrayRowsTravelFirst","index","objectRowsCollectDimensions","colArr","value0","nameMap","displayName","exist","count","set","maxLoop","Infinity","firstIndex","coordSysDefine","encodeItemName","encodeSeriesName","seriesType","subType","nSeriesMap","cSeriesMap","uid","datasetRecord","categoryWayDim","valueWayDim","coordSysDims","coordDim","firstCategoryDimIndex","dataDim","categoryAxisMap","firstNotOrdinal","doGuessOrdinal","nameDimIndex","itemName","seriesName","thisData","getComponent","datasetIndex","guessOrdinal","dimIndex","result","dimName","sample","detectValue","row","modelUtil","finder","point","seriesIndex","getSeriesByIndex","getData","dataIndex","queryDataIndex","getItemGraphicEl","coordSys","getTooltipPosition","dataToPoint","getValues","mapDimension","clone","_symbol","createSymbol","_number","parsePercent","_labelHelper","getDefaultLabel","SymbolClz","seriesScope","Group","updateData","symbolProto","getSymbolSize","symbolSize","getItemVisual","getScale","driftSymbol","drift","_createSymbol","symbolType","keepAspect","symbolPath","attr","culling","_symbolType","stopSymbolAnimation","toLastFrame","childAt","stopAnimation","getSymbolPath","highlight","trigger","downplay","setZ","zlevel","z","setDraggable","draggable","cursor","hostModel","isInit","updateProps","_updateCommon","fadeIn","opacity","initProps","_seriesModel","normalStyleAccessPath","emphasisStyleAccessPath","normalLabelAccessPath","emphasisLabelAccessPath","useStyle","strokeNoScale","itemStyle","hoverItemStyle","symbolRotate","symbolOffset","labelModel","hoverLabelModel","hoverAnimation","cursorStyle","hasItemOption","itemModel","getItemModel","getShallow","elStyle","setColor","symbolInnerColor","setStyle","liftZ","z2Origin","__z2Origin","useNameLabel","getLabelDefaultText","getName","setLabelStyle","labelFetcher","labelDataIndex","defaultText","isRectText","autoColor","off","hoverStyle","setHoverStyle","isAnimationEnabled","onEmphasis","incremental","ratio","animateTo","onNormal","on","fadeOut","keepLabel","createListFromArray","axisHelper","axisModelCommonMixin","Model","_layout","getLayoutRect","_dataStackHelper","enableDataStack","isDimensionStacked","getStackedDimension","_completeDimensions","completeDimensions","_createDimensions","createDimensions","createList","dataStack","createScale","dataExtent","isInstance","mixin","createScaleByModel","setExtent","niceScaleExtent","mixinAxisModelCommonMethods","ArrayCtor","Float32Array","m1","m2","out0","out1","out2","out3","out4","out5","translate","v","rad","aa","ac","atx","ab","ad","aty","st","sin","ct","cos","vx","vy","det","BaseBarSeries","dependencies","brushSelector","getProgressive","getProgressiveThreshold","progressiveThreshold","largeThreshold","register","node","records","initGlobalListeners","record","useHandler","eventType","dis","makeDispatchAction","dispatchAction","dispatchTooltipFinally","pendings","initialized","curry","doEnter","onLeave","actuallyPayload","showLen","showTip","hideLen","hideTip","currTrigger","payload","pendingList","unregister","Scale","OrdinalMeta","scaleProto","OrdinalScale","init","ordinalMeta","extent","categories","_ordinalMeta","_extent","getOrdinal","rank","normalize","getTicks","ticks","getLabel","isBlank","unionExtentFromData","unionExtent","getApproximateExtent","getOrdinalMeta","niceTicks","noop","niceExtent","Style","Element","RectText","__clipPaths","__dirty","invisible","dragging","rectHover","progressive","inplace","beforeBrush","afterBrush","rectContain","traverse","context","coord","dirty","__zr","refresh","animateStyle","animate","attrKV","arrySlice","Eventful","_$handlers","one","_h","h","isSilent","newList","l","args","arguments","argLen","apply","splice","triggerWithContext","getMin","rangeStart","eqNaN","getMax","rangeEnd","getNeedCrossZero","getCoordSysModel","setRange","resetRange","coordinateSystemCreators","CoordinateSystemManager","_coordinateSystems","coordinateSystems","creater","list","getCoordinateSystems","coordinateSystemCreator","curve","vec2","bbox","devicePixelRatio","CMD","M","L","C","Q","A","Z","R","min2","max2","mathMin","mathMax","mathCos","mathSin","mathSqrt","mathAbs","hasTypedArray","PathProxy","notSaveData","_saveData","_ctx","_xi","_yi","_x0","_y0","_ux","_uy","_len","_lineDash","_dashOffset","_dashIdx","_dashSum","setScale","getContext","beginPath","addData","lineTo","exceedUnit","_needsDash","_dashedLineTo","bezierCurveTo","x1","y1","x2","y2","x3","y3","_dashedBezierTo","quadraticCurveTo","_dashedQuadraticTo","arc","cx","cy","startAngle","endAngle","anticlockwise","arcTo","radius","closePath","x0","y0","toStatic","stroke","setLineDash","lineDash","lineDashSum","setLineDashOffset","setData","appendPath","path","appendSize","appendPathData","cmd","_expandData","_prevCmd","newData","dash","dashSum","nDash","cubicAt","bezierLen","tmpLen","Number","MAX_VALUE","xi","yi","fromLine","fromCubic","fromQuadratic","rx","ry","fromArc","rebuildPath","d","ux","uy","theta","dTheta","psi","fs","scaleX","scaleY","isEllipse","numberUtil","scaleHelper","IntervalScale","intervalScaleProto","mathCeil","ceil","mathFloor","ONE_SECOND","ONE_MINUTE","ONE_HOUR","ONE_DAY","bisect","TimeScale","stepLvl","_stepLvl","date","Date","formatTime","getSetting","getFullYear","getMonth","getDate","splitNumber","minInterval","maxInterval","interval","_interval","fixMin","fixMax","approxTickNum","span","approxInterval","scaleLevelsLen","scaleLevels","level","yearSpan","yearStep","nice","timezoneOffset","getTimezoneOffset","fixExtent","_niceExtent","parseDate","methodName","model","useUTC","SeriesModel","getInitialData","legendHoverLink","clipOverflow","label","lineStyle","step","smooth","smoothMonotone","symbol","showSymbol","showAllSymbol","connectNulls","sampling","animationEasing","hoverLayerThreshold","wx","getSystemInfoSync","browser","os","svgSupported","touchEventsSupported","worker","navigator","detect","userAgent","ua","firefox","match","ie","edge","weChat","test","version","SVGRect","pointerEventsSupported","pathTool","colorTool","Path","Image","Text","Circle","Sector","Ring","Polygon","Polyline","Line","BezierCurve","Arc","CompoundPath","LinearGradient","RadialGradient","IncrementalDisplayable","EMPTY_OBJ","extendShape","extendPath","pathData","extendFromString","makePath","createFromString","boundingRect","centerGraphic","resizePath","makeImage","imageUrl","img","mergePath","pathRect","calculateTransform","subPixelOptimizeLine","param","lineWidth","subPixelOptimize","subPixelOptimizeRect","originX","originY","originWidth","originHeight","positiveOrNegative","doubledPosition","hasFillOrStroke","fillOrStroke","liftColor","lift","cacheElementStl","__hoverStlDirty","__hoverStl","normalStyle","__normalStl","doSingleEnterHover","__isHover","useHoverLayer","addHover","insideRollbackOpt","rollbackInsideStyle","extendFrom","applyInsideStyle","insideOriginalTextPosition","textFill","doSingleLeaveHover","normalStl","removeHover","doEnterHover","child","doLeaveHover","setElementHoverStl","hoverStl","onElementMouseOver","__hoverSilentOnTouch","zrByTouch","__isEmphasis","onElementMouseOut","enterEmphasis","leaveEmphasis","hoverSilentOnTouch","emphasisStyle","normalModel","emphasisModel","normalSpecified","emphasisSpecified","baseText","labelDimIndex","showNormal","showEmphasis","getFormattedLabel","isFunction","normalStyleText","emphasisStyleText","retrieve2","setTextStyle","textStyle","specifiedTextStyle","isEmphasis","setTextStyleCommon","host","setText","defaultColor","textPosition","textOffset","textRotation","textDistance","richResult","globalTextStyle","richItemNames","getRichItemNames","richTextStyle","setTokenTextStyle","rich","forceRich","richItemNameMap","parentModel","isBlock","getAutoColor","textStroke","textBorderColor","textStrokeWidth","textBorderWidth","originalTextPosition","insideRollback","fontStyle","fontWeight","fontFamily","textAlign","textVerticalAlign","textLineHeight","textWidth","textHeight","textTag","disableBox","textBackgroundColor","textPadding","textBorderRadius","textBoxShadowColor","textBoxShadowBlur","textBoxShadowOffsetX","textBoxShadowOffsetY","textShadowColor","textShadowBlur","textShadowOffsetX","textShadowOffsetY","useInsideStyle","indexOf","gTextStyleModel","trim","animateOrSetProps","isUpdate","animatableModel","animationEnabled","postfix","animationDelay","getAnimationDelayParams","getTransform","ancestor","mat","transformDirection","direction","hBase","vBase","vertex","groupTransition","g1","g2","elMap1","getElMap","isGroup","anid","oldEl","newProp","getAnimatableProps","g","elMap","clipPointsByRect","clipRectByRect","targetRect","createIcon","iconStr","replace","POSSIBLE_STYLES","compatEC2ItemStyle","itemStyleOpt","styleName","normalItemStyleOpt","normal","emphasisItemStyleOpt","emphasis","merge","convertNormalEmphasis","optType","useExtend","normalOpt","emphasisOpt","removeEC3NormalStatus","compatTextStyle","labelOptSingle","TEXT_STYLE_OPTIONS","compatEC3CommonStyles","processSeries","seriesOpt","markPoint","markLine","markArea","nodes","edgeData","links","edges","mpData","mlData","breadcrumb","levels","leaves","toArr","o","toObj","isTheme","series","axes","axisName","axisOpt","axisPointer","parallel","parallelOpt","parallelAxisDefault","calendar","calendarOpt","radar","radarOpt","geo","geoOpt","regions","regionObj","timeline","timelineOpt","toolbox","toolboxOpt","feature","featureOpt","tooltip","properties","excludes","includes","title","polygon","lineX","lineY","keep","dataView","lang","dataZoom","zoom","back","magicType","line","bar","stack","tiled","restore","saveAsImage","typeNames","pie","scatter","effectScatter","tree","treemap","boxplot","candlestick","heatmap","lines","graph","sankey","funnel","gauge","pictorialBar","themeRiver","sunburst","aria","general","withTitle","withoutTitle","single","prefix","withName","withoutName","multiple","separator","middle","end","allData","partialData","isDataItemOption","DefaultDataProvider","dimSize","seriesDataToSource","_source","_data","_offset","_dimSize","methods","providerMethods","providerProto","pure","persistent","arrayRows_column","getItem","appendData","appendDataSimply","arrayRows_row","objectRows","countSimply","getItemSimply","keyedColumns","col","dims","newCol","oldCol","original","typedArray","clean","rawValueGetters","arrayRows","getRawValueSimply","dataItem","defaultDimValueGetters","getDimValueSimply","converDataValue","_dimensionInfos","_rawData","dimInfo","dimType","parseAndCollect","NaN","retrieveRawValue","getRawDataItem","getProvider","getDimensionInfo","retrieveRawAttr","fixShadow","STYLE_COMMON_PROPS","createLinearGradient","global","canvasGradient","createRadialGradient","lineDashOffset","shadowBlur","shadowOffsetX","shadowOffsetY","font","textFont","textRect","transformText","textOrigin","truncate","blend","prevStyle","firstDraw","prop","fillStyle","strokeStyle","globalAlpha","globalCompositeOperation","hasStroke","getLineScale","hasFill","otherStyle","overwrite","newStyle","getGradient","method","colorStops","addColorStop","styleProto","debugMode","OTHER_DIMENSIONS","summarizeDimensions","summary","notExtraCoordDimMap","defaultedLabel","defaultedTooltip","dimItem","coordDimArr","coordDimIndex","isExtraCoord","mayLabelDimType","defaultTooltip","otherDim","otherDimArr","otherDims","dataDimsOnCoord","encodeFirstDimNotExtra","dimArr","encodeLabel","encodeTooltip","getDimensionTypeByAxis","axisType","getMarkerPosition","pt","clampData","getLayout","size","offsetIndex","getBaseAxis","isHorizontal","barMinHeight","barMinAngle","large","progressiveChunkMode","util","_event","Dispatcher","requestAnimationFrame","Animation","options","stage","_clips","_running","_time","_pausedTime","_pauseStart","addAnimator","clips","removeAnimator","_update","getTime","delta","deferredEvents","deferredClips","_needsRemove","pop","fire","_startLoop","isFinished","List","_dimensionHelper","CoordinateSystem","coordSysDimDefs","coordSysName","registeredCoordSys","axisMap","getDimensionsInfo","hasNameEncode","dimInfoList","coordDimensions","generateCoord","categoryAxisModel","stackCalculationInfo","setCalculationInfo","dimValueGetter","isNeedCompleteOrdinalData","itemOpt","defaultDimValueGetter","initData","sampleItem","firstDataNotNull","transformPath","cc","vMag","vRatio","u","vAngle","acos","processArc","fa","psiDeg","xp","yp","lambda","f","cxp","cyp","createPathProxyFromString","cs","RegExp","prevCmd","arr","split","cpx","cpy","str","c","charAt","shift","parseFloat","ctlPtx","ctlPty","createPathOptions","pathProxy","buildPath","pathEls","pathList","pathEl","createPathProxy","__dirtyPath","pathBundle","RADIAN_EPSILON","_trim","linearMap","domain","clamp","subDomain","subRange","all","precision","returnStr","toFixed","asc","getPrecision","getPrecisionSafe","toString","eIndex","dotIndex","getPixelPrecision","pixelExtent","LN10","dataQuantity","sizeQuantity","getPercentWithPrecision","valueList","sum","reduce","acc","digits","pow","votesPerQuota","targetSeats","seats","votes","currentSum","remainder","NEGATIVE_INFINITY","maxId","MAX_SAFE_INTEGER","remRadian","radian","pi2","isRadianAroundZero","TIME_REG","exec","hour","toUpperCase","UTC","quantity","quantityExponent","nf","exponent","exp10","reformIntervals","littleThan","curr","currClose","close","lg","isNumeric","_dataProvider","_format","getTooltipMarker","formatTpl","DIMENSION_LABEL_REG","getDataParams","dataType","rawValue","getRawValue","rawDataIndex","getRawIndex","componentType","mainType","componentSubType","seriesId","marker","$vars","status","labelProp","params","formatter","formatTooltip","makeStyleMapper","getLineStyle","getLineDash","lineType","dotSize","dashSize","Displayble","IncrementalDisplayble","_displayables","_temporaryDisplayables","_cursor","notClear","clearDisplaybles","addDisplayable","displayable","notPersistent","addDisplayables","displayables","eachPendingDisplayable","childRect","union","localPos","zrender","timsort","GlobalModel","ExtensionAPI","OptionManager","backwardCompat","ChartView","_throttle","throttle","seriesColor","loadingDefault","Scheduler","lightTheme","darkTheme","parseClassType","TEST_FRAME_REMAIN_TIME","PRIORITY_PROCESSOR_FILTER","PRIORITY_PROCESSOR_STATISTIC","PRIORITY_VISUAL_LAYOUT","PRIORITY_VISUAL_GLOBAL","PRIORITY_VISUAL_CHART","PRIORITY_VISUAL_COMPONENT","PRIORITY_VISUAL_BRUSH","PRIORITY","PROCESSOR","FILTER","STATISTIC","VISUAL","LAYOUT","GLOBAL","CHART","COMPONENT","BRUSH","IN_MAIN_PROCESS","OPTION_UPDATED","ACTION_REG","createRegisterEventWithLowercaseName","toLowerCase","MessageCenter","ECharts","dom","theme","themeStorage","_dom","defaultRenderer","renderer","_throttledZrFlush","flush","_theme","_chartsViews","_chartsMap","_componentsViews","_componentsMap","_coordSysMgr","_api","createExtensionAPI","prioritySortFunc","__prio","visualFuncs","dataProcessorFuncs","_scheduler","_messageCenter","_initEvents","resize","_pendingActions","_onframe","bindRenderedEvent","setAsPrimitive","echartsProto","doConvertPixel","coordSysList","parseFinder","_disposed","scheduler","prepare","updateMethods","flushPendingActions","triggerUpdatedEvent","unfinished","remainTime","startTime","performSeriesTasks","performDataProcessorTasks","updateStreamModes","performVisualTasks","renderSeries","getDom","setOption","notMerge","lazyUpdate","optionManager","optionPreprocessorFuncs","setTheme","getOption","getDevicePixelRatio","getRenderedCanvas","pixelRatio","getSvgDataUrl","storage","getDisplayList","pathToDataUrl","getDataURL","excludeComponents","excludesComponentViews","eachComponent","component","view","__viewId","ignore","getType","toDataURL","getConnectedDataURL","groupId","MAX_NUMBER","connectedGroups","canvasList","instances","chart","canvas","getBoundingClientRect","targetCanvas","createCanvas","refreshImmediately","convertToPixel","convertFromPixel","containPixel","models","containPoint","getVisual","visualType","defaultMainType","dataIndexInside","indexOfRawIndex","getViewOfComponentModel","componentModel","getViewOfSeriesModel","prepareAndUpdate","coordSysMgr","restoreData","clearColorPalette","setBackgroundColor","colorArr","stringify","performPostUpdateFuncs","ecIns","componentDirtyList","componentView","__alive","seriesDirtyMap","eachSeries","chartView","setDirty","dirtyMap","updateView","markUpdateMethod","updateVisual","updateLayout","restorePipelines","prepareStageTasks","prepareView","plan","updateDirectly","query","condition","excludeSeriesId","normalizeToArray","callView","__model","chartsMap","doDispatchAction","payloadType","escapeConnect","actionWrap","actions","actionInfo","cptType","updateMethod","payloads","batched","batch","eventObj","eventObjBatch","isHighDown","batchItem","action","main","sub","pendingActions","isComponent","viewList","viewMap","doPrepare","viewId","classType","Clazz","getClass","__id","__ecComponentInfo","componentIndex","renderTask","dispose","remove","renderComponents","dirtyList","updateZ","updatePayload","perform","getPerformArgs","updateBlend","updateHoverLayerStatus","postUpdateFuncs","func","_loadingFX","optionChanged","resetOption","showLoading","cfg","hideLoading","loadingEffects","makeActionFromEvent","eventActionMap","MOUSE_EVENT_NAMES","elCount","blendMode","ecInstance","getComponentByElement","modelInfo","eveName","dataModel","eventData","actionType","isDisposed","setAttribute","DOM_ATTRIBUTE_KEY","idBase","groupIdBase","mapDataStores","enableConnect","STATUS_PENDING","STATUS_UPDATING","STATUS_UPDATED","STATUS_KEY","updateConnectedChartsStatus","charts","otherChart","otherCharts","existInstance","getInstanceByDom","connect","disConnect","disconnect","getAttribute","getInstanceById","registerTheme","preprocessorFunc","registerProcessor","priority","processor","normalizeRegister","registerPostUpdate","postUpdateFunc","registerCoordinateSystem","getCoordinateSystemDimensions","coordSysCreator","registerLayout","layoutTask","registerVisual","visualTask","targetList","fn","defaultPriority","stageHandler","wrapStageHandler","__raw","registerLoading","loadingFx","extendComponentModel","extendSeriesModel","extendChartView","setCanvasCreator","creator","$override","registerMap","mapName","geoJson","specialAreas","features","JSON","Function","getMap","dataTool","___ec_export","scaleAndAdd","lenSquare","lengthSquare","div","dot","s","distance","distanceSquare","distSquare","negate","lerp","LRU","kCSSColorTable","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","clampCssByte","clampCssAngle","clampCssFloat","parseCssInt","parseInt","parseCssFloat","cssHueToRgb","lerpNumber","setRgba","copyRgba","colorCache","lastRemovedArr","putToCache","colorStr","rgbaArr","put","cached","op","ep","fname","substr","alpha","hsla2rgba","iv","hsla","rgba2hsla","H","S","G","B","vMin","vMax","deltaR","deltaG","deltaB","fastLerp","normalizedValue","colors","leftIndex","rightIndex","leftColor","rightColor","dv","fastMapToColor","fullOutput","mapToColor","modifyHSL","modifyAlpha","arrColor","Gradient","findPointFromSeries","layoutUtil","globalListener","axisPointerViewHelper","proxyRect","tooltipContent","_tooltipContent","_tooltipModel","_ecModel","_lastDataByCoordSys","_alwaysShowContent","_initGlobalListener","_keepShow","triggerOn","_tryShow","_hide","_lastX","_lastY","_refreshUpdateTimeout","manuallyShowTip","from","_ticket","dataByCoordSys","offsetX","offsetY","tooltipOption","_manuallyAxisShowTip","pointInfo","findHover","manuallyHideTip","coordSysAxesInfo","buildTooltipModel","_showAxisTooltip","_showSeriesItemTooltip","_showComponentItemTooltip","_showOrMove","_showTimout","globalTooltipModel","singleDefaultHTML","singleParamsList","singleTooltipModel","itemCoordSys","dataByAxis","axisIndex","axisValue","seriesDefaultHTML","valueLabel","getValueLabel","seriesDataIndices","valueLabelOpt","idxItem","dataParams","axisId","getAxisRawValue","axisValueLabel","firstLine","encodeHTML","reverse","positionExpr","_updateContentNotChangedOnAxis","_updatePosition","_showTooltipContent","random","tooltipTrigger","defaultHtml","asyncTicket","tooltipOpt","subTooltipModel","html","cbTicket","viewWidth","viewHeight","contentSize","align","vAlign","viewSize","layoutRect","calcTooltipPosition","refixTooltipPosition","isCenterAlign","confineTooltipPosition","lastCoordSys","contentNotChanged","lastItemCoordSys","indexCoordSys","lastDataByAxis","thisItemCoordSys","thisDataByAxis","lastItem","indexAxis","thisItem","lastIndices","newIndices","lastIdxItem","newIdxItem","modelCascade","resultModel","gapH","gapV","getOuterSize","paddingLeft","paddingRight","borderLeftWidth","borderRightWidth","paddingTop","paddingBottom","borderTopWidth","borderBottomWidth","domWidth","domHeight","gap","rectWidth","rectHeight","_clazz","enableClassExtend","enableClassCheck","lineStyleMixin","areaStyleMixin","textStyleMixin","itemStyleMixin","doGet","pathArr","getParent","getParentMethod","mergeOption","ignoreParent","parsePath","thisParentModel","isEmpty","Ctor","setReadOnly","customizeGetParent","easingFuncs","_life","_initialized","onrestart","globalTime","deltaTime","_startTime","easingFunc","schedule","restart","arg","r0","PI2","globalCoord","AxisPointerModel","snap","triggerTooltip","link","animationDurationUpdate","shadowStyle","margin","borderColor","borderWidth","shadowColor","handle","icon","axisModelCreator","AxisModel","superApply","queryComponents","gridIndex","gridId","getAxisType","extraOption","_vector","v2Create","v2DistSquare","mathPow","EPSILON_NUMERIC","THREE_SQRT","ONE_THIRD","_v0","_v1","_v2","isAroundZero","onet","cubicDerivativeAt","cubicRootAt","roots","t1","disc","K","discSqrt","Y1","Y2","T","ASqrt","cubicExtrema","extrema","cubicSubdivide","p01","p12","p23","p012","p123","p0123","cubicProjectPoint","prev","next","d1","d2","_t","quadraticAt","quadraticDerivativeAt","quadraticRootAt","quadraticExtremum","divider","quadraticSubdivide","quadraticProjectPoint","BaseAxisPointer","viewHelper","cartesianAxisHelper","AxisView","CartesianAxisPointer","makeElOption","elOption","axisPointerModel","axisPointerType","otherExtent","getCartesian","getOtherAxis","getGlobalExtent","pixelValue","buildElStyle","pointerOption","pointerShapeBuilder","graphicKey","pointer","layoutInfo","buildCartesianSingleLabelElOption","getHandleTransform","labelMargin","getTransformedPosition","updateHandleTransform","axisExtent","currPosition","cursorOtherValue","cursorPoint","tooltipOptions","verticalAlign","targetShape","makeLineShape","getAxisDimIndex","shadow","bandWidth","getBandWidth","makeRectShape","registerAxisPointerClass","fixClipWithShadow","clockwise","unitX","unitY","dev","addCommas","colorPaletteMixin","dataFormatMixin","getLayoutParams","mergeLayoutParam","_task","createTask","legendDataProvider","visualColorAccessPath","layoutMode","extraOpt","dataTask","dataTaskCount","reset","dataTaskReset","mergeDefaultAndTheme","wrapData","dataBeforeProcessed","autoSeriesName","inputPositionParams","themeSubType","hasClass","getTheme","getDefaultOption","defaultEmphasis","fillDataTextStyle","newSeriesOption","getRawData","task","getCurrentTask","getLinkedData","modifyOutputEnd","setOutputEnd","outputData","multipleSeries","formatArrayValue","vertially","setEachItem","dimHead","valStr","tooltipDims","formatSingleValue","tooltipDimLen","isValueArr","formattedValue","colorEl","isNameSpecified","getColorFromPalette","scope","requestColorNum","coordDimToDataDim","getAxisTooltipData","pipeTask","preventIncremental","pipelineContext","getSeriesAutoName","dataDims","nameArr","cloneShallow","dataTaskProgress","CHANGABLE_METHODS","wrapMethod","onDataSelfChange","pipeline","getPipeline","currentTask","agentStubMap","smoothSpline","smoothBezier","controlPoints","smoothConstraint","cp1","cp2","getBorderLineDash","r1","r2","r3","r4","total","_axisHelper","ifAxisCrossZero","estimateLabelUnionRect","Cartesian2D","Axis2D","isAxisUsedInTheGrid","Grid","_coordsMap","_coordsList","_axesMap","_axesList","_initCartesian","gridProto","fixAxisOnZero","axesMap","otherAxisDim","otherAxis","otherAxes","onZeroAxisIndex","canOnZeroToAxis","updateAxisTransform","coordBase","getExtent","axisExtentSum","toLocalCoord","axisPointerEnabled","_updateScale","ignoreContainLabel","gridRect","getBoxLayoutParams","axesList","adjustAxes","inverse","labelUnionRect","getAxis","axesMapOnDim","getAxes","xAxisIndex","yAxisIndex","coordList","getCartesians","_findConvertTarget","cartesian","pointToData","coordToData","xAxisModel","getReferringComponents","yAxisModel","coordsList","axisPositionUsed","axesCount","createAxisCreator","isCategory","onBand","addAxis","isCartesian2D","axesModels","findAxesModels","getTooltipAxes","baseAxes","baseAxis","axesTypes","grids","Pattern","returnFalse","createDom","newDom","newDomStyle","Layer","onselectstart","domBack","ctxBack","config","clearColor","motionBlur","lastFrameAlpha","__used","__drawIndex","__startIndex","__endIndex","getElementCount","initContext","createBackBuffer","clearAll","clearColorGradientOrPattern","haveMotionBLur","clearRect","__canvasGradient","getCanvasPattern","save","fillRect","globalImageCache","findExistImage","newImageOrSrc","cachedImgObj","hostEl","cbPayload","__zrImageSrc","pendingWrap","pending","imageOnLoad","__cachedImgObj","isDomLevel2","addEventListener","MOUSE_EVENT_REG","calculate","defaultGetZrXY","layerX","layerY","box","clientX","clientY","isTouch","targetTouches","changedTouches","zrDelta","wheelDelta","detail","button","which","undefined","attachEvent","removeEventListener","detachEvent","preventDefault","stopPropagation","cancelBubble","returnValue","notLeftMouse","DataDiffer","UNDEFINED","ID_PREFIX","dataCtors","float","Float64Array","int","Int32Array","ordinal","number","CtorUint32Array","Uint32Array","CtorUint16Array","Uint16Array","getIndicesCtor","_rawCount","cloneChunk","originalChunk","TRANSFERABLE_PROPERTIES","CLONE_PROPERTIES","transferProperties","__wrappedMethods","_calculationInfo","dimensionInfos","dimensionNames","invertedIndicesMap","dimensionInfo","dimensionName","createInvertedIndices","_indices","_count","_storage","_nameList","_idList","_optionModels","_visual","_itemVisuals","hasItemVisual","_itemLayouts","_graphicEls","_chunkSize","_chunkCount","_rawExtent","_approximateExtent","_dimensionsSummary","_invertedIndicesMap","listProto","prepareInvertedIndex","invertedIndices","getRawValueFromStore","rawIndex","chunkSize","chunkIndex","chunkOffset","chunk","getRawIndexWithoutIndices","getRawIndexWithIndices","getId","_idDimIdx","normalizeDimensions","cloneListForMapAndSample","excludeDimensions","allDimensions","originalStorage","cloneDimStore","getInitialExtent","originalDimStore","newDimStore","getDimension","getDimensionsOnCoord","dimensionsSummary","nameList","notProvider","_nameRepeatCount","_dimValueGetter","_initDataFromProvider","rawData","nameDimIdx","dimLen","dimensionInfoMap","idList","rawExtent","nameRepeatCount","chunkCount","lastChunkIndex","_nameDimIdx","itemId","DataCtor","resizeChunkArray","newStore","dimStorage","dimRawExtent","nameDim","nameDimChunk","getIndices","indices","thisCount","buffer","chunkStore","getByRawIndex","rawIdx","dimStore","_getFast","values","hasValue","getDataExtent","dimData","initialExtent","dimExtent","currEnd","useRaw","setApproximateExtent","getCalculationInfo","getSum","getMedian","dimDataArray","sortedDimDataArray","rawIndexOf","indexOfName","indicesOfNearest","maxDistance","nearestIndices","minDist","minDiff","diff","contextCompat","filterSelf","dim0","selectRange","originalCount","quickFinished","chunkStorage","dimStorage2","chunkStorage2","val2","dimk","mapArray","tmpRetValue","dataCount","retValue","rawExtentOnDim","downSample","dimension","rate","sampleValue","sampleIndex","targetStorage","frameValues","frameSize","dataIdx","originalChunkIndex","originalChunkOffset","sampleFrameIdx","sampleChunkIndex","sampleChunkOffset","otherList","thisList","visual","setVisual","setLayout","getItemLayout","setItemLayout","clearItemLayouts","itemVisual","setItemVisual","clearAllVisual","setItemDataAndSeriesIndex","setItemGraphicEl","eachItemGraphicEl","dimensionInfoList","injectFunction","originalMethod","res","TRANSFERABLE_METHODS","v2Distance","interpolate","isLoop","segs","w2","w3","TYPE_DELIMITER","IS_CONTAINER","checkClassType","RootClass","mandatoryMethods","$constructor","proto","superClass","ExtendedClass","superCall","classBase","Clz","classAttr","enableClassManagement","entity","makeContainer","registerClass","componentMainType","throwWhenNotFound","getClassesByMainType","getAllClassMainTypes","types","hasSubTypes","registerWhenExtend","originalExtend","ignoreSize","subtext","subtarget","itemGap","subtextStyle","titleModel","subtextStyleModel","textBaseline","textEl","subText","subTextEl","sublink","open","groupRect","layoutOption","alignStyle","axisPointerModelHelper","_axisPointer","axisPointerClass","fixValue","updateAxisPointer","disposeAxisPointer","axisView","forceRender","getAxisPointerClass","getAxisPointerModel","axisPointerClazz","clazz","_helper","setLabel","barItemStyle","BAR_BORDER_WIDTH_QUERY","_updateDrawMode","coordinateSystemType","_isLargeDraw","_renderLarge","_renderNormal","incrementalPrepareRender","_clear","incrementalRender","_incrementalRenderLarge","isLargeDraw","isHorizontalOrRadial","oldData","animationModel","elementCreator","updateStyle","newIndex","oldIndex","removeRect","removeSector","execute","createLarge","cartesian2d","rectShape","animateProperty","animateTarget","polar","isRadial","sector","sectorShape","fixedLineWidth","getLineWidth","signX","signY","isPolar","itemStyleModel","getBarItemStyle","setShape","labelPositionOutside","rawLayout","LargePath","startPoint","__startPoint","valueIdx","__valueIdx","setLargeStyle","_curve","containStroke","_l","_barGrid","prepareLayoutBarSeries","makeColumnLayout","retrieveColumnLayout","getScaleExtent","axisDataLen","boundaryGap","scaleType","originalExtent","getCategories","setBlank","isBaseAxisAndHasBarSeries","barSeriesModels","barWidthAndOffset","adjustedScale","adjustScaleForOverflow","axisLength","barsOnCurrentAxis","minOverflow","maxOverflow","totalOverFlow","oldRange","oldRangePercentOfNew","overflowBuffer","base","setInterval","makeLabelFormatter","labelFormatter","getLabelModel","categoryTickStart","tpl","tickValue","tick","realNumberScaleTicks","tickCount","categoryScaleExtent","axisLabelModel","unrotatedSingleRect","getTextRect","singleRect","rotateTextRect","rotateRadians","boundingBox","plain","beforeWidth","beforeHeight","afterWidth","afterHeight","rotatedRect","guid","Handler","Storage","Painter","HandlerProxy","useVML","painterCtors","ZRender","getInstance","registerPainter","delInstance","rendererType","vml","handerProxy","getViewportRoot","_needsRefresh","oldDelFromStorage","delFromStorage","oldAddToStorage","addToStorage","removeSelfFromZr","addSelfToZr","addRoot","delRoot","configLayer","zLevel","triggerRendered","_needsRefreshHover","refreshHoverImmediately","refreshHover","clearHover","clearAnimation","pathToImage","setCursorStyle","eventHandler","_component","getUID","dataProcessorHandlers","visualHandlers","_dataProcessorHandlers","_visualHandlers","_allHandlers","_stageTaskMap","performStageTasks","stageHandlers","needSetDirty","__pipeline","stageHandlerRecord","seriesTaskMap","overallTask","overallNeedDirty","stub","performArgs","block","pipelineId","skip","performRawSeries","isSeriesFiltered","taskRecord","_pipelineMap","pCtx","progressiveEnabled","progressiveRender","__idxInPipeline","blockIndex","modDataCount","modBy","dataLen","threshold","pipelineMap","head","tail","pipe","stageTaskMap","createSeriesStageTask","overallReset","createOverallStageTask","__block","getUpstream","getTargetSeries","seriesTaskPlan","seriesTaskReset","seriesTaskCount","useClearVisual","isVisual","isLayout","createOnAllSeries","eachRawSeries","eachRawSeriesByType","removeKey","overallTaskReset","overallProgress","createStub","stubReset","onDirty","stubOnDirty","agent","getSeries","upstreamContext","stubProgress","getDownstream","resetDefines","makeSeriesTaskProgress","singleSeriesTaskProgress","resetDefineIdx","resetDefine","dataEach","progress","detectSeriseType","legacyFunc","ecModelMock","apiMock","mockMethods","eachSeriesByType","cond","componentUtil","boxLayoutMixin","dependentModels","themeModel","newCptOption","fields","optList","Class","getDependencies","deps","unshift","enableSubTypeDefaulter","enableTopologicalTravel","BUILTIN_OBJECT","[object Function]","[object RegExp]","[object Date]","[object Error]","[object CanvasGradient]","[object CanvasPattern]","[object Image]","[object Canvas]","TYPED_ARRAY","[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]","objToString","arrayProto","nativeForEach","forEach","nativeFilter","filter","nativeSlice","nativeMap","nativeReduce","typeStr","isPrimitive","isDom","targetProp","sourceProp","isBuiltInObject","mergeAll","targetAndSources","overlay","baseClazz","clazzPrototype","F","memo","find","nodeType","ownerDocument","value1","retrieve3","value2","message","primitiveKey","HashMap","isArr","thisMap","visit","concatArray","newArray","nameLocation","nameRotate","nameTruncate","maxWidth","ellipsis","placeholder","nameTextStyle","nameGap","triggerEvent","axisLine","axisTick","inside","axisLabel","showMinLabel","showMaxLabel","splitLine","splitArea","areaStyle","axisDefault","categoryAxis","deduplication","alignWithLabel","valueAxis","timeAxis","logAxis","logBase","linear","quadraticIn","quadraticOut","quadraticInOut","cubicIn","cubicOut","cubicInOut","quarticIn","quarticOut","quarticInOut","quinticIn","quinticOut","quinticInOut","sinusoidalIn","sinusoidalOut","sinusoidalInOut","exponentialIn","exponentialOut","exponentialInOut","circularIn","circularOut","circularInOut","elasticIn","asin","elasticOut","elasticInOut","backIn","backOut","backInOut","bounceIn","bounceOut","bounceInOut","textContain","textHelper","normalizeTextStyle","needDrawText","renderText","getStroke","SHADOW_PROPS","globalDefault","OPTION_INNER_KEY","_optionManager","baseOption","mountOption","initBase","timelineOption","getTimelineOption","mediaOptions","getMediaOption","mediaOption","newOption","componentsMap","newCptTypes","visitComponent","newCptOptionList","mapResult","mappingToExists","makeIdAndName","keyInfo","determineSubType","getComponentsByTypes","resultItem","ComponentModelClass","createSeriesIndices","componentOption","topologicalTravel","_seriesIndicesMap","_seriesIndices","isIdInner","cpts","isIdArray","cpt","isNameArray","filterBySubType","findComponents","queryCond","getQueryCond","doFilter","q","indexAttr","idAttr","nameAttr","components","queryResult","getSeriesByName","oneSeries","getSeriesByType","getSeriesCount","assertSeriesInitialized","rawSeriesIndex","getCurrentSeriesIndices","filterSeries","filteredSeries","componentTypes","isNotTargetSeries","seiresIndex","mergeTheme","notMergeColorLayer","colorLayer","themeItem","existComponent","seriesModels","defaultSymbolType","legendSymbol","symbolKeepAspect","hasCallback","itemSymbolType","itemSymbolSize","itemSymbolKeepAspect","defaultKeyGetter","oldArr","newArr","oldKeyGetter","newKeyGetter","_old","_new","_oldKeyGetter","_newKeyGetter","initIndexMap","keyArr","keyGetterName","dataDiffer","existence","_add","_remove","oldDataIndexMap","newDataIndexMap","oldDataKeyArr","newDataKeyArr","echartsAPIList","chartInstance","_axisTickLabelBuilder","createAxisTicks","createAxisLabels","calculateCategoryInterval","NORMALIZED_EXTENT","Axis","fixExtentWithBands","nTick","fixOnBandTicksCoords","ticksCoords","tickCategoryInterval","ticksLen","last","ticksItem","containData","getTicksCoords","tickModel","getTickModel","getViewLabels","labels","getRotate","normalizeRadian","angle","sysDims","dimsDef","encodeDef","dataDimNameMap","coordDimNameMap","dimCount","getDimCount","dimDefItem","userDimName","validDataDims","resultDimIdx","applyDim","availDimIdx","sysDimItem","sysDimIndex","sysDimItemDimsDef","sysDimItemOtherDims","sysDimItemDimsDefItem","generateCoordCount","fromZero","extra","genName","optDimCount","dir","x_","polyHelper","_vm","$createElement","_c","_self","staticStyle","staticClass","attrs","padding-left","domProps","_s","statisticsDes","staticRenderFns","homevue_type_script_lang_js_","mixins","msg","projectId","buildingId","drawLine","myChart","getElementById","drawLine2","es6_typeof","_this","pangzhan_api","then","statusMapList","finishedNum","unCheckNum","startedNum","allPileNum","statusMap","pileNum","projectName","_i","buildingName","catch","mounted","home_homevue_type_script_lang_js_","componentNormalizer","__file","home","createRenderPlanner","isLargeRender","stackResultDim","segCount","tmpIn","tmpOut","ORIGIN_METHOD","RATE","THROTTLE_TYPE","debounce","currCall","debounceNextCall","lastCall","lastExec","timer","thisDelay","thisDebounce","debounceDelay","createOrUpdate","fnAttr","throttleType","originFn","lastThrottleType","lastRate","subTypeDefaulters","registerSubTypeDefaulter","defaulter","componentTypeMain","dependencyGetter","makeDepndencyGraph","fullNameList","noEntryList","createDependencyGraphItem","originalDeps","availableDeps","getAvailableDependencies","entryCount","dependentName","predecessor","thatItem","successor","dep","targetNameList","targetNameSet","currComponentType","currVertex","isInTargetNameSet","removeEdgeAndAdd","removeEdge","succComponentType","platform","gradientColor","animationDuration","animationEasingUpdate","animationThreshold","shadowTemp","orignalBrush","modified","clipPaths","clipPath","helper","roundNumber","_intervalPrecision","thisExtent","other","getInterval","getIntervalPrecision","intervalScaleGetTicks","intervalScaleNiceTicks","intervalPrecision","niceTickExtent","expandSize","fetch","fetchers","singleAxis","singleAxisModel","polarModel","radiusAxisModel","findAxisModel","angleAxisModel","parallelModel","parallelAxisIndex","roundingErrorFix","mathLog","LogScale","_originalScale","originalScale","powVal","__fixMin","fixRoundingError","__fixMax","err","originalVal","_needCollect","needCollect","_deduplication","_map","createByAxisModel","dedplication","getOrCreateMap","category","containLabel","safeLimit","largeLayout","_a","_b","v2ApplyTransform","lt","rb","lb","rt","maxX","maxY","intersect","ax0","ax1","ay0","ay1","bx0","bx1","by0","by1","msRequestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","textColor","maskColor","mask","lineCap","labelRect","animateShape","getAreaStyle","v2Min","v2Max","v2Scale","v2Add","v2Clone","v2Sub","constraint","prevPoint","nextPoint","cps","d0","cp0","STACK_PREFIX","LARGE_BAR_MIN_WIDTH","LargeArr","getSeriesStackId","getAxisKey","getLayoutOnAxis","axisKey","stackId","widthAndOffsets","doCalBarWidthAndOffset","offsetCenter","isOnCartesian","isInLargeMode","barSeries","seriesInfoList","barWidth","barMaxWidth","barGap","barCategoryGap","columnsMap","seriesInfo","columnsOnAxis","remainedWidth","autoWidthCount","categoryGap","stacks","barGapPercent","autoWidth","column","lastColumn","widthSum","lastStackCoords","lastStackCoordsOrigin","columnLayoutInfo","columnOffset","columnWidth","valueDim","baseDim","stacked","isValueAxisH","valueAxisStart","getValueAxisStart","baseValue","sign","baseCoord","valueAxisHorizontal","valueDimIdx","largePoints","valuePair","tmpRect","AXIS_TYPES","BaseAxisModelClass","axisTypeDefaulter","extraDefaultOption","thisOption","__ordinalMeta","prepareDataCoordInfo","valueOrigin","valueStart","getValueStart","baseAxisDim","valueAxisDim","baseDataOffset","dataDimsForPoint","stackedOverDimension","getStackedOnPoint","dataCoordInfo","stackedData","Triangle","Diamond","Pin","tanX","tanY","cpLen","cpLen2","Arrow","symbolCtors","roundRect","square","circle","diamond","pin","arrow","triangle","symbolShapeMakers","symbolBuildProxies","inBundle","proxySymbol","symbolPathSetColor","innerColor","symbolStyle","symbolShape","__isEmptyBrush","roundRectHelper","VALID_TEXT_ALIGN","VALID_TEXT_VERTICAL_ALIGN","normalizeStyle","makeFont","renderRichText","renderPlainText","setCtx","DEFAULT_FONT","contentBlock","__textCotentBlock","parsePlainText","outerHeight","textLines","lineHeight","boxPos","getBoxPosition","baseX","baseY","applyTextRotation","boxY","adjustTextY","textX","textY","needDrawBg","needDrawBackground","outerWidth","boxX","adjustTextX","drawBackground","getTextXForPadding","getFill","strokeText","fillText","parseRichText","drawRichText","contentWidth","xLeft","lineTop","xRight","token","tokens","tokenCount","usedWidth","lineXLeft","lineXRight","placeToken","tokenStyle","isLineHolder","isPlainBg","onBgImageLoaded","blockHeiht","adjustTextPositionOnRect","maxValue","lastIndexOf","showContent","alwaysShowContent","displayMode","confine","showDelay","hideDelay","borderRadius","extraCssText","crossStyle","someVectorAt","isTangent","cpx2","cpy2","cpx1","cpy1","pointAt","tangentAt","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_10_oneOf_1_0_node_modules_css_loader_index_js_ref_10_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_10_oneOf_1_2_node_modules_less_loader_dist_cjs_js_ref_10_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_home_vue_vue_type_style_index_0_lang_less___WEBPACK_IMPORTED_MODULE_0___default","shapeCompareFunc","_roots","_displayList","_displayListLen","includeIgnore","updateDisplayList","displayList","_updateAndAddDisplayable","beforeUpdate","afterUpdate","userSetClipPath","currentClipPath","parentClipPath","children","_children","__storage","addChildrenToStorage","delChildrenFromStorage","_renderList","displayableSortFunc","clazzUtil","Component","componentProto","dimensionsCount","format","ecHelper","parseGeoJSON","_List","_Model","_Axis","_env","parseGeoJson","ecUtil","ariaModel","seriesCnt","ariaLabel","maxDataCnt","maxSeriesCnt","displaySeriesCnt","getTitle","getConfig","seriesLabels","seriesCount","seriesLabel","seriesTpl","getSeriesTypeName","displayCnt","dataLabels","keyValues","userConfig","Animatable","animators","animatingShape","pathSplitted","_animateToShallow","objShallow","propertyCount","Region","decode","json","UTF8Encoding","encodeScale","UTF8Scale","geometry","coordinates","encodeOffsets","coordinate","decodePolygon","c2","prevX","prevY","charCodeAt","featureObj","geometries","exterior","interiors","region","cp","colorAll","labelDims","vals","QUERY_REG","_timelineOptions","_mediaList","_mediaDefault","_currentMediaIndices","_optionBackup","_newBaseOption","parseRawOption","rawOption","isNew","mediaDefault","timelineOptions","mediaList","media","singleMedia","preProcess","applyMediaQuery","ecWidth","ecHeight","realMap","aspectratio","applicatable","matched","operator","realAttr","real","expect","indicesEquals","indices1","indices2","oldOption","newCptOpt","oldCptOpt","oldOptionBackup","newParsedOption","isRecreate","optionBackup","timelineModel","getCurrentIndex","Draggable","_dragStart","_drag","_dragEnd","topTarget","draggingTarget","_draggingTarget","dispatchToElement","dropTarget","lastDropTarget","_dropTarget","axisTrigger","collect","pathContain","pathProxyForDraw","strokeContainThreshold","hasFillGradient","hasStrokeGradient","hasFillPattern","hasStrokePattern","_fillGradient","_strokeGradient","ctxLineDash","shapeCfg","needsUpdateRect","rectWithStroke","_rectWithStroke","lineScale","dirtyPath","__clipTarget","Sub","defaultShape","thisShape","Cartesian","getAxesByScale","axisX","axisY","reserved","xScale","yScale","xAxisExtent","yAxisExtent","originalLarge","originalProgressive","axesInfo","seriesInvolved","coordSysMap","collectAxesInfo","collectSeriesInfo","globalAxisPointerModel","linksOption","linkGroups","coordSysKey","makeKey","axesInfoInCoordSys","coordSysModel","baseTooltipModel","saveTooltipAxisInfo","triggerAxis","cross","tooltipAxes","fromTooltip","axisPointerShow","isHandleTrigger","makeAxisPointerModel","involveSeries","axisInfo","useHandle","groupIndex","getLinkGroupIndex","linkGroup","mapper","tooltipAxisPointerModel","volatileOption","field","labelOption","tooltipAxisPointerLabelShow","seriesTooltipTrigger","seriesTooltipShow","seriesDataCount","linkOption","checkPropInLink","linkPropValue","axisPropValue","getAxisInfo","TOUCH_CLICK_DELAY","mouseHandlerNames","touchHandlerNames","pointerEventNames","pointerdown","pointerup","pointermove","pointerout","pointerHandlerNames","nm","eventNameFix","processGesture","proxy","gestureMgr","_gestureMgr","gestureEvent","setTouchTimer","instance","_touching","_touchTimer","domHandlers","mousemove","mouseout","element","toElement","relatedTarget","parentNode","touchstart","_lastTouchMoment","mousedown","touchmove","touchend","mouseup","click","isPointerFromTouch","pointerType","initDomHandler","makeMouseHandler","_handlers","HandlerDomProxy","mountHandlers","handlerNames","handlerDomProxyProto","setCursor","dimAxisMapper","_axes","_dimList","_dataCoordConvert","input","dimList","output","stackInfoMap","stackInfoList","stackInfo","stackResultDimension","stackedDimension","stackedByDimension","isStackedByIndex","calculateStack","targetStackInfo","idxInStack","resultVal","resultNaN","targetData","byValue","stackedDataRawIndex","stackedOver","SILENT","makeEventPacket","eveType","targetInfo","EmptyProxy","painterRoot","_hovered","setHandlerProxy","isHover","lastHovered","lastHoveredTarget","hovered","hoveredTarget","innerDom","eventArgs","eventPacket","eachOtherLayer","layer","exclude","hoverCheckResult","_downEl","_downPoint","_upEl","AxisPointerView","paths","_updatePathDirty","vec2Min","vec2Max","v2Copy","isPointNull","drawSegment","segLen","allLen","smoothMin","smoothMax","drawMono","drawNonMono","prevIdx","prevP","ctrlLen","nextIdx","nextP","ratioNextSeg","lenPrevSeg","lenNextSeg","getBoundingBox","ptMin","ptMax","stackedOnPoints","stackedOnSmooth","stackedOnBBox","LinkedList","linkedListProto","insert","entry","Entry","insertEntry","maxSize","_list","_maxSize","_lastRemovedEntry","LRUProto","removed","leastUsedEntry","setClipPath","removeClipPath","cubic","quadratic","swapExtrema","windingCubic","nRoots","y0_","y1_","nExtrema","unit","windingQuadratic","y_","windingArc","containPath","isStroke","repeat","createPattern","eventTool","throttleUtil","moveAnimation","propsEqual","lastProp","lastProps","newProps","equals","updateLabelShowHide","labelEl","getHandleTransProps","trans","updateMandatoryProps","_group","_lastGraphicKey","_handle","_dragging","_lastValue","_lastStatus","_payloadInfo","_axisModel","_axisPointerModel","_moveAnimation","determineAnimation","doUpdateProps","updatePointerEl","updateLabelEl","createPointerEl","createLabelEl","_renderHandle","isCategoryAxis","useSnap","pointerEl","handleModel","onmousedown","_onHandleDragMove","ondragend","_onHandleDragEnd","includeStyles","handleSize","_moveHandleToValue","_doDispatchAxisPointer","payloadInfo","doClear","buildLabel","xy","wh","xDimIndex","idStart","makeCategoryLabels","makeRealNumberLabels","makeCategoryTicks","makeCategoryLabelsActually","labelCategoryInterval","numericLabelInterval","labelsCache","getListCache","optionLabelInterval","getOptionCategoryInterval","listCacheGet","makeLabelsByCustomizedCategoryInterval","makeAutoCategoryInterval","makeLabelsByNumericCategoryInterval","listCacheSet","ticksCache","optionTickInterval","labelsResult","labelItem","formattedLabel","rawLabel","cache","autoInterval","fetchAutoCategoryIntervalCalculationParams","axisRotate","ordinalScale","ordinalExtent","unitSpan","unitW","unitH","maxW","maxH","dw","dh","lastAutoInterval","lastTickCount","categoryInterval","onlyTick","startTick","showMinMax","addItem","tVal","DUMMY_COMPONENT_NAME_PREFIX","subOpts","subOptName","exists","newCptOptions","cptOption","idMap","existCpt","idNum","compressBatches","batchA","batchB","mapA","mapB","makeMap","mapToArray","sourceBatch","otherMap","dataIndices","otherDataIndices","lenj","isData","innerUniqueIndex","hostObj","has","parsedKey","queryType","includeMainTypes","queryParam","setting","_setting","_isBlank","childOfName","childCount","_doAdd","addBefore","nextSibling","eachChild","includeChildren","tmpMat","extremity","fromPoints","xDim","yDim","tx","ty","getNearestColorPalette","paletteNum","colorIdx","colorNameMap","scopeFields","defaultColorPalette","layeredColorPalette","colorPalette","fixPosition","textWidthCache","textWidthCacheCounter","TEXT_CACHE_MAX","STYLE_REG","measureText","getRichTextRect","getPlainTextRect","halfHeight","truncateText","containerWidth","prepareTruncateOptions","truncateSingleLine","maxIterations","minChar","cnCharWidth","ascCharWidth","ellipsisWidth","textLine","subLength","estimateLength","charCode","getLineHeight","truncOuterHeight","truncOuterWidth","lastIndex","matchedIndex","pushTokens","substring","contentHeight","stlPadding","truncateWidth","truncateHeight","tokenHeight","tokenWidth","tokenWidthNotSpecified","percentWidth","bgImg","paddingW","remianTruncWidth","isEmptyStr","strs","tokensLen","renderPlanner","Chart","renderTaskPlan","renderTaskReset","toggleHighlight","chartProto","elSetState","progressMethodMap","forceFirstProgress","modelHelper","illegalPoint","isIllegalPoint","inputAxesInfo","shouldHide","outputFinder","showValueMap","updaters","showPointer","showTooltip","coordSysContainsPoint","inputAxisInfo","findInputAxisInfo","processOnAxis","linkTriggers","tarAxisInfo","tarKey","srcAxisInfo","srcKey","srcValItem","makeMapperParam","updateModelActually","dispatchTooltipActually","dispatchHighDownActually","newValue","dontSnap","buildPayloadsBySeries","payloadBatch","snapToValue","seriesNestestValue","nestestValue","coordSysItem","coordSysId","coordSysIndex","coordSysType","coordSysMainType","outputAxesInfo","valItem","highDownKey","lastHighlights","newHighlights","toHighlight","toDownplay","coordExtent","HOVER_LAYER_ZLEVEL","CANVAS_ZLEVEL","EL_AFTER_INCREMENTAL_INC","INCREMENTAL_INC","parseInt10","isLayerValid","__builtin__","viewRect","isDisplayableCulled","isClipPathChanged","prevClipPaths","doClip","createRoot","domRoot","singleCanvas","nodeName","_opts","_singleCanvas","rootStyle","zlevelList","_zlevelList","layers","_layers","_layerConfig","_needsManuallyCompositing","_width","_height","mainLayer","_domRoot","_getSize","_hoverlayer","_hoverElements","isSingleCanvas","viewportRoot","paintAll","_redrawId","_paintList","_backgroundColor","__hoverMir","elMirror","__from","hoverElements","hoverLayer","getLayer","originalEl","_doPaintEl","getHoverLayer","redrawId","_updateLayerStatus","finished","_doPaintList","_compositeManually","eachBuiltinLayer","virtual","layerList","zi","useTimer","now","firstEl","error","dTime","prevElClipPaths","draw","currentLayer","forcePaint","insertLayer","layersMap","prevLayer","prevDom","insertBefore","firstChild","eachLayer","getLayers","updatePrevLayer","incrementalLayerCount","_clearLayer","layerConfig","_zlevel","delLayer","removeChild","_progressiveLayers","clearLayer","imageLayer","renderToCanvas","whIdx","cwh","plt","prb","shadowBlurSize","leftMargin","rightMargin","topMargin","bottomMargin","pathTransform","ImageShape","imgShape","upperCaseFirst","group1","replaceReg","replaceMap","&","<",">","\"","'","TPL_VAR_ALIAS","wrapVar","varName","seriesIdx","paramsList","seriesLen","alias","formatTplSimple","pad","isUTC","utc","capitalFirst","stackedByDimInfo","stackedDimInfo","byIndex","stackedCoordDimension","mayStack","stackedDimCoordDim","stackedDimType","stackedDimCoordIndex","isCalculationCoord","stackedDim","targetDim","mathAtan2","nPoint","visualSymbol","layoutPoints","dataSample","diffData","diffResult","newIdx","oldIdx","idx1","oldStackedOnPoints","newStackedOnPoints","oldCoordSys","newCoordSys","oldValueOrigin","newValueOrigin","currPoints","nextPoints","currStackedPoints","nextStackedPoints","sortedIndices","rawIndices","newDataOldCoordInfo","oldDataNewCoordInfo","diffItem","pointAdded","currentPt","nextPt","sortedCurrPoints","sortedNextPoints","sortedCurrStackedPoints","sortedNextStackedPoints","sortedStatus","current","stackedOnCurrent","stackedOnNext","SymbolDraw","lineAnimationDiff","_poly","isPointsSame","points1","points2","getSmooth","getAxisExtentWithGap","halfBandWidth","getStackedOnPoints","createGridClipShape","hasAnimation","forSymbol","xExtent","yExtent","createPolarClipShape","angleAxis","getAngleAxis","radiusAxis","getRadiusAxis","radiusExtent","angleExtent","RADIAN","createClipShape","turnPointsIntoStep","stepTurnAt","baseIndex","stepPoints","stepPt","stepPt2","getVisualGradient","visualMetaList","visualMeta","stops","stopLen","outerColors","tinyExtent","minCoord","maxCoord","coordSpan","gradient","getIsIgnoreFunc","isAuto","canShowAllSymbolForCategory","categoryDataDim","labelMap","availSize","lineGroup","symbolDraw","_symbolDraw","_lineGroup","lineStyleModel","areaStyleModel","isCoordSysPolar","prevCoordSys","_coordSys","polyline","_polyline","_polygon","isAreaChart","isIgnoreFunc","__temp","_step","_newPolygon","isIgnore","clipShape","_stackedOnPoints","_points","_updateAnimation","_newPolyline","visualColor","lineJoin","stackedOnSeries","_valueOrigin","__points","updatedDataInfo","diffStatus","ptIdx","contrastColor","axisCommon","legend","iconStyle","visualMap","controlStyle","color0","borderColor0","AxisBuilder","axisBuilderAttrs","selfBuilderAttrs","CartesianAxisView","oldAxisGroup","_axisGroup","axisBuilder","getGroup","_splitAreaColors","_splitLine","splitLineModel","lineColors","lineCount","tickCoord","colorIndex","_splitArea","splitAreaModel","areaColors","areaColorsLen","lastSplitAreaColors","newSplitAreaColors","cIndex","polygonContain","loopGeo","transformTo","define","Task","_reset","_plan","_onDirty","_dirty","taskProto","planResult","upTask","_upstream","lastModBy","normalizeModBy","_modBy","lastModDataCount","_modDataCount","_dueEnd","_outputDueEnd","_progress","_dueIndex","doProgress","outputDueEnd","_settedOutputEnd","iterator","winCount","it","sStep","sCount","modNext","sequentialNext","taskIns","_callingProgress","downstream","_downstream","downTask","symbolCtor","_symbolCtor","symbolDrawProto","symbolNeedsDraw","normalizeUpdateOpt","makeSeriesScope","SymbolCtor","symbolEl","isPersistent","incrementalPrepareUpdate","_seriesScope","incrementalUpdate","taskParams","updateIncrementalAndHover","enableAnimation","LOCATION_PARAMS","HV_NAMES","boxLayout","orient","maxHeight","currentLineMaxSize","nextX","nextY","nextChild","nextChildRect","moveX","newline","moveY","vbox","hbox","getAvailableSize","positionInfo","containerRect","containerHeight","verticalMargin","horizontalMargin","positionElement","hv","boundingMode","elPos","sizeCalculable","hvIdx","targetOption","hResult","vResult","names","newParams","newValueCount","merged","mergedValueCount","enoughParamNumber","hasProp","copyLayoutParams","matrixUtil","makeAxisEventDataBase","dumbGroup","_transform","_dumbGroup","hasBuilder","builders","pt1","pt2","arrows","arrowSize","arrowOffset","symbolWidth","symbolHeight","axisTickLabel","tickEls","buildAxisTick","labelEls","buildAxisLabel","fixMinMaxLabelShow","labelLayout","axisNameAvailableWidth","gapSignal","isNameLocationCenter","nameRotation","innerTextLayout","endTextLayout","truncateOpt","nameTruncateMaxWidth","truncatedText","formatterParams","__fullText","__truncatedText","targetType","axisRotation","rotationDiff","textRotate","onLeft","firstLabel","nextLabel","lastLabel","prevLabel","firstTick","nextTick","lastTick","prevTick","ignoreEl","isTwoLabelOverlapped","firstRect","nextRect","mRotationBack","tickLen","tickEl","axisLabelShow","labelRotation","rawCategoryData","itemLabelModel","compatStyle","compatLayoutProperties","LAYOUT_PROPERTIES","COMPATITABLE_COMPONENTS","clockWise","pointerColor","dataRange","componentName","colorAccessPath","samplers","average","nearest","indexSampler","sampler","graphicUtil","PATH_COLOR","styleModel","buildLabelElOption","labelPos","paddings","confineInContainer","bgColor","seriesData","textLayout","makeSectorShape"],"mappings":"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","file":"js/chunk-0642.984dbc0c.js","sourcesContent":["var echarts = require(\"../echarts\");\n\nrequire(\"./axisPointer\");\n\nrequire(\"./tooltip/TooltipModel\");\n\nrequire(\"./tooltip/TooltipView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME Better way to pack data in graphic element\n\n/**\n * @action\n * @property {string} type\n * @property {number} seriesIndex\n * @property {number} dataIndex\n * @property {number} [x]\n * @property {number} [y]\n */\necharts.registerAction({\n  type: 'showTip',\n  event: 'showTip',\n  update: 'tooltip:manuallyShowTip'\n}, // noop\nfunction () {});\necharts.registerAction({\n  type: 'hideTip',\n  event: 'hideTip',\n  update: 'tooltip:manuallyHideTip'\n}, // noop\nfunction () {});","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Can only be called after coordinate system creation stage.\n * (Can be called before coordinate system update stage).\n *\n * @param {Object} opt {labelInside}\n * @return {Object} {\n *  position, rotation, labelDirection, labelOffset,\n *  tickDirection, labelRotate, z2\n * }\n */\nfunction layout(gridModel, axisModel, opt) {\n  opt = opt || {};\n  var grid = gridModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var otherAxisOnZeroOf = axis.getAxesOnZeroOf()[0];\n  var rawAxisPosition = axis.position;\n  var axisPosition = otherAxisOnZeroOf ? 'onZero' : rawAxisPosition;\n  var axisDim = axis.dim;\n  var rect = grid.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var idx = {\n    left: 0,\n    right: 1,\n    top: 0,\n    bottom: 1,\n    onZero: 2\n  };\n  var axisOffset = axisModel.get('offset') || 0;\n  var posBound = axisDim === 'x' ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset] : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\n\n  if (otherAxisOnZeroOf) {\n    var onZeroCoord = otherAxisOnZeroOf.toGlobalCoord(otherAxisOnZeroOf.dataToCoord(0));\n    posBound[idx['onZero']] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\n  } // Axis position\n\n\n  layout.position = [axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0], axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]]; // Axis rotation\n\n  layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1); // Tick and label direction, x y is axisDim\n\n  var dirMap = {\n    top: -1,\n    bottom: 1,\n    left: -1,\n    right: 1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n  layout.labelOffset = otherAxisOnZeroOf ? posBound[idx[rawAxisPosition]] - posBound[idx['onZero']] : 0;\n\n  if (axisModel.get('axisTick.inside')) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n    layout.labelDirection = -layout.labelDirection;\n  } // Special label rotation\n\n\n  var labelRotate = axisModel.get('axisLabel.rotate');\n  layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate; // Over splitLine and splitArea\n\n  layout.z2 = 1;\n  return layout;\n}\n\nexports.layout = layout;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../util/graphic\");\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./axis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Grid view\necharts.extendComponentView({\n  type: 'grid',\n  render: function (gridModel, ecModel) {\n    this.group.removeAll();\n\n    if (gridModel.get('show')) {\n      this.group.add(new graphic.Rect({\n        shape: gridModel.coordinateSystem.getRect(),\n        style: zrUtil.defaults({\n          fill: gridModel.get('backgroundColor')\n        }, gridModel.getItemStyle()),\n        silent: true,\n        z2: -1\n      }));\n    }\n  }\n});\necharts.registerPreprocessor(function (option) {\n  // Only create grid when need\n  if (option.xAxis && option.yAxis && !option.grid) {\n    option.grid = {};\n  }\n});","var ComponentModel = require(\"../model/Component\");\n\nvar ComponentView = require(\"../view/Component\");\n\nvar _sourceHelper = require(\"../data/helper/sourceHelper\");\n\nvar detectSourceFormat = _sourceHelper.detectSourceFormat;\n\nvar _sourceType = require(\"../data/helper/sourceType\");\n\nvar SERIES_LAYOUT_BY_COLUMN = _sourceType.SERIES_LAYOUT_BY_COLUMN;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * This module is imported by echarts directly.\n *\n * Notice:\n * Always keep this file exists for backward compatibility.\n * Because before 4.1.0, dataset is an optional component,\n * some users may import this module manually.\n */\nComponentModel.extend({\n  type: 'dataset',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    // 'row', 'column'\n    seriesLayoutBy: SERIES_LAYOUT_BY_COLUMN,\n    // null/'auto': auto detect header, see \"module:echarts/data/helper/sourceHelper\"\n    sourceHeader: null,\n    dimensions: null,\n    source: null\n  },\n  optionUpdated: function () {\n    detectSourceFormat(this);\n  }\n});\nComponentView.extend({\n  type: 'dataset'\n});","// https://github.com/mziccard/node-timsort\nvar DEFAULT_MIN_MERGE = 32;\nvar DEFAULT_MIN_GALLOPING = 7;\nvar DEFAULT_TMP_STORAGE_LENGTH = 256;\n\nfunction minRunLength(n) {\n  var r = 0;\n\n  while (n >= DEFAULT_MIN_MERGE) {\n    r |= n & 1;\n    n >>= 1;\n  }\n\n  return n + r;\n}\n\nfunction makeAscendingRun(array, lo, hi, compare) {\n  var runHi = lo + 1;\n\n  if (runHi === hi) {\n    return 1;\n  }\n\n  if (compare(array[runHi++], array[lo]) < 0) {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n      runHi++;\n    }\n\n    reverseRun(array, lo, runHi);\n  } else {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n      runHi++;\n    }\n  }\n\n  return runHi - lo;\n}\n\nfunction reverseRun(array, lo, hi) {\n  hi--;\n\n  while (lo < hi) {\n    var t = array[lo];\n    array[lo++] = array[hi];\n    array[hi--] = t;\n  }\n}\n\nfunction binaryInsertionSort(array, lo, hi, start, compare) {\n  if (start === lo) {\n    start++;\n  }\n\n  for (; start < hi; start++) {\n    var pivot = array[start];\n    var left = lo;\n    var right = start;\n    var mid;\n\n    while (left < right) {\n      mid = left + right >>> 1;\n\n      if (compare(pivot, array[mid]) < 0) {\n        right = mid;\n      } else {\n        left = mid + 1;\n      }\n    }\n\n    var n = start - left;\n\n    switch (n) {\n      case 3:\n        array[left + 3] = array[left + 2];\n\n      case 2:\n        array[left + 2] = array[left + 1];\n\n      case 1:\n        array[left + 1] = array[left];\n        break;\n\n      default:\n        while (n > 0) {\n          array[left + n] = array[left + n - 1];\n          n--;\n        }\n\n    }\n\n    array[left] = pivot;\n  }\n}\n\nfunction gallopLeft(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) > 0) {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  } else {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) > 0) {\n      lastOffset = m + 1;\n    } else {\n      offset = m;\n    }\n  }\n\n  return offset;\n}\n\nfunction gallopRight(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) < 0) {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  } else {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) < 0) {\n      offset = m;\n    } else {\n      lastOffset = m + 1;\n    }\n  }\n\n  return offset;\n}\n\nfunction TimSort(array, compare) {\n  var minGallop = DEFAULT_MIN_GALLOPING;\n  var length = 0;\n  var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n  var stackLength = 0;\n  var runStart;\n  var runLength;\n  var stackSize = 0;\n  length = array.length;\n\n  if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n    tmpStorageLength = length >>> 1;\n  }\n\n  var tmp = [];\n  stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n  runStart = [];\n  runLength = [];\n\n  function pushRun(_runStart, _runLength) {\n    runStart[stackSize] = _runStart;\n    runLength[stackSize] = _runLength;\n    stackSize += 1;\n  }\n\n  function mergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n        if (runLength[n - 1] < runLength[n + 1]) {\n          n--;\n        }\n      } else if (runLength[n] > runLength[n + 1]) {\n        break;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function forceMergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n        n--;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function mergeAt(i) {\n    var start1 = runStart[i];\n    var length1 = runLength[i];\n    var start2 = runStart[i + 1];\n    var length2 = runLength[i + 1];\n    runLength[i] = length1 + length2;\n\n    if (i === stackSize - 3) {\n      runStart[i + 1] = runStart[i + 2];\n      runLength[i + 1] = runLength[i + 2];\n    }\n\n    stackSize--;\n    var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n    start1 += k;\n    length1 -= k;\n\n    if (length1 === 0) {\n      return;\n    }\n\n    length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n    if (length2 === 0) {\n      return;\n    }\n\n    if (length1 <= length2) {\n      mergeLow(start1, length1, start2, length2);\n    } else {\n      mergeHigh(start1, length1, start2, length2);\n    }\n  }\n\n  function mergeLow(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length1; i++) {\n      tmp[i] = array[start1 + i];\n    }\n\n    var cursor1 = 0;\n    var cursor2 = start2;\n    var dest = start1;\n    array[dest++] = array[cursor2++];\n\n    if (--length2 === 0) {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n\n      return;\n    }\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n      return;\n    }\n\n    var _minGallop = minGallop;\n    var count1, count2, exit;\n\n    while (1) {\n      count1 = 0;\n      count2 = 0;\n      exit = false;\n\n      do {\n        if (compare(array[cursor2], tmp[cursor1]) < 0) {\n          array[dest++] = array[cursor2++];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest++] = tmp[cursor1++];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n        if (count1 !== 0) {\n          for (i = 0; i < count1; i++) {\n            array[dest + i] = tmp[cursor1 + i];\n          }\n\n          dest += count1;\n          cursor1 += count1;\n          length1 -= count1;\n\n          if (length1 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = array[cursor2++];\n\n        if (--length2 === 0) {\n          exit = true;\n          break;\n        }\n\n        count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n        if (count2 !== 0) {\n          for (i = 0; i < count2; i++) {\n            array[dest + i] = array[cursor2 + i];\n          }\n\n          dest += count2;\n          cursor2 += count2;\n          length2 -= count2;\n\n          if (length2 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = tmp[cursor1++];\n\n        if (--length1 === 1) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n    minGallop < 1 && (minGallop = 1);\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n    } else if (length1 === 0) {\n      throw new Error(); // throw new Error('mergeLow preconditions were not respected');\n    } else {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n    }\n  }\n\n  function mergeHigh(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length2; i++) {\n      tmp[i] = array[start2 + i];\n    }\n\n    var cursor1 = start1 + length1 - 1;\n    var cursor2 = length2 - 1;\n    var dest = start2 + length2 - 1;\n    var customCursor = 0;\n    var customDest = 0;\n    array[dest--] = array[cursor1--];\n\n    if (--length1 === 0) {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n\n      return;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n      return;\n    }\n\n    var _minGallop = minGallop;\n\n    while (true) {\n      var count1 = 0;\n      var count2 = 0;\n      var exit = false;\n\n      do {\n        if (compare(tmp[cursor2], array[cursor1]) < 0) {\n          array[dest--] = array[cursor1--];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest--] = tmp[cursor2--];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n        if (count1 !== 0) {\n          dest -= count1;\n          cursor1 -= count1;\n          length1 -= count1;\n          customDest = dest + 1;\n          customCursor = cursor1 + 1;\n\n          for (i = count1 - 1; i >= 0; i--) {\n            array[customDest + i] = array[customCursor + i];\n          }\n\n          if (length1 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = tmp[cursor2--];\n\n        if (--length2 === 1) {\n          exit = true;\n          break;\n        }\n\n        count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n        if (count2 !== 0) {\n          dest -= count2;\n          cursor2 -= count2;\n          length2 -= count2;\n          customDest = dest + 1;\n          customCursor = cursor2 + 1;\n\n          for (i = 0; i < count2; i++) {\n            array[customDest + i] = tmp[customCursor + i];\n          }\n\n          if (length2 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = array[cursor1--];\n\n        if (--length1 === 0) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n\n    if (minGallop < 1) {\n      minGallop = 1;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n    } else if (length2 === 0) {\n      throw new Error(); // throw new Error('mergeHigh preconditions were not respected');\n    } else {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n    }\n  }\n\n  this.mergeRuns = mergeRuns;\n  this.forceMergeRuns = forceMergeRuns;\n  this.pushRun = pushRun;\n}\n\nfunction sort(array, compare, lo, hi) {\n  if (!lo) {\n    lo = 0;\n  }\n\n  if (!hi) {\n    hi = array.length;\n  }\n\n  var remaining = hi - lo;\n\n  if (remaining < 2) {\n    return;\n  }\n\n  var runLength = 0;\n\n  if (remaining < DEFAULT_MIN_MERGE) {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n    binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n    return;\n  }\n\n  var ts = new TimSort(array, compare);\n  var minRun = minRunLength(remaining);\n\n  do {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n\n    if (runLength < minRun) {\n      var force = remaining;\n\n      if (force > minRun) {\n        force = minRun;\n      }\n\n      binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n      runLength = force;\n    }\n\n    ts.pushRun(lo, runLength);\n    ts.mergeRuns();\n    remaining -= runLength;\n    lo += runLength;\n  } while (remaining !== 0);\n\n  ts.forceMergeRuns();\n}\n\nmodule.exports = sort;","var windingLine = require(\"./windingLine\");\n\nvar EPSILON = 1e-8;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n}\n\nfunction contain(points, x, y) {\n  var w = 0;\n  var p = points[0];\n\n  if (!p) {\n    return false;\n  }\n\n  for (var i = 1; i < points.length; i++) {\n    var p2 = points[i];\n    w += windingLine(p[0], p[1], p2[0], p2[1], x, y);\n    p = p2;\n  } // Close polygon\n\n\n  var p0 = points[0];\n\n  if (!isAroundEqual(p[0], p0[0]) || !isAroundEqual(p[1], p0[1])) {\n    w += windingLine(p[0], p[1], p0[0], p0[1], x, y);\n  }\n\n  return w !== 0;\n}\n\nexports.contain = contain;","var Clip = require(\"./Clip\");\n\nvar color = require(\"../tool/color\");\n\nvar _util = require(\"../core/util\");\n\nvar isArrayLike = _util.isArrayLike;\n\n/**\n * @module echarts/animation/Animator\n */\nvar arraySlice = Array.prototype.slice;\n\nfunction defaultGetter(target, key) {\n  return target[key];\n}\n\nfunction defaultSetter(target, key, value) {\n  target[key] = value;\n}\n/**\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} percent\n * @return {number}\n */\n\n\nfunction interpolateNumber(p0, p1, percent) {\n  return (p1 - p0) * percent + p0;\n}\n/**\n * @param  {string} p0\n * @param  {string} p1\n * @param  {number} percent\n * @return {string}\n */\n\n\nfunction interpolateString(p0, p1, percent) {\n  return percent > 0.5 ? p1 : p0;\n}\n/**\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {number} percent\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction interpolateArray(p0, p1, percent, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = interpolateNumber(p0[i], p1[i], percent);\n    }\n  } else {\n    var len2 = len && p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = interpolateNumber(p0[i][j], p1[i][j], percent);\n      }\n    }\n  }\n} // arr0 is source array, arr1 is target array.\n// Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n\n\nfunction fillArr(arr0, arr1, arrDim) {\n  var arr0Len = arr0.length;\n  var arr1Len = arr1.length;\n\n  if (arr0Len !== arr1Len) {\n    // FIXME Not work for TypedArray\n    var isPreviousLarger = arr0Len > arr1Len;\n\n    if (isPreviousLarger) {\n      // Cut the previous\n      arr0.length = arr1Len;\n    } else {\n      // Fill the previous\n      for (var i = arr0Len; i < arr1Len; i++) {\n        arr0.push(arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i]));\n      }\n    }\n  } // Handling NaN value\n\n\n  var len2 = arr0[0] && arr0[0].length;\n\n  for (var i = 0; i < arr0.length; i++) {\n    if (arrDim === 1) {\n      if (isNaN(arr0[i])) {\n        arr0[i] = arr1[i];\n      }\n    } else {\n      for (var j = 0; j < len2; j++) {\n        if (isNaN(arr0[i][j])) {\n          arr0[i][j] = arr1[i][j];\n        }\n      }\n    }\n  }\n}\n/**\n * @param  {Array} arr0\n * @param  {Array} arr1\n * @param  {number} arrDim\n * @return {boolean}\n */\n\n\nfunction isArraySame(arr0, arr1, arrDim) {\n  if (arr0 === arr1) {\n    return true;\n  }\n\n  var len = arr0.length;\n\n  if (len !== arr1.length) {\n    return false;\n  }\n\n  if (arrDim === 1) {\n    for (var i = 0; i < len; i++) {\n      if (arr0[i] !== arr1[i]) {\n        return false;\n      }\n    }\n  } else {\n    var len2 = arr0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        if (arr0[i][j] !== arr1[i][j]) {\n          return false;\n        }\n      }\n    }\n  }\n\n  return true;\n}\n/**\n * Catmull Rom interpolate array\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {Array} p2\n * @param  {Array} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction catmullRomInterpolateArray(p0, p1, p2, p3, t, t2, t3, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = catmullRomInterpolate(p0[i], p1[i], p2[i], p3[i], t, t2, t3);\n    }\n  } else {\n    var len2 = p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = catmullRomInterpolate(p0[i][j], p1[i][j], p2[i][j], p3[i][j], t, t2, t3);\n      }\n    }\n  }\n}\n/**\n * Catmull Rom interpolate number\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @return {number}\n */\n\n\nfunction catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n\nfunction cloneValue(value) {\n  if (isArrayLike(value)) {\n    var len = value.length;\n\n    if (isArrayLike(value[0])) {\n      var ret = [];\n\n      for (var i = 0; i < len; i++) {\n        ret.push(arraySlice.call(value[i]));\n      }\n\n      return ret;\n    }\n\n    return arraySlice.call(value);\n  }\n\n  return value;\n}\n\nfunction rgba2String(rgba) {\n  rgba[0] = Math.floor(rgba[0]);\n  rgba[1] = Math.floor(rgba[1]);\n  rgba[2] = Math.floor(rgba[2]);\n  return 'rgba(' + rgba.join(',') + ')';\n}\n\nfunction getArrayDim(keyframes) {\n  var lastValue = keyframes[keyframes.length - 1].value;\n  return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\n}\n\nfunction createTrackClip(animator, easing, oneTrackDone, keyframes, propName, forceAnimate) {\n  var getter = animator._getter;\n  var setter = animator._setter;\n  var useSpline = easing === 'spline';\n  var trackLen = keyframes.length;\n\n  if (!trackLen) {\n    return;\n  } // Guess data type\n\n\n  var firstVal = keyframes[0].value;\n  var isValueArray = isArrayLike(firstVal);\n  var isValueColor = false;\n  var isValueString = false; // For vertices morphing\n\n  var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\n  var trackMaxTime; // Sort keyframe as ascending\n\n  keyframes.sort(function (a, b) {\n    return a.time - b.time;\n  });\n  trackMaxTime = keyframes[trackLen - 1].time; // Percents of each keyframe\n\n  var kfPercents = []; // Value of each keyframe\n\n  var kfValues = [];\n  var prevValue = keyframes[0].value;\n  var isAllValueEqual = true;\n\n  for (var i = 0; i < trackLen; i++) {\n    kfPercents.push(keyframes[i].time / trackMaxTime); // Assume value is a color when it is a string\n\n    var value = keyframes[i].value; // Check if value is equal, deep check if value is array\n\n    if (!(isValueArray && isArraySame(value, prevValue, arrDim) || !isValueArray && value === prevValue)) {\n      isAllValueEqual = false;\n    }\n\n    prevValue = value; // Try converting a string to a color array\n\n    if (typeof value == 'string') {\n      var colorArray = color.parse(value);\n\n      if (colorArray) {\n        value = colorArray;\n        isValueColor = true;\n      } else {\n        isValueString = true;\n      }\n    }\n\n    kfValues.push(value);\n  }\n\n  if (!forceAnimate && isAllValueEqual) {\n    return;\n  }\n\n  var lastValue = kfValues[trackLen - 1]; // Polyfill array and NaN value\n\n  for (var i = 0; i < trackLen - 1; i++) {\n    if (isValueArray) {\n      fillArr(kfValues[i], lastValue, arrDim);\n    } else {\n      if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n        kfValues[i] = lastValue;\n      }\n    }\n  }\n\n  isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim); // Cache the key of last frame to speed up when\n  // animation playback is sequency\n\n  var lastFrame = 0;\n  var lastFramePercent = 0;\n  var start;\n  var w;\n  var p0;\n  var p1;\n  var p2;\n  var p3;\n\n  if (isValueColor) {\n    var rgba = [0, 0, 0, 0];\n  }\n\n  var onframe = function (target, percent) {\n    // Find the range keyframes\n    // kf1-----kf2---------current--------kf3\n    // find kf2 and kf3 and do interpolation\n    var frame; // In the easing function like elasticOut, percent may less than 0\n\n    if (percent < 0) {\n      frame = 0;\n    } else if (percent < lastFramePercent) {\n      // Start from next key\n      // PENDING start from lastFrame ?\n      start = Math.min(lastFrame + 1, trackLen - 1);\n\n      for (frame = start; frame >= 0; frame--) {\n        if (kfPercents[frame] <= percent) {\n          break;\n        }\n      } // PENDING really need to do this ?\n\n\n      frame = Math.min(frame, trackLen - 2);\n    } else {\n      for (frame = lastFrame; frame < trackLen; frame++) {\n        if (kfPercents[frame] > percent) {\n          break;\n        }\n      }\n\n      frame = Math.min(frame - 1, trackLen - 2);\n    }\n\n    lastFrame = frame;\n    lastFramePercent = percent;\n    var range = kfPercents[frame + 1] - kfPercents[frame];\n\n    if (range === 0) {\n      return;\n    } else {\n      w = (percent - kfPercents[frame]) / range;\n    }\n\n    if (useSpline) {\n      p1 = kfValues[frame];\n      p0 = kfValues[frame === 0 ? frame : frame - 1];\n      p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n      p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n\n      if (isValueArray) {\n        catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          value = catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(p1, p2, w);\n        } else {\n          value = catmullRomInterpolate(p0, p1, p2, p3, w, w * w, w * w * w);\n        }\n\n        setter(target, propName, value);\n      }\n    } else {\n      if (isValueArray) {\n        interpolateArray(kfValues[frame], kfValues[frame + 1], w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          interpolateArray(kfValues[frame], kfValues[frame + 1], w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n        } else {\n          value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n        }\n\n        setter(target, propName, value);\n      }\n    }\n  };\n\n  var clip = new Clip({\n    target: animator._target,\n    life: trackMaxTime,\n    loop: animator._loop,\n    delay: animator._delay,\n    onframe: onframe,\n    ondestroy: oneTrackDone\n  });\n\n  if (easing && easing !== 'spline') {\n    clip.easing = easing;\n  }\n\n  return clip;\n}\n/**\n * @alias module:zrender/animation/Animator\n * @constructor\n * @param {Object} target\n * @param {boolean} loop\n * @param {Function} getter\n * @param {Function} setter\n */\n\n\nvar Animator = function (target, loop, getter, setter) {\n  this._tracks = {};\n  this._target = target;\n  this._loop = loop || false;\n  this._getter = getter || defaultGetter;\n  this._setter = setter || defaultSetter;\n  this._clipCount = 0;\n  this._delay = 0;\n  this._doneList = [];\n  this._onframeList = [];\n  this._clipList = [];\n};\n\nAnimator.prototype = {\n  /**\n   * 设置动画关键帧\n   * @param  {number} time 关键帧时间，单位是ms\n   * @param  {Object} props 关键帧的属性值，key-value表示\n   * @return {module:zrender/animation/Animator}\n   */\n  when: function (time\n  /* ms */\n  , props) {\n    var tracks = this._tracks;\n\n    for (var propName in props) {\n      if (!props.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      if (!tracks[propName]) {\n        tracks[propName] = []; // Invalid value\n\n        var value = this._getter(this._target, propName);\n\n        if (value == null) {\n          // zrLog('Invalid property ' + propName);\n          continue;\n        } // If time is 0\n        //  Then props is given initialize value\n        // Else\n        //  Initialize value from current prop value\n\n\n        if (time !== 0) {\n          tracks[propName].push({\n            time: 0,\n            value: cloneValue(value)\n          });\n        }\n      }\n\n      tracks[propName].push({\n        time: time,\n        value: props[propName]\n      });\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加动画每一帧的回调函数\n   * @param  {Function} callback\n   * @return {module:zrender/animation/Animator}\n   */\n  during: function (callback) {\n    this._onframeList.push(callback);\n\n    return this;\n  },\n  pause: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].pause();\n    }\n\n    this._paused = true;\n  },\n  resume: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].resume();\n    }\n\n    this._paused = false;\n  },\n  isPaused: function () {\n    return !!this._paused;\n  },\n  _doneCallback: function () {\n    // Clear all tracks\n    this._tracks = {}; // Clear all clips\n\n    this._clipList.length = 0;\n    var doneList = this._doneList;\n    var len = doneList.length;\n\n    for (var i = 0; i < len; i++) {\n      doneList[i].call(this);\n    }\n  },\n\n  /**\n   * 开始执行动画\n   * @param  {string|Function} [easing]\n   *         动画缓动函数，详见{@link module:zrender/animation/easing}\n   * @param  {boolean} forceAnimate\n   * @return {module:zrender/animation/Animator}\n   */\n  start: function (easing, forceAnimate) {\n    var self = this;\n    var clipCount = 0;\n\n    var oneTrackDone = function () {\n      clipCount--;\n\n      if (!clipCount) {\n        self._doneCallback();\n      }\n    };\n\n    var lastClip;\n\n    for (var propName in this._tracks) {\n      if (!this._tracks.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      var clip = createTrackClip(this, easing, oneTrackDone, this._tracks[propName], propName, forceAnimate);\n\n      if (clip) {\n        this._clipList.push(clip);\n\n        clipCount++; // If start after added to animation\n\n        if (this.animation) {\n          this.animation.addClip(clip);\n        }\n\n        lastClip = clip;\n      }\n    } // Add during callback on the last clip\n\n\n    if (lastClip) {\n      var oldOnFrame = lastClip.onframe;\n\n      lastClip.onframe = function (target, percent) {\n        oldOnFrame(target, percent);\n\n        for (var i = 0; i < self._onframeList.length; i++) {\n          self._onframeList[i](target, percent);\n        }\n      };\n    } // This optimization will help the case that in the upper application\n    // the view may be refreshed frequently, where animation will be\n    // called repeatly but nothing changed.\n\n\n    if (!clipCount) {\n      this._doneCallback();\n    }\n\n    return this;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stop: function (forwardToLast) {\n    var clipList = this._clipList;\n    var animation = this.animation;\n\n    for (var i = 0; i < clipList.length; i++) {\n      var clip = clipList[i];\n\n      if (forwardToLast) {\n        // Move to last frame before stop\n        clip.onframe(this._target, 1);\n      }\n\n      animation && animation.removeClip(clip);\n    }\n\n    clipList.length = 0;\n  },\n\n  /**\n   * 设置动画延迟开始的时间\n   * @param  {number} time 单位ms\n   * @return {module:zrender/animation/Animator}\n   */\n  delay: function (time) {\n    this._delay = time;\n    return this;\n  },\n\n  /**\n   * 添加动画结束的回调\n   * @param  {Function} cb\n   * @return {module:zrender/animation/Animator}\n   */\n  done: function (cb) {\n    if (cb) {\n      this._doneList.push(cb);\n    }\n\n    return this;\n  },\n\n  /**\n   * @return {Array.<module:zrender/animation/Clip>}\n   */\n  getClips: function () {\n    return this._clipList;\n  }\n};\nvar _default = Animator;\nmodule.exports = _default;","import {axios, exportFile} from '@/libs/api.request';\nimport httpClient from './httpClient';\n\nlet obj = new Object();\n\r\n//-------------------------------------旁站共用----------------------------------\nobj.getOperationLogListByIdType = (data) => httpClient.get({ url: '/pangzhan/getLogByPzIdAndType', data });//获得操作记录（旁站Id,旁站类型)\nobj.exportWordsBatchPZ = (data) => exportFile(data, '/pangzhan/exportWords');//批量导出word\r\nobj.exportImagesByPzIdAndType = (data) => httpClient.post({ url: '/pangzhan/exportImages', data });//导出旁站图片\r\nobj.exportImagesForPZ = (data) => exportFile(data, '/pangzhan/exportImages');//导出旁站图片\r\nobj.exportImagesBatchPZ = (data) => exportFile(data, '/pangzhan/batchExportImages');//批量导出旁站图片\r\nobj.exportExcelForJXGZPZ = (data) => exportFile(data, '/jxZkGzzPzjl/exprotExcel');//导出旁站excel\r\n\r\nobj.getListByCondition = (data) => httpClient.post({ url: '/pangzhan/getListByCondition', data });\r\n\r\nobj.pangzhanStatistics = (data) => httpClient.post({ url: '/pangzhan/statistics', data });\r\n//-------------------------------------机械关注----------------------------------\r\nobj.exportJXGZWord = (data) => exportFile(data, `/jxZkGzzPzjl/download?id=${data.id}`);\r\nobj.exportSNJBWord = (data) => exportFile(data, `/snJbjPzjl/download?id=${data.id}`);\r\nobj.exportYYLGZWord = (data) => exportFile(data, `/yylgzpz/download?id=${data.id}`);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\nexport default obj","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar zrColor = require(\"zrender/lib/tool/color\");\n\nvar eventUtil = require(\"zrender/lib/core/event\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar formatUtil = require(\"../../util/format\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar toCamelCase = formatUtil.toCamelCase;\nvar vendors = ['', '-webkit-', '-moz-', '-o-'];\nvar gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n/**\n * @param {number} duration\n * @return {string}\n * @inner\n */\n\nfunction assembleTransition(duration) {\n  var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n  var transitionText = 'left ' + duration + 's ' + transitionCurve + ',' + 'top ' + duration + 's ' + transitionCurve;\n  return zrUtil.map(vendors, function (vendorPrefix) {\n    return vendorPrefix + 'transition:' + transitionText;\n  }).join(';');\n}\n/**\n * @param {Object} textStyle\n * @return {string}\n * @inner\n */\n\n\nfunction assembleFont(textStyleModel) {\n  var cssText = [];\n  var fontSize = textStyleModel.get('fontSize');\n  var color = textStyleModel.getTextColor();\n  color && cssText.push('color:' + color);\n  cssText.push('font:' + textStyleModel.getFont());\n  fontSize && cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n  each(['decoration', 'align'], function (name) {\n    var val = textStyleModel.get(name);\n    val && cssText.push('text-' + name + ':' + val);\n  });\n  return cssText.join(';');\n}\n/**\n * @param {Object} tooltipModel\n * @return {string}\n * @inner\n */\n\n\nfunction assembleCssText(tooltipModel) {\n  var cssText = [];\n  var transitionDuration = tooltipModel.get('transitionDuration');\n  var backgroundColor = tooltipModel.get('backgroundColor');\n  var textStyleModel = tooltipModel.getModel('textStyle');\n  var padding = tooltipModel.get('padding'); // Animation transition. Do not animate when transitionDuration is 0.\n\n  transitionDuration && cssText.push(assembleTransition(transitionDuration));\n\n  if (backgroundColor) {\n    if (env.canvasSupported) {\n      cssText.push('background-Color:' + backgroundColor);\n    } else {\n      // for ie\n      cssText.push('background-Color:#' + zrColor.toHex(backgroundColor));\n      cssText.push('filter:alpha(opacity=70)');\n    }\n  } // Border style\n\n\n  each(['width', 'color', 'radius'], function (name) {\n    var borderName = 'border-' + name;\n    var camelCase = toCamelCase(borderName);\n    var val = tooltipModel.get(camelCase);\n    val != null && cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n  }); // Text style\n\n  cssText.push(assembleFont(textStyleModel)); // Padding\n\n  if (padding != null) {\n    cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n  }\n\n  return cssText.join(';') + ';';\n}\n/**\n * @alias module:echarts/component/tooltip/TooltipContent\n * @constructor\n */\n\n\nfunction TooltipContent(container, api) {\n  if (env.wxa) {\n    return null;\n  }\n\n  var el = document.createElement('div');\n  var zr = this._zr = api.getZr();\n  this.el = el;\n  this._x = api.getWidth() / 2;\n  this._y = api.getHeight() / 2;\n  container.appendChild(el);\n  this._container = container;\n  this._show = false;\n  /**\n   * @private\n   */\n\n  this._hideTimeout;\n  var self = this;\n\n  el.onmouseenter = function () {\n    // clear the timeout in hideLater and keep showing tooltip\n    if (self._enterable) {\n      clearTimeout(self._hideTimeout);\n      self._show = true;\n    }\n\n    self._inContent = true;\n  };\n\n  el.onmousemove = function (e) {\n    e = e || window.event;\n\n    if (!self._enterable) {\n      // Try trigger zrender event to avoid mouse\n      // in and out shape too frequently\n      var handler = zr.handler;\n      eventUtil.normalizeEvent(container, e, true);\n      handler.dispatch('mousemove', e);\n    }\n  };\n\n  el.onmouseleave = function () {\n    if (self._enterable) {\n      if (self._show) {\n        self.hideLater(self._hideDelay);\n      }\n    }\n\n    self._inContent = false;\n  };\n}\n\nTooltipContent.prototype = {\n  constructor: TooltipContent,\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  _enterable: true,\n\n  /**\n   * Update when tooltip is rendered\n   */\n  update: function () {\n    // FIXME\n    // Move this logic to ec main?\n    var container = this._container;\n    var stl = container.currentStyle || document.defaultView.getComputedStyle(container);\n    var domStyle = container.style;\n\n    if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n      domStyle.position = 'relative';\n    } // Hide the tooltip\n    // PENDING\n    // this.hide();\n\n  },\n  show: function (tooltipModel) {\n    clearTimeout(this._hideTimeout);\n    var el = this.el;\n    el.style.cssText = gCssText + assembleCssText(tooltipModel) // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n    + ';left:' + this._x + 'px;top:' + this._y + 'px;' + (tooltipModel.get('extraCssText') || '');\n    el.style.display = el.innerHTML ? 'block' : 'none';\n    this._show = true;\n  },\n  setContent: function (content) {\n    this.el.innerHTML = content == null ? '' : content;\n  },\n  setEnterable: function (enterable) {\n    this._enterable = enterable;\n  },\n  getSize: function () {\n    var el = this.el;\n    return [el.clientWidth, el.clientHeight];\n  },\n  moveTo: function (x, y) {\n    // xy should be based on canvas root. But tooltipContent is\n    // the sibling of canvas root. So padding of ec container\n    // should be considered here.\n    var zr = this._zr;\n    var viewportRootOffset;\n\n    if (zr && zr.painter && (viewportRootOffset = zr.painter.getViewportRootOffset())) {\n      x += viewportRootOffset.offsetLeft;\n      y += viewportRootOffset.offsetTop;\n    }\n\n    var style = this.el.style;\n    style.left = x + 'px';\n    style.top = y + 'px';\n    this._x = x;\n    this._y = y;\n  },\n  hide: function () {\n    this.el.style.display = 'none';\n    this._show = false;\n  },\n  hideLater: function (time) {\n    if (this._show && !(this._inContent && this._enterable)) {\n      if (time) {\n        this._hideDelay = time; // Set show false to avoid invoke hideLater mutiple times\n\n        this._show = false;\n        this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n      } else {\n        this.hide();\n      }\n    }\n  },\n  isShow: function () {\n    return this._show;\n  }\n};\nvar _default = TooltipContent;\nmodule.exports = _default;","import {\n  mapState,\n  mapGetters\n} from 'vuex';\n\nexport default {\n  computed: {\n    ...mapState({\n      PROJECT: (state) => state.user.project,\n      BUILDING: (state) => state.user.building\n    }),\n    ...mapGetters({\n      ROLE: 'role'\n    })\n  },\n  watch: {\n    PROJECT: {\n      deep: true,\n      handler(project) {\r\n\t\t\t\tconsole.log(\"watch,PROJECT\")\n        this.getList();\n      }\n    },\n    BUILDING: {\n      deep: true,\n      handler(building) {\r\n\t\t\t\tconsole.log(\"watch,BUILDING\")\n        this.buildingChange();\n      }\n    }\n  },\n  created() {\n    if (this.PROJECT && this.PROJECT.id) {\r\n\t\t\tconsole.log(\"created，getList\");\r\n\t\t\tthis.getList();\r\n\t\t}\n//     if (this.BUILDING && this.BUILDING.id){\r\n// \t\t\tconsole.log(\"created，buildingChange\");\r\n// \t\t\tthis.buildingChange();\r\n// \t\t}\r\n  }\n};\n","var eventUtil = require(\"./event\");\n\n/**\n * Only implements needed gestures for mobile.\n */\nvar GestureMgr = function () {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  this._track = [];\n};\n\nGestureMgr.prototype = {\n  constructor: GestureMgr,\n  recognize: function (event, target, root) {\n    this._doTrack(event, target, root);\n\n    return this._recognize(event);\n  },\n  clear: function () {\n    this._track.length = 0;\n    return this;\n  },\n  _doTrack: function (event, target, root) {\n    var touches = event.touches;\n\n    if (!touches) {\n      return;\n    }\n\n    var trackItem = {\n      points: [],\n      touches: [],\n      target: target,\n      event: event\n    };\n\n    for (var i = 0, len = touches.length; i < len; i++) {\n      var touch = touches[i];\n      var pos = eventUtil.clientToLocal(root, touch, {});\n      trackItem.points.push([pos.zrX, pos.zrY]);\n      trackItem.touches.push(touch);\n    }\n\n    this._track.push(trackItem);\n  },\n  _recognize: function (event) {\n    for (var eventName in recognizers) {\n      if (recognizers.hasOwnProperty(eventName)) {\n        var gestureInfo = recognizers[eventName](this._track, event);\n\n        if (gestureInfo) {\n          return gestureInfo;\n        }\n      }\n    }\n  }\n};\n\nfunction dist(pointPair) {\n  var dx = pointPair[1][0] - pointPair[0][0];\n  var dy = pointPair[1][1] - pointPair[0][1];\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\nfunction center(pointPair) {\n  return [(pointPair[0][0] + pointPair[1][0]) / 2, (pointPair[0][1] + pointPair[1][1]) / 2];\n}\n\nvar recognizers = {\n  pinch: function (track, event) {\n    var trackLen = track.length;\n\n    if (!trackLen) {\n      return;\n    }\n\n    var pinchEnd = (track[trackLen - 1] || {}).points;\n    var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n    if (pinchPre && pinchPre.length > 1 && pinchEnd && pinchEnd.length > 1) {\n      var pinchScale = dist(pinchEnd) / dist(pinchPre);\n      !isFinite(pinchScale) && (pinchScale = 1);\n      event.pinchScale = pinchScale;\n      var pinchCenter = center(pinchEnd);\n      event.pinchX = pinchCenter[0];\n      event.pinchY = pinchCenter[1];\n      return {\n        type: 'pinch',\n        target: track[0].target,\n        event: event\n      };\n    }\n  } // Only pinch currently.\n\n};\nvar _default = GestureMgr;\nmodule.exports = _default;","var matrix = require(\"../core/matrix\");\n\nvar vector = require(\"../core/vector\");\n\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\nvar mIdentity = matrix.identity;\nvar EPSILON = 5e-5;\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * @alias module:zrender/mixin/Transformable\n * @constructor\n */\n\n\nvar Transformable = function (opts) {\n  opts = opts || {}; // If there are no given position, rotation, scale\n\n  if (!opts.position) {\n    /**\n     * 平移\n     * @type {Array.<number>}\n     * @default [0, 0]\n     */\n    this.position = [0, 0];\n  }\n\n  if (opts.rotation == null) {\n    /**\n     * 旋转\n     * @type {Array.<number>}\n     * @default 0\n     */\n    this.rotation = 0;\n  }\n\n  if (!opts.scale) {\n    /**\n     * 缩放\n     * @type {Array.<number>}\n     * @default [1, 1]\n     */\n    this.scale = [1, 1];\n  }\n  /**\n   * 旋转和缩放的原点\n   * @type {Array.<number>}\n   * @default null\n   */\n\n\n  this.origin = this.origin || null;\n};\n\nvar transformableProto = Transformable.prototype;\ntransformableProto.transform = null;\n/**\n * 判断是否需要有坐标变换\n * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n */\n\ntransformableProto.needLocalTransform = function () {\n  return isNotAroundZero(this.rotation) || isNotAroundZero(this.position[0]) || isNotAroundZero(this.position[1]) || isNotAroundZero(this.scale[0] - 1) || isNotAroundZero(this.scale[1] - 1);\n};\n\ntransformableProto.updateTransform = function () {\n  var parent = this.parent;\n  var parentHasTransform = parent && parent.transform;\n  var needLocalTransform = this.needLocalTransform();\n  var m = this.transform;\n\n  if (!(needLocalTransform || parentHasTransform)) {\n    m && mIdentity(m);\n    return;\n  }\n\n  m = m || matrix.create();\n\n  if (needLocalTransform) {\n    this.getLocalTransform(m);\n  } else {\n    mIdentity(m);\n  } // 应用父节点变换\n\n\n  if (parentHasTransform) {\n    if (needLocalTransform) {\n      matrix.mul(m, parent.transform, m);\n    } else {\n      matrix.copy(m, parent.transform);\n    }\n  } // 保存这个变换矩阵\n\n\n  this.transform = m;\n  this.invTransform = this.invTransform || matrix.create();\n  matrix.invert(this.invTransform, m);\n};\n\ntransformableProto.getLocalTransform = function (m) {\n  return Transformable.getLocalTransform(this, m);\n};\n/**\n * 将自己的transform应用到context上\n * @param {CanvasRenderingContext2D} ctx\n */\n\n\ntransformableProto.setTransform = function (ctx) {\n  var m = this.transform;\n  var dpr = ctx.dpr || 1;\n\n  if (m) {\n    ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n  } else {\n    ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n  }\n};\n\ntransformableProto.restoreTransform = function (ctx) {\n  var dpr = ctx.dpr || 1;\n  ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n};\n\nvar tmpTransform = [];\n/**\n * 分解`transform`矩阵到`position`, `rotation`, `scale`\n */\n\ntransformableProto.decomposeTransform = function () {\n  if (!this.transform) {\n    return;\n  }\n\n  var parent = this.parent;\n  var m = this.transform;\n\n  if (parent && parent.transform) {\n    // Get local transform and decompose them to position, scale, rotation\n    matrix.mul(tmpTransform, parent.invTransform, m);\n    m = tmpTransform;\n  }\n\n  var sx = m[0] * m[0] + m[1] * m[1];\n  var sy = m[2] * m[2] + m[3] * m[3];\n  var position = this.position;\n  var scale = this.scale;\n\n  if (isNotAroundZero(sx - 1)) {\n    sx = Math.sqrt(sx);\n  }\n\n  if (isNotAroundZero(sy - 1)) {\n    sy = Math.sqrt(sy);\n  }\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  position[0] = m[4];\n  position[1] = m[5];\n  scale[0] = sx;\n  scale[1] = sy;\n  this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n};\n/**\n * Get global scale\n * @return {Array.<number>}\n */\n\n\ntransformableProto.getGlobalScale = function () {\n  var m = this.transform;\n\n  if (!m) {\n    return [1, 1];\n  }\n\n  var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n  var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  return [sx, sy];\n};\n/**\n * 变换坐标位置到 shape 的局部坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToLocal = function (x, y) {\n  var v2 = [x, y];\n  var invTransform = this.invTransform;\n\n  if (invTransform) {\n    vector.applyTransform(v2, v2, invTransform);\n  }\n\n  return v2;\n};\n/**\n * 变换局部坐标位置到全局坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToGlobal = function (x, y) {\n  var v2 = [x, y];\n  var transform = this.transform;\n\n  if (transform) {\n    vector.applyTransform(v2, v2, transform);\n  }\n\n  return v2;\n};\n/**\n * @static\n * @param {Object} target\n * @param {Array.<number>} target.origin\n * @param {number} target.rotation\n * @param {Array.<number>} target.position\n * @param {Array.<number>} [m]\n */\n\n\nTransformable.getLocalTransform = function (target, m) {\n  m = m || [];\n  mIdentity(m);\n  var origin = target.origin;\n  var scale = target.scale || [1, 1];\n  var rotation = target.rotation || 0;\n  var position = target.position || [0, 0];\n\n  if (origin) {\n    // Translate to origin\n    m[4] -= origin[0];\n    m[5] -= origin[1];\n  }\n\n  matrix.scale(m, m, scale);\n\n  if (rotation) {\n    matrix.rotate(m, m, rotation);\n  }\n\n  if (origin) {\n    // Translate back from origin\n    m[4] += origin[0];\n    m[5] += origin[1];\n  }\n\n  m[4] += position[0];\n  m[5] += position[1];\n  return m;\n};\n\nvar _default = Transformable;\nmodule.exports = _default;","var Displayable = require(\"./Displayable\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar imageHelper = require(\"./helper/image\");\n\n/**\n * @alias zrender/graphic/Image\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nfunction ZImage(opts) {\n  Displayable.call(this, opts);\n}\n\nZImage.prototype = {\n  constructor: ZImage,\n  type: 'image',\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var src = style.image; // Must bind each time\n\n    style.bind(ctx, this, prevEl);\n    var image = this._image = imageHelper.createOrUpdateImage(src, this._image, this, this.onload);\n\n    if (!image || !imageHelper.isImageReady(image)) {\n      return;\n    } // 图片已经加载完成\n    // if (image.nodeName.toUpperCase() == 'IMG') {\n    //     if (!image.complete) {\n    //         return;\n    //     }\n    // }\n    // Else is canvas\n\n\n    var x = style.x || 0;\n    var y = style.y || 0;\n    var width = style.width;\n    var height = style.height;\n    var aspect = image.width / image.height;\n\n    if (width == null && height != null) {\n      // Keep image/height ratio\n      width = height * aspect;\n    } else if (height == null && width != null) {\n      height = width / aspect;\n    } else if (width == null && height == null) {\n      width = image.width;\n      height = image.height;\n    } // 设置transform\n\n\n    this.setTransform(ctx);\n\n    if (style.sWidth && style.sHeight) {\n      var sx = style.sx || 0;\n      var sy = style.sy || 0;\n      ctx.drawImage(image, sx, sy, style.sWidth, style.sHeight, x, y, width, height);\n    } else if (style.sx && style.sy) {\n      var sx = style.sx;\n      var sy = style.sy;\n      var sWidth = width - sx;\n      var sHeight = height - sy;\n      ctx.drawImage(image, sx, sy, sWidth, sHeight, x, y, width, height);\n    } else {\n      ctx.drawImage(image, x, y, width, height);\n    } // Draw rect text\n\n\n    if (style.text != null) {\n      // Only restore transform when needs draw text.\n      this.restoreTransform(ctx);\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  getBoundingRect: function () {\n    var style = this.style;\n\n    if (!this._rect) {\n      this._rect = new BoundingRect(style.x || 0, style.y || 0, style.width || 0, style.height || 0);\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(ZImage, Displayable);\nvar _default = ZImage;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\nvar getDataItemValue = _model.getDataItemValue;\n\nvar _referHelper = require(\"../../model/referHelper\");\n\nvar getCoordSysDefineBySeries = _referHelper.getCoordSysDefineBySeries;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\nvar map = _util.map;\nvar isArray = _util.isArray;\nvar isString = _util.isString;\nvar isObject = _util.isObject;\nvar isTypedArray = _util.isTypedArray;\nvar isArrayLike = _util.isArrayLike;\nvar extend = _util.extend;\nvar assert = _util.assert;\n\nvar Source = require(\"../Source\");\n\nvar _sourceType = require(\"./sourceType\");\n\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\nvar SOURCE_FORMAT_ARRAY_ROWS = _sourceType.SOURCE_FORMAT_ARRAY_ROWS;\nvar SOURCE_FORMAT_OBJECT_ROWS = _sourceType.SOURCE_FORMAT_OBJECT_ROWS;\nvar SOURCE_FORMAT_KEYED_COLUMNS = _sourceType.SOURCE_FORMAT_KEYED_COLUMNS;\nvar SOURCE_FORMAT_UNKNOWN = _sourceType.SOURCE_FORMAT_UNKNOWN;\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\nvar SERIES_LAYOUT_BY_ROW = _sourceType.SERIES_LAYOUT_BY_ROW;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\n/**\n * @see {module:echarts/data/Source}\n * @param {module:echarts/component/dataset/DatasetModel} datasetModel\n * @return {string} sourceFormat\n */\n\nfunction detectSourceFormat(datasetModel) {\n  var data = datasetModel.option.source;\n  var sourceFormat = SOURCE_FORMAT_UNKNOWN;\n\n  if (isTypedArray(data)) {\n    sourceFormat = SOURCE_FORMAT_TYPED_ARRAY;\n  } else if (isArray(data)) {\n    // FIXME Whether tolerate null in top level array?\n    for (var i = 0, len = data.length; i < len; i++) {\n      var item = data[i];\n\n      if (item == null) {\n        continue;\n      } else if (isArray(item)) {\n        sourceFormat = SOURCE_FORMAT_ARRAY_ROWS;\n        break;\n      } else if (isObject(item)) {\n        sourceFormat = SOURCE_FORMAT_OBJECT_ROWS;\n        break;\n      }\n    }\n  } else if (isObject(data)) {\n    for (var key in data) {\n      if (data.hasOwnProperty(key) && isArrayLike(data[key])) {\n        sourceFormat = SOURCE_FORMAT_KEYED_COLUMNS;\n        break;\n      }\n    }\n  } else if (data != null) {\n    throw new Error('Invalid data');\n  }\n\n  inner(datasetModel).sourceFormat = sourceFormat;\n}\n/**\n * [Scenarios]:\n * (1) Provide source data directly:\n *     series: {\n *         encode: {...},\n *         dimensions: [...]\n *         seriesLayoutBy: 'row',\n *         data: [[...]]\n *     }\n * (2) Refer to datasetModel.\n *     series: [{\n *         encode: {...}\n *         // Ignore datasetIndex means `datasetIndex: 0`\n *         // and the dimensions defination in dataset is used\n *     }, {\n *         encode: {...},\n *         seriesLayoutBy: 'column',\n *         datasetIndex: 1\n *     }]\n *\n * Get data from series itself or datset.\n * @return {module:echarts/data/Source} source\n */\n\n\nfunction getSource(seriesModel) {\n  return inner(seriesModel).source;\n}\n/**\n * MUST be called before mergeOption of all series.\n * @param {module:echarts/model/Global} ecModel\n */\n\n\nfunction resetSourceDefaulter(ecModel) {\n  // `datasetMap` is used to make default encode.\n  inner(ecModel).datasetMap = createHashMap();\n}\n/**\n * [Caution]:\n * MUST be called after series option merged and\n * before \"series.getInitailData()\" called.\n *\n * [The rule of making default encode]:\n * Category axis (if exists) alway map to the first dimension.\n * Each other axis occupies a subsequent dimension.\n *\n * [Why make default encode]:\n * Simplify the typing of encode in option, avoiding the case like that:\n * series: [{encode: {x: 0, y: 1}}, {encode: {x: 0, y: 2}}, {encode: {x: 0, y: 3}}],\n * where the \"y\" have to be manually typed as \"1, 2, 3, ...\".\n *\n * @param {module:echarts/model/Series} seriesModel\n */\n\n\nfunction prepareSource(seriesModel) {\n  var seriesOption = seriesModel.option;\n  var data = seriesOption.data;\n  var sourceFormat = isTypedArray(data) ? SOURCE_FORMAT_TYPED_ARRAY : SOURCE_FORMAT_ORIGINAL;\n  var fromDataset = false;\n  var seriesLayoutBy = seriesOption.seriesLayoutBy;\n  var sourceHeader = seriesOption.sourceHeader;\n  var dimensionsDefine = seriesOption.dimensions;\n  var datasetModel = getDatasetModel(seriesModel);\n\n  if (datasetModel) {\n    var datasetOption = datasetModel.option;\n    data = datasetOption.source;\n    sourceFormat = inner(datasetModel).sourceFormat;\n    fromDataset = true; // These settings from series has higher priority.\n\n    seriesLayoutBy = seriesLayoutBy || datasetOption.seriesLayoutBy;\n    sourceHeader == null && (sourceHeader = datasetOption.sourceHeader);\n    dimensionsDefine = dimensionsDefine || datasetOption.dimensions;\n  }\n\n  var completeResult = completeBySourceData(data, sourceFormat, seriesLayoutBy, sourceHeader, dimensionsDefine); // Note: dataset option does not have `encode`.\n\n  var encodeDefine = seriesOption.encode;\n\n  if (!encodeDefine && datasetModel) {\n    encodeDefine = makeDefaultEncode(seriesModel, datasetModel, data, sourceFormat, seriesLayoutBy, completeResult);\n  }\n\n  inner(seriesModel).source = new Source({\n    data: data,\n    fromDataset: fromDataset,\n    seriesLayoutBy: seriesLayoutBy,\n    sourceFormat: sourceFormat,\n    dimensionsDefine: completeResult.dimensionsDefine,\n    startIndex: completeResult.startIndex,\n    dimensionsDetectCount: completeResult.dimensionsDetectCount,\n    encodeDefine: encodeDefine\n  });\n} // return {startIndex, dimensionsDefine, dimensionsCount}\n\n\nfunction completeBySourceData(data, sourceFormat, seriesLayoutBy, sourceHeader, dimensionsDefine) {\n  if (!data) {\n    return {\n      dimensionsDefine: normalizeDimensionsDefine(dimensionsDefine)\n    };\n  }\n\n  var dimensionsDetectCount;\n  var startIndex;\n  var findPotentialName;\n\n  if (sourceFormat === SOURCE_FORMAT_ARRAY_ROWS) {\n    // Rule: Most of the first line are string: it is header.\n    // Caution: consider a line with 5 string and 1 number,\n    // it still can not be sure it is a head, because the\n    // 5 string may be 5 values of category columns.\n    if (sourceHeader === 'auto' || sourceHeader == null) {\n      arrayRowsTravelFirst(function (val) {\n        // '-' is regarded as null/undefined.\n        if (val != null && val !== '-') {\n          if (isString(val)) {\n            startIndex == null && (startIndex = 1);\n          } else {\n            startIndex = 0;\n          }\n        } // 10 is an experience number, avoid long loop.\n\n      }, seriesLayoutBy, data, 10);\n    } else {\n      startIndex = sourceHeader ? 1 : 0;\n    }\n\n    if (!dimensionsDefine && startIndex === 1) {\n      dimensionsDefine = [];\n      arrayRowsTravelFirst(function (val, index) {\n        dimensionsDefine[index] = val != null ? val : '';\n      }, seriesLayoutBy, data);\n    }\n\n    dimensionsDetectCount = dimensionsDefine ? dimensionsDefine.length : seriesLayoutBy === SERIES_LAYOUT_BY_ROW ? data.length : data[0] ? data[0].length : null;\n  } else if (sourceFormat === SOURCE_FORMAT_OBJECT_ROWS) {\n    if (!dimensionsDefine) {\n      dimensionsDefine = objectRowsCollectDimensions(data);\n      findPotentialName = true;\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS) {\n    if (!dimensionsDefine) {\n      dimensionsDefine = [];\n      findPotentialName = true;\n      each(data, function (colArr, key) {\n        dimensionsDefine.push(key);\n      });\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    var value0 = getDataItemValue(data[0]);\n    dimensionsDetectCount = isArray(value0) && value0.length || 1;\n  } else if (sourceFormat === SOURCE_FORMAT_TYPED_ARRAY) {}\n\n  var potentialNameDimIndex;\n\n  if (findPotentialName) {\n    each(dimensionsDefine, function (dim, idx) {\n      if ((isObject(dim) ? dim.name : dim) === 'name') {\n        potentialNameDimIndex = idx;\n      }\n    });\n  }\n\n  return {\n    startIndex: startIndex,\n    dimensionsDefine: normalizeDimensionsDefine(dimensionsDefine),\n    dimensionsDetectCount: dimensionsDetectCount,\n    potentialNameDimIndex: potentialNameDimIndex // TODO: potentialIdDimIdx\n\n  };\n} // Consider dimensions defined like ['A', 'price', 'B', 'price', 'C', 'price'],\n// which is reasonable. But dimension name is duplicated.\n// Returns undefined or an array contains only object without null/undefiend or string.\n\n\nfunction normalizeDimensionsDefine(dimensionsDefine) {\n  if (!dimensionsDefine) {\n    // The meaning of null/undefined is different from empty array.\n    return;\n  }\n\n  var nameMap = createHashMap();\n  return map(dimensionsDefine, function (item, index) {\n    item = extend({}, isObject(item) ? item : {\n      name: item\n    }); // User can set null in dimensions.\n    // We dont auto specify name, othewise a given name may\n    // cause it be refered unexpectedly.\n\n    if (item.name == null) {\n      return item;\n    } // Also consider number form like 2012.\n\n\n    item.name += ''; // User may also specify displayName.\n    // displayName will always exists except user not\n    // specified or dim name is not specified or detected.\n    // (A auto generated dim name will not be used as\n    // displayName).\n\n    if (item.displayName == null) {\n      item.displayName = item.name;\n    }\n\n    var exist = nameMap.get(item.name);\n\n    if (!exist) {\n      nameMap.set(item.name, {\n        count: 1\n      });\n    } else {\n      item.name += '-' + exist.count++;\n    }\n\n    return item;\n  });\n}\n\nfunction arrayRowsTravelFirst(cb, seriesLayoutBy, data, maxLoop) {\n  maxLoop == null && (maxLoop = Infinity);\n\n  if (seriesLayoutBy === SERIES_LAYOUT_BY_ROW) {\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\n      cb(data[i] ? data[i][0] : null, i);\n    }\n  } else {\n    var value0 = data[0] || [];\n\n    for (var i = 0; i < value0.length && i < maxLoop; i++) {\n      cb(value0[i], i);\n    }\n  }\n}\n\nfunction objectRowsCollectDimensions(data) {\n  var firstIndex = 0;\n  var obj;\n\n  while (firstIndex < data.length && !(obj = data[firstIndex++])) {} // jshint ignore: line\n\n\n  if (obj) {\n    var dimensions = [];\n    each(obj, function (value, key) {\n      dimensions.push(key);\n    });\n    return dimensions;\n  }\n} // ??? TODO merge to completedimensions, where also has\n// default encode making logic. And the default rule\n// should depends on series? consider 'map'.\n\n\nfunction makeDefaultEncode(seriesModel, datasetModel, data, sourceFormat, seriesLayoutBy, completeResult) {\n  var coordSysDefine = getCoordSysDefineBySeries(seriesModel);\n  var encode = {}; // var encodeTooltip = [];\n  // var encodeLabel = [];\n\n  var encodeItemName = [];\n  var encodeSeriesName = [];\n  var seriesType = seriesModel.subType; // ??? TODO refactor: provide by series itself.\n  // Consider the case: 'map' series is based on geo coordSys,\n  // 'graph', 'heatmap' can be based on cartesian. But can not\n  // give default rule simply here.\n\n  var nSeriesMap = createHashMap(['pie', 'map', 'funnel']);\n  var cSeriesMap = createHashMap(['line', 'bar', 'pictorialBar', 'scatter', 'effectScatter', 'candlestick', 'boxplot']); // Usually in this case series will use the first data\n  // dimension as the \"value\" dimension, or other default\n  // processes respectively.\n\n  if (coordSysDefine && cSeriesMap.get(seriesType) != null) {\n    var ecModel = seriesModel.ecModel;\n    var datasetMap = inner(ecModel).datasetMap;\n    var key = datasetModel.uid + '_' + seriesLayoutBy;\n    var datasetRecord = datasetMap.get(key) || datasetMap.set(key, {\n      categoryWayDim: 1,\n      valueWayDim: 0\n    }); // TODO\n    // Auto detect first time axis and do arrangement.\n\n    each(coordSysDefine.coordSysDims, function (coordDim) {\n      // In value way.\n      if (coordSysDefine.firstCategoryDimIndex == null) {\n        var dataDim = datasetRecord.valueWayDim++;\n        encode[coordDim] = dataDim; // ??? TODO give a better default series name rule?\n        // especially when encode x y specified.\n        // consider: when mutiple series share one dimension\n        // category axis, series name should better use\n        // the other dimsion name. On the other hand, use\n        // both dimensions name.\n\n        encodeSeriesName.push(dataDim); // encodeTooltip.push(dataDim);\n        // encodeLabel.push(dataDim);\n      } // In category way, category axis.\n      else if (coordSysDefine.categoryAxisMap.get(coordDim)) {\n          encode[coordDim] = 0;\n          encodeItemName.push(0);\n        } // In category way, non-category axis.\n        else {\n            var dataDim = datasetRecord.categoryWayDim++;\n            encode[coordDim] = dataDim; // encodeTooltip.push(dataDim);\n            // encodeLabel.push(dataDim);\n\n            encodeSeriesName.push(dataDim);\n          }\n    });\n  } // Do not make a complex rule! Hard to code maintain and not necessary.\n  // ??? TODO refactor: provide by series itself.\n  // [{name: ..., value: ...}, ...] like:\n  else if (nSeriesMap.get(seriesType) != null) {\n      // Find the first not ordinal. (5 is an experience value)\n      var firstNotOrdinal;\n\n      for (var i = 0; i < 5 && firstNotOrdinal == null; i++) {\n        if (!doGuessOrdinal(data, sourceFormat, seriesLayoutBy, completeResult.dimensionsDefine, completeResult.startIndex, i)) {\n          firstNotOrdinal = i;\n        }\n      }\n\n      if (firstNotOrdinal != null) {\n        encode.value = firstNotOrdinal;\n        var nameDimIndex = completeResult.potentialNameDimIndex || Math.max(firstNotOrdinal - 1, 0); // By default, label use itemName in charts.\n        // So we dont set encodeLabel here.\n\n        encodeSeriesName.push(nameDimIndex);\n        encodeItemName.push(nameDimIndex); // encodeTooltip.push(firstNotOrdinal);\n      }\n    } // encodeTooltip.length && (encode.tooltip = encodeTooltip);\n  // encodeLabel.length && (encode.label = encodeLabel);\n\n\n  encodeItemName.length && (encode.itemName = encodeItemName);\n  encodeSeriesName.length && (encode.seriesName = encodeSeriesName);\n  return encode;\n}\n/**\n * If return null/undefined, indicate that should not use datasetModel.\n */\n\n\nfunction getDatasetModel(seriesModel) {\n  var option = seriesModel.option; // Caution: consider the scenario:\n  // A dataset is declared and a series is not expected to use the dataset,\n  // and at the beginning `setOption({series: { noData })` (just prepare other\n  // option but no data), then `setOption({series: {data: [...]}); In this case,\n  // the user should set an empty array to avoid that dataset is used by default.\n\n  var thisData = option.data;\n\n  if (!thisData) {\n    return seriesModel.ecModel.getComponent('dataset', option.datasetIndex || 0);\n  }\n}\n/**\n * The rule should not be complex, otherwise user might not\n * be able to known where the data is wrong.\n * The code is ugly, but how to make it neat?\n *\n * @param {module:echars/data/Source} source\n * @param {number} dimIndex\n * @return {boolean} Whether ordinal.\n */\n\n\nfunction guessOrdinal(source, dimIndex) {\n  return doGuessOrdinal(source.data, source.sourceFormat, source.seriesLayoutBy, source.dimensionsDefine, source.startIndex, dimIndex);\n} // dimIndex may be overflow source data.\n\n\nfunction doGuessOrdinal(data, sourceFormat, seriesLayoutBy, dimensionsDefine, startIndex, dimIndex) {\n  var result; // Experience value.\n\n  var maxLoop = 5;\n\n  if (isTypedArray(data)) {\n    return false;\n  } // When sourceType is 'objectRows' or 'keyedColumns', dimensionsDefine\n  // always exists in source.\n\n\n  var dimName;\n\n  if (dimensionsDefine) {\n    dimName = dimensionsDefine[dimIndex];\n    dimName = isObject(dimName) ? dimName.name : dimName;\n  }\n\n  if (sourceFormat === SOURCE_FORMAT_ARRAY_ROWS) {\n    if (seriesLayoutBy === SERIES_LAYOUT_BY_ROW) {\n      var sample = data[dimIndex];\n\n      for (var i = 0; i < (sample || []).length && i < maxLoop; i++) {\n        if ((result = detectValue(sample[startIndex + i])) != null) {\n          return result;\n        }\n      }\n    } else {\n      for (var i = 0; i < data.length && i < maxLoop; i++) {\n        var row = data[startIndex + i];\n\n        if (row && (result = detectValue(row[dimIndex])) != null) {\n          return result;\n        }\n      }\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_OBJECT_ROWS) {\n    if (!dimName) {\n      return;\n    }\n\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\n      var item = data[i];\n\n      if (item && (result = detectValue(item[dimName])) != null) {\n        return result;\n      }\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS) {\n    if (!dimName) {\n      return;\n    }\n\n    var sample = data[dimName];\n\n    if (!sample || isTypedArray(sample)) {\n      return false;\n    }\n\n    for (var i = 0; i < sample.length && i < maxLoop; i++) {\n      if ((result = detectValue(sample[i])) != null) {\n        return result;\n      }\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\n      var item = data[i];\n      var val = getDataItemValue(item);\n\n      if (!isArray(val)) {\n        return false;\n      }\n\n      if ((result = detectValue(val[dimIndex])) != null) {\n        return result;\n      }\n    }\n  }\n\n  function detectValue(val) {\n    // Consider usage convenience, '1', '2' will be treated as \"number\".\n    // `isFinit('')` get `true`.\n    if (val != null && isFinite(val) && val !== '') {\n      return false;\n    } else if (isString(val) && val !== '-') {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nexports.detectSourceFormat = detectSourceFormat;\nexports.getSource = getSource;\nexports.resetSourceDefaulter = resetSourceDefaulter;\nexports.prepareSource = prepareSource;\nexports.guessOrdinal = guessOrdinal;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} {point: [x, y], el: ...} point Will not be null.\n */\nfunction _default(finder, ecModel) {\n  var point = [];\n  var seriesIndex = finder.seriesIndex;\n  var seriesModel;\n\n  if (seriesIndex == null || !(seriesModel = ecModel.getSeriesByIndex(seriesIndex))) {\n    return {\n      point: []\n    };\n  }\n\n  var data = seriesModel.getData();\n  var dataIndex = modelUtil.queryDataIndex(data, finder);\n\n  if (dataIndex == null || dataIndex < 0 || zrUtil.isArray(dataIndex)) {\n    return {\n      point: []\n    };\n  }\n\n  var el = data.getItemGraphicEl(dataIndex);\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (seriesModel.getTooltipPosition) {\n    point = seriesModel.getTooltipPosition(dataIndex) || [];\n  } else if (coordSys && coordSys.dataToPoint) {\n    point = coordSys.dataToPoint(data.getValues(zrUtil.map(coordSys.dimensions, function (dim) {\n      return data.mapDimension(dim);\n    }), dataIndex, true)) || [];\n  } else if (el) {\n    // Use graphic bounding rect\n    var rect = el.getBoundingRect().clone();\n    rect.applyTransform(el.transform);\n    point = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n\n  return {\n    point: point,\n    el: el\n  };\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _labelHelper = require(\"./labelHelper\");\n\nvar getDefaultLabel = _labelHelper.getDefaultLabel;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/chart/helper/Symbol\n */\n\n/**\n * @constructor\n * @alias {module:echarts/chart/helper/Symbol}\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @extends {module:zrender/graphic/Group}\n */\nfunction SymbolClz(data, idx, seriesScope) {\n  graphic.Group.call(this);\n  this.updateData(data, idx, seriesScope);\n}\n\nvar symbolProto = SymbolClz.prototype;\n/**\n * @public\n * @static\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @return {Array.<number>} [width, height]\n */\n\nvar getSymbolSize = SymbolClz.getSymbolSize = function (data, idx) {\n  var symbolSize = data.getItemVisual(idx, 'symbolSize');\n  return symbolSize instanceof Array ? symbolSize.slice() : [+symbolSize, +symbolSize];\n};\n\nfunction getScale(symbolSize) {\n  return [symbolSize[0] / 2, symbolSize[1] / 2];\n}\n\nfunction driftSymbol(dx, dy) {\n  this.parent.drift(dx, dy);\n}\n\nsymbolProto._createSymbol = function (symbolType, data, idx, symbolSize, keepAspect) {\n  // Remove paths created before\n  this.removeAll();\n  var color = data.getItemVisual(idx, 'color'); // var symbolPath = createSymbol(\n  //     symbolType, -0.5, -0.5, 1, 1, color\n  // );\n  // If width/height are set too small (e.g., set to 1) on ios10\n  // and macOS Sierra, a circle stroke become a rect, no matter what\n  // the scale is set. So we set width/height as 2. See #4150.\n\n  var symbolPath = createSymbol(symbolType, -1, -1, 2, 2, color, keepAspect);\n  symbolPath.attr({\n    z2: 100,\n    culling: true,\n    scale: getScale(symbolSize)\n  }); // Rewrite drift method\n\n  symbolPath.drift = driftSymbol;\n  this._symbolType = symbolType;\n  this.add(symbolPath);\n};\n/**\n * Stop animation\n * @param {boolean} toLastFrame\n */\n\n\nsymbolProto.stopSymbolAnimation = function (toLastFrame) {\n  this.childAt(0).stopAnimation(toLastFrame);\n};\n/**\n * FIXME:\n * Caution: This method breaks the encapsulation of this module,\n * but it indeed brings convenience. So do not use the method\n * unless you detailedly know all the implements of `Symbol`,\n * especially animation.\n *\n * Get symbol path element.\n */\n\n\nsymbolProto.getSymbolPath = function () {\n  return this.childAt(0);\n};\n/**\n * Get scale(aka, current symbol size).\n * Including the change caused by animation\n */\n\n\nsymbolProto.getScale = function () {\n  return this.childAt(0).scale;\n};\n/**\n * Highlight symbol\n */\n\n\nsymbolProto.highlight = function () {\n  this.childAt(0).trigger('emphasis');\n};\n/**\n * Downplay symbol\n */\n\n\nsymbolProto.downplay = function () {\n  this.childAt(0).trigger('normal');\n};\n/**\n * @param {number} zlevel\n * @param {number} z\n */\n\n\nsymbolProto.setZ = function (zlevel, z) {\n  var symbolPath = this.childAt(0);\n  symbolPath.zlevel = zlevel;\n  symbolPath.z = z;\n};\n\nsymbolProto.setDraggable = function (draggable) {\n  var symbolPath = this.childAt(0);\n  symbolPath.draggable = draggable;\n  symbolPath.cursor = draggable ? 'move' : 'pointer';\n};\n/**\n * Update symbol properties\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Object} [seriesScope]\n * @param {Object} [seriesScope.itemStyle]\n * @param {Object} [seriesScope.hoverItemStyle]\n * @param {Object} [seriesScope.symbolRotate]\n * @param {Object} [seriesScope.symbolOffset]\n * @param {module:echarts/model/Model} [seriesScope.labelModel]\n * @param {module:echarts/model/Model} [seriesScope.hoverLabelModel]\n * @param {boolean} [seriesScope.hoverAnimation]\n * @param {Object} [seriesScope.cursorStyle]\n * @param {module:echarts/model/Model} [seriesScope.itemModel]\n * @param {string} [seriesScope.symbolInnerColor]\n * @param {Object} [seriesScope.fadeIn=false]\n */\n\n\nsymbolProto.updateData = function (data, idx, seriesScope) {\n  this.silent = false;\n  var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n  var seriesModel = data.hostModel;\n  var symbolSize = getSymbolSize(data, idx);\n  var isInit = symbolType !== this._symbolType;\n\n  if (isInit) {\n    var keepAspect = data.getItemVisual(idx, 'symbolKeepAspect');\n\n    this._createSymbol(symbolType, data, idx, symbolSize, keepAspect);\n  } else {\n    var symbolPath = this.childAt(0);\n    symbolPath.silent = false;\n    graphic.updateProps(symbolPath, {\n      scale: getScale(symbolSize)\n    }, seriesModel, idx);\n  }\n\n  this._updateCommon(data, idx, symbolSize, seriesScope);\n\n  if (isInit) {\n    var symbolPath = this.childAt(0);\n    var fadeIn = seriesScope && seriesScope.fadeIn;\n    var target = {\n      scale: symbolPath.scale.slice()\n    };\n    fadeIn && (target.style = {\n      opacity: symbolPath.style.opacity\n    });\n    symbolPath.scale = [0, 0];\n    fadeIn && (symbolPath.style.opacity = 0);\n    graphic.initProps(symbolPath, target, seriesModel, idx);\n  }\n\n  this._seriesModel = seriesModel;\n}; // Update common properties\n\n\nvar normalStyleAccessPath = ['itemStyle'];\nvar emphasisStyleAccessPath = ['emphasis', 'itemStyle'];\nvar normalLabelAccessPath = ['label'];\nvar emphasisLabelAccessPath = ['emphasis', 'label'];\n/**\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Array.<number>} symbolSize\n * @param {Object} [seriesScope]\n */\n\nsymbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n  var symbolPath = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var color = data.getItemVisual(idx, 'color'); // Reset style\n\n  if (symbolPath.type !== 'image') {\n    symbolPath.useStyle({\n      strokeNoScale: true\n    });\n  }\n\n  var itemStyle = seriesScope && seriesScope.itemStyle;\n  var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n  var symbolRotate = seriesScope && seriesScope.symbolRotate;\n  var symbolOffset = seriesScope && seriesScope.symbolOffset;\n  var labelModel = seriesScope && seriesScope.labelModel;\n  var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n  var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n  var cursorStyle = seriesScope && seriesScope.cursorStyle;\n\n  if (!seriesScope || data.hasItemOption) {\n    var itemModel = seriesScope && seriesScope.itemModel ? seriesScope.itemModel : data.getItemModel(idx); // Color must be excluded.\n    // Because symbol provide setColor individually to set fill and stroke\n\n    itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n    hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n    symbolRotate = itemModel.getShallow('symbolRotate');\n    symbolOffset = itemModel.getShallow('symbolOffset');\n    labelModel = itemModel.getModel(normalLabelAccessPath);\n    hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n    hoverAnimation = itemModel.getShallow('hoverAnimation');\n    cursorStyle = itemModel.getShallow('cursor');\n  } else {\n    hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n  }\n\n  var elStyle = symbolPath.style;\n  symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n  if (symbolOffset) {\n    symbolPath.attr('position', [parsePercent(symbolOffset[0], symbolSize[0]), parsePercent(symbolOffset[1], symbolSize[1])]);\n  }\n\n  cursorStyle && symbolPath.attr('cursor', cursorStyle); // PENDING setColor before setStyle!!!\n\n  symbolPath.setColor(color, seriesScope && seriesScope.symbolInnerColor);\n  symbolPath.setStyle(itemStyle);\n  var opacity = data.getItemVisual(idx, 'opacity');\n\n  if (opacity != null) {\n    elStyle.opacity = opacity;\n  }\n\n  var liftZ = data.getItemVisual(idx, 'liftZ');\n  var z2Origin = symbolPath.__z2Origin;\n\n  if (liftZ != null) {\n    if (z2Origin == null) {\n      symbolPath.__z2Origin = symbolPath.z2;\n      symbolPath.z2 += liftZ;\n    }\n  } else if (z2Origin != null) {\n    symbolPath.z2 = z2Origin;\n    symbolPath.__z2Origin = null;\n  }\n\n  var useNameLabel = seriesScope && seriesScope.useNameLabel;\n  graphic.setLabelStyle(elStyle, hoverItemStyle, labelModel, hoverLabelModel, {\n    labelFetcher: seriesModel,\n    labelDataIndex: idx,\n    defaultText: getLabelDefaultText,\n    isRectText: true,\n    autoColor: color\n  }); // Do not execute util needed.\n\n  function getLabelDefaultText(idx, opt) {\n    return useNameLabel ? data.getName(idx) : getDefaultLabel(data, idx);\n  }\n\n  symbolPath.off('mouseover').off('mouseout').off('emphasis').off('normal');\n  symbolPath.hoverStyle = hoverItemStyle; // FIXME\n  // Do not use symbol.trigger('emphasis'), but use symbol.highlight() instead.\n\n  graphic.setHoverStyle(symbolPath);\n  var scale = getScale(symbolSize);\n\n  if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n    var onEmphasis = function () {\n      // Do not support this hover animation util some scenario required.\n      // Animation can only be supported in hover layer when using `el.incremetal`.\n      if (this.incremental) {\n        return;\n      }\n\n      var ratio = scale[1] / scale[0];\n      this.animateTo({\n        scale: [Math.max(scale[0] * 1.1, scale[0] + 3), Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)]\n      }, 400, 'elasticOut');\n    };\n\n    var onNormal = function () {\n      if (this.incremental) {\n        return;\n      }\n\n      this.animateTo({\n        scale: scale\n      }, 400, 'elasticOut');\n    };\n\n    symbolPath.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n  }\n};\n/**\n * @param {Function} cb\n * @param {Object} [opt]\n * @param {Object} [opt.keepLabel=true]\n */\n\n\nsymbolProto.fadeOut = function (cb, opt) {\n  var symbolPath = this.childAt(0); // Avoid mistaken hover when fading out\n\n  this.silent = symbolPath.silent = true; // Not show text when animating\n\n  !(opt && opt.keepLabel) && (symbolPath.style.text = null);\n  graphic.updateProps(symbolPath, {\n    style: {\n      opacity: 0\n    },\n    scale: [0, 0]\n  }, this._seriesModel, this.dataIndex, cb);\n};\n\nzrUtil.inherits(SymbolClz, graphic.Group);\nvar _default = SymbolClz;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar createListFromArray = require(\"./chart/helper/createListFromArray\");\n\nvar axisHelper = require(\"./coord/axisHelper\");\n\nvar axisModelCommonMixin = require(\"./coord/axisModelCommonMixin\");\n\nvar Model = require(\"./model/Model\");\n\nvar _layout = require(\"./util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\nexports.getLayoutRect = _layout.getLayoutRect;\n\nvar _dataStackHelper = require(\"./data/helper/dataStackHelper\");\n\nvar enableDataStack = _dataStackHelper.enableDataStack;\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\nvar getStackedDimension = _dataStackHelper.getStackedDimension;\n\nvar _completeDimensions = require(\"./data/helper/completeDimensions\");\n\nexports.completeDimensions = _completeDimensions;\n\nvar _createDimensions = require(\"./data/helper/createDimensions\");\n\nexports.createDimensions = _createDimensions;\n\nvar _symbol = require(\"./util/symbol\");\n\nexports.createSymbol = _symbol.createSymbol;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// import createGraphFromNodeEdge from './chart/helper/createGraphFromNodeEdge';\n\n/**\n * Create a muti dimension List structure from seriesModel.\n * @param  {module:echarts/model/Model} seriesModel\n * @return {module:echarts/data/List} list\n */\nfunction createList(seriesModel) {\n  return createListFromArray(seriesModel.getSource(), seriesModel);\n} // export function createGraph(seriesModel) {\n//     var nodes = seriesModel.get('data');\n//     var links = seriesModel.get('links');\n//     return createGraphFromNodeEdge(nodes, links, seriesModel);\n// }\n\n\nvar dataStack = {\n  isDimensionStacked: isDimensionStacked,\n  enableDataStack: enableDataStack,\n  getStackedDimension: getStackedDimension\n};\n/**\n * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n * @see http://echarts.baidu.com/option.html#series-scatter.symbol\n * @param {string} symbolDesc\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @param {string} color\n */\n\n/**\n * Create scale\n * @param {Array.<number>} dataExtent\n * @param {Object|module:echarts/Model} option\n */\nfunction createScale(dataExtent, option) {\n  var axisModel = option;\n\n  if (!Model.isInstance(option)) {\n    axisModel = new Model(option);\n    zrUtil.mixin(axisModel, axisModelCommonMixin);\n  }\n\n  var scale = axisHelper.createScaleByModel(axisModel);\n  scale.setExtent(dataExtent[0], dataExtent[1]);\n  axisHelper.niceScaleExtent(scale, axisModel);\n  return scale;\n}\n/**\n * Mixin common methods to axis model,\n *\n * Inlcude methods\n * `getFormattedLabels() => Array.<string>`\n * `getCategories() => Array.<string>`\n * `getMin(origin: boolean) => number`\n * `getMax(origin: boolean) => number`\n * `getNeedCrossZero() => boolean`\n * `setRange(start: number, end: number)`\n * `resetRange()`\n */\n\n\nfunction mixinAxisModelCommonMethods(Model) {\n  zrUtil.mixin(Model, axisModelCommonMixin);\n}\n\nexports.createList = createList;\nexports.dataStack = dataStack;\nexports.createScale = createScale;\nexports.mixinAxisModelCommonMethods = mixinAxisModelCommonMethods;","/**\n * 3x2矩阵操作类\n * @exports zrender/tool/matrix\n */\nvar ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * Create a identity matrix.\n * @return {Float32Array|Array.<number>}\n */\n\nfunction create() {\n  var out = new ArrayCtor(6);\n  identity(out);\n  return out;\n}\n/**\n * 设置矩阵为单位矩阵\n * @param {Float32Array|Array.<number>} out\n */\n\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * 复制矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m\n */\n\n\nfunction copy(out, m) {\n  out[0] = m[0];\n  out[1] = m[1];\n  out[2] = m[2];\n  out[3] = m[3];\n  out[4] = m[4];\n  out[5] = m[5];\n  return out;\n}\n/**\n * 矩阵相乘\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m1\n * @param {Float32Array|Array.<number>} m2\n */\n\n\nfunction mul(out, m1, m2) {\n  // Consider matrix.mul(m, m2, m);\n  // where out is the same as m2.\n  // So use temp variable to escape error.\n  var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n  var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n  var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n  var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n  var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n  var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = out3;\n  out[4] = out4;\n  out[5] = out5;\n  return out;\n}\n/**\n * 平移变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction translate(out, a, v) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4] + v[0];\n  out[5] = a[5] + v[1];\n  return out;\n}\n/**\n * 旋转变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {number} rad\n */\n\n\nfunction rotate(out, a, rad) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var st = Math.sin(rad);\n  var ct = Math.cos(rad);\n  out[0] = aa * ct + ab * st;\n  out[1] = -aa * st + ab * ct;\n  out[2] = ac * ct + ad * st;\n  out[3] = -ac * st + ct * ad;\n  out[4] = ct * atx + st * aty;\n  out[5] = ct * aty - st * atx;\n  return out;\n}\n/**\n * 缩放变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction scale(out, a, v) {\n  var vx = v[0];\n  var vy = v[1];\n  out[0] = a[0] * vx;\n  out[1] = a[1] * vy;\n  out[2] = a[2] * vx;\n  out[3] = a[3] * vy;\n  out[4] = a[4] * vx;\n  out[5] = a[5] * vy;\n  return out;\n}\n/**\n * 求逆矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n */\n\n\nfunction invert(out, a) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n/**\n * Clone a new matrix.\n * @param {Float32Array|Array.<number>} a\n */\n\n\nfunction clone(a) {\n  var b = create();\n  copy(b, a);\n  return b;\n}\n\nexports.create = create;\nexports.identity = identity;\nexports.copy = copy;\nexports.mul = mul;\nexports.translate = translate;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.invert = invert;\nexports.clone = clone;","var BaseBarSeries = require(\"./BaseBarSeries\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = BaseBarSeries.extend({\n  type: 'series.bar',\n  dependencies: ['grid', 'polar'],\n  brushSelector: 'rect',\n\n  /**\n   * @override\n   */\n  getProgressive: function () {\n    // Do not support progressive in normal mode.\n    return this.get('large') ? this.get('progressive') : false;\n  },\n\n  /**\n   * @override\n   */\n  getProgressiveThreshold: function () {\n    // Do not support progressive in normal mode.\n    var progressiveThreshold = this.get('progressiveThreshold');\n    var largeThreshold = this.get('largeThreshold');\n\n    if (largeThreshold > progressiveThreshold) {\n      progressiveThreshold = largeThreshold;\n    }\n\n    return progressiveThreshold;\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\nvar each = zrUtil.each;\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n * @param {Function} handler\n *      param: {string} currTrigger\n *      param: {Array.<number>} point\n */\n\nfunction register(key, api, handler) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  inner(zr).records || (inner(zr).records = {});\n  initGlobalListeners(zr, api);\n  var record = inner(zr).records[key] || (inner(zr).records[key] = {});\n  record.handler = handler;\n}\n\nfunction initGlobalListeners(zr, api) {\n  if (inner(zr).initialized) {\n    return;\n  }\n\n  inner(zr).initialized = true;\n  useHandler('click', zrUtil.curry(doEnter, 'click'));\n  useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove')); // useHandler('mouseout', onLeave);\n\n  useHandler('globalout', onLeave);\n\n  function useHandler(eventType, cb) {\n    zr.on(eventType, function (e) {\n      var dis = makeDispatchAction(api);\n      each(inner(zr).records, function (record) {\n        record && cb(record, e, dis.dispatchAction);\n      });\n      dispatchTooltipFinally(dis.pendings, api);\n    });\n  }\n}\n\nfunction dispatchTooltipFinally(pendings, api) {\n  var showLen = pendings.showTip.length;\n  var hideLen = pendings.hideTip.length;\n  var actuallyPayload;\n\n  if (showLen) {\n    actuallyPayload = pendings.showTip[showLen - 1];\n  } else if (hideLen) {\n    actuallyPayload = pendings.hideTip[hideLen - 1];\n  }\n\n  if (actuallyPayload) {\n    actuallyPayload.dispatchAction = null;\n    api.dispatchAction(actuallyPayload);\n  }\n}\n\nfunction onLeave(record, e, dispatchAction) {\n  record.handler('leave', null, dispatchAction);\n}\n\nfunction doEnter(currTrigger, record, e, dispatchAction) {\n  record.handler(currTrigger, e, dispatchAction);\n}\n\nfunction makeDispatchAction(api) {\n  var pendings = {\n    showTip: [],\n    hideTip: []\n  }; // FIXME\n  // better approach?\n  // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n  // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n  // So we have to add \"final stage\" to merge those dispatched actions.\n\n  var dispatchAction = function (payload) {\n    var pendingList = pendings[payload.type];\n\n    if (pendingList) {\n      pendingList.push(payload);\n    } else {\n      payload.dispatchAction = dispatchAction;\n      api.dispatchAction(payload);\n    }\n  };\n\n  return {\n    dispatchAction: dispatchAction,\n    pendings: pendings\n  };\n}\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction unregister(key, api) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  var record = (inner(zr).records || {})[key];\n\n  if (record) {\n    inner(zr).records[key] = null;\n  }\n}\n\nexports.register = register;\nexports.unregister = unregister;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Scale = require(\"./Scale\");\n\nvar OrdinalMeta = require(\"../data/OrdinalMeta\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n// FIXME only one data\nvar scaleProto = Scale.prototype;\nvar OrdinalScale = Scale.extend({\n  type: 'ordinal',\n\n  /**\n   * @param {module:echarts/data/OrdianlMeta|Array.<string>} ordinalMeta\n   */\n  init: function (ordinalMeta, extent) {\n    // Caution: Should not use instanceof, consider ec-extensions using\n    // import approach to get OrdinalMeta class.\n    if (!ordinalMeta || zrUtil.isArray(ordinalMeta)) {\n      ordinalMeta = new OrdinalMeta({\n        categories: ordinalMeta\n      });\n    }\n\n    this._ordinalMeta = ordinalMeta;\n    this._extent = extent || [0, ordinalMeta.categories.length - 1];\n  },\n  parse: function (val) {\n    return typeof val === 'string' ? this._ordinalMeta.getOrdinal(val) // val might be float.\n    : Math.round(val);\n  },\n  contain: function (rank) {\n    rank = this.parse(rank);\n    return scaleProto.contain.call(this, rank) && this._ordinalMeta.categories[rank] != null;\n  },\n\n  /**\n   * Normalize given rank or name to linear [0, 1]\n   * @param {number|string} [val]\n   * @return {number}\n   */\n  normalize: function (val) {\n    return scaleProto.normalize.call(this, this.parse(val));\n  },\n  scale: function (val) {\n    return Math.round(scaleProto.scale.call(this, val));\n  },\n\n  /**\n   * @return {Array}\n   */\n  getTicks: function () {\n    var ticks = [];\n    var extent = this._extent;\n    var rank = extent[0];\n\n    while (rank <= extent[1]) {\n      ticks.push(rank);\n      rank++;\n    }\n\n    return ticks;\n  },\n\n  /**\n   * Get item on rank n\n   * @param {number} n\n   * @return {string}\n   */\n  getLabel: function (n) {\n    if (!this.isBlank()) {\n      // Note that if no data, ordinalMeta.categories is an empty array.\n      return this._ordinalMeta.categories[n];\n    }\n  },\n\n  /**\n   * @return {number}\n   */\n  count: function () {\n    return this._extent[1] - this._extent[0] + 1;\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    this.unionExtent(data.getApproximateExtent(dim));\n  },\n  getOrdinalMeta: function () {\n    return this._ordinalMeta;\n  },\n  niceTicks: zrUtil.noop,\n  niceExtent: zrUtil.noop\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nOrdinalScale.create = function () {\n  return new OrdinalScale();\n};\n\nvar _default = OrdinalScale;\nmodule.exports = _default;","var zrUtil = require(\"../core/util\");\n\nvar Style = require(\"./Style\");\n\nvar Element = require(\"../Element\");\n\nvar RectText = require(\"./mixin/RectText\");\n\n/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n/**\n * @alias module:zrender/graphic/Displayable\n * @extends module:zrender/Element\n * @extends module:zrender/graphic/mixin/RectText\n */\nfunction Displayable(opts) {\n  opts = opts || {};\n  Element.call(this, opts); // Extend properties\n\n  for (var name in opts) {\n    if (opts.hasOwnProperty(name) && name !== 'style') {\n      this[name] = opts[name];\n    }\n  }\n  /**\n   * @type {module:zrender/graphic/Style}\n   */\n\n\n  this.style = new Style(opts.style, this);\n  this._rect = null; // Shapes for cascade clipping.\n\n  this.__clipPaths = []; // FIXME Stateful must be mixined after style is setted\n  // Stateful.call(this, opts);\n}\n\nDisplayable.prototype = {\n  constructor: Displayable,\n  type: 'displayable',\n\n  /**\n   * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n   * Dirty flag. From which painter will determine if this displayable object needs brush\n   * @name module:zrender/graphic/Displayable#__dirty\n   * @type {boolean}\n   */\n  __dirty: true,\n\n  /**\n   * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n   * If ignore drawing of the displayable object. Mouse event will still be triggered\n   * @name module:/zrender/graphic/Displayable#invisible\n   * @type {boolean}\n   * @default false\n   */\n  invisible: false,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z: 0,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z2: 0,\n\n  /**\n   * z层level，决定绘画在哪层canvas中\n   * @name module:/zrender/graphic/Displayable#zlevel\n   * @type {number}\n   * @default 0\n   */\n  zlevel: 0,\n\n  /**\n   * 是否可拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  draggable: false,\n\n  /**\n   * 是否正在拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  dragging: false,\n\n  /**\n   * 是否相应鼠标事件\n   * @name module:/zrender/graphic/Displayable#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * If enable culling\n   * @type {boolean}\n   * @default false\n   */\n  culling: false,\n\n  /**\n   * Mouse cursor when hovered\n   * @name module:/zrender/graphic/Displayable#cursor\n   * @type {string}\n   */\n  cursor: 'pointer',\n\n  /**\n   * If hover area is bounding rect\n   * @name module:/zrender/graphic/Displayable#rectHover\n   * @type {string}\n   */\n  rectHover: false,\n\n  /**\n   * Render the element progressively when the value >= 0,\n   * usefull for large data.\n   * @type {boolean}\n   */\n  progressive: false,\n\n  /**\n   * @type {boolean}\n   */\n  incremental: false,\n  // inplace is used with incremental\n  inplace: false,\n  beforeBrush: function (ctx) {},\n  afterBrush: function (ctx) {},\n\n  /**\n   * 图形绘制方法\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  // Interface\n  brush: function (ctx, prevEl) {},\n\n  /**\n   * 获取最小包围盒\n   * @return {module:zrender/core/BoundingRect}\n   */\n  // Interface\n  getBoundingRect: function () {},\n\n  /**\n   * 判断坐标 x, y 是否在图形上\n   * If displayable element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  contain: function (x, y) {\n    return this.rectContain(x, y);\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    cb.call(context, this);\n  },\n\n  /**\n   * 判断坐标 x, y 是否在图形的包围盒上\n   * If bounding rect of element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  rectContain: function (x, y) {\n    var coord = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    return rect.contain(coord[0], coord[1]);\n  },\n\n  /**\n   * 标记图形元素为脏，并且在下一帧重绘\n   * Mark displayable element dirty and refresh next frame\n   */\n  dirty: function () {\n    this.__dirty = true;\n    this._rect = null;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * 图形是否会触发事件\n   * If displayable object binded any event\n   * @return {boolean}\n   */\n  // TODO, 通过 bind 绑定的事件\n  // isSilent: function () {\n  //     return !(\n  //         this.hoverable || this.draggable\n  //         || this.onmousemove || this.onmouseover || this.onmouseout\n  //         || this.onmousedown || this.onmouseup || this.onclick\n  //         || this.ondragenter || this.ondragover || this.ondragleave\n  //         || this.ondrop\n  //     );\n  // },\n\n  /**\n   * Alias for animate('style')\n   * @param {boolean} loop\n   */\n  animateStyle: function (loop) {\n    return this.animate('style', loop);\n  },\n  attrKV: function (key, value) {\n    if (key !== 'style') {\n      Element.prototype.attrKV.call(this, key, value);\n    } else {\n      this.style.set(value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setStyle: function (key, value) {\n    this.style.set(key, value);\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * Use given style object\n   * @param  {Object} obj\n   */\n  useStyle: function (obj) {\n    this.style = new Style(obj, this);\n    this.dirty(false);\n    return this;\n  }\n};\nzrUtil.inherits(Displayable, Element);\nzrUtil.mixin(Displayable, RectText); // zrUtil.mixin(Displayable, Stateful);\n\nvar _default = Displayable;\nmodule.exports = _default;","/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\nvar arrySlice = Array.prototype.slice;\n/**\n * 事件分发器\n * @alias module:zrender/mixin/Eventful\n * @constructor\n */\n\nvar Eventful = function () {\n  this._$handlers = {};\n};\n\nEventful.prototype = {\n  constructor: Eventful,\n\n  /**\n   * 单次触发绑定，trigger后销毁\n   *\n   * @param {string} event 事件名\n   * @param {Function} handler 响应函数\n   * @param {Object} context\n   */\n  one: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: true,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 绑定事件\n   * @param {string} event 事件名\n   * @param {Function} handler 事件处理函数\n   * @param {Object} [context]\n   */\n  on: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: false,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 是否绑定了事件\n   * @param  {string}  event\n   * @return {boolean}\n   */\n  isSilent: function (event) {\n    var _h = this._$handlers;\n    return _h[event] && _h[event].length;\n  },\n\n  /**\n   * 解绑事件\n   * @param {string} event 事件名\n   * @param {Function} [handler] 事件处理函数\n   */\n  off: function (event, handler) {\n    var _h = this._$handlers;\n\n    if (!event) {\n      this._$handlers = {};\n      return this;\n    }\n\n    if (handler) {\n      if (_h[event]) {\n        var newList = [];\n\n        for (var i = 0, l = _h[event].length; i < l; i++) {\n          if (_h[event][i]['h'] != handler) {\n            newList.push(_h[event][i]);\n          }\n        }\n\n        _h[event] = newList;\n      }\n\n      if (_h[event] && _h[event].length === 0) {\n        delete _h[event];\n      }\n    } else {\n      delete _h[event];\n    }\n\n    return this;\n  },\n\n  /**\n   * 事件分发\n   *\n   * @param {string} type 事件类型\n   */\n  trigger: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 3) {\n        args = arrySlice.call(args, 1);\n      }\n\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(_h[i]['ctx']);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(_h[i]['ctx'], args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * 带有context的事件分发, 最后一个参数是事件回调的context\n   * @param {string} type 事件类型\n   */\n  triggerWithContext: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 4) {\n        args = arrySlice.call(args, 1, args.length - 1);\n      }\n\n      var ctx = args[args.length - 1];\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(ctx);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(ctx, args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(ctx, args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(ctx, args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  }\n}; // 对象可以通过 onxxxx 绑定事件\n\n/**\n * @event module:zrender/mixin/Eventful#onclick\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseout\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousemove\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousewheel\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousedown\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseup\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrag\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragstart\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragend\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragenter\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragleave\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrop\n * @type {Function}\n * @default null\n */\n\nvar _default = Eventful;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisHelper = require(\"./axisHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = {\n  /**\n   * @param {boolean} origin\n   * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n   */\n  getMin: function (origin) {\n    var option = this.option;\n    var min = !origin && option.rangeStart != null ? option.rangeStart : option.min;\n\n    if (this.axis && min != null && min !== 'dataMin' && typeof min !== 'function' && !zrUtil.eqNaN(min)) {\n      min = this.axis.scale.parse(min);\n    }\n\n    return min;\n  },\n\n  /**\n   * @param {boolean} origin\n   * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n   */\n  getMax: function (origin) {\n    var option = this.option;\n    var max = !origin && option.rangeEnd != null ? option.rangeEnd : option.max;\n\n    if (this.axis && max != null && max !== 'dataMax' && typeof max !== 'function' && !zrUtil.eqNaN(max)) {\n      max = this.axis.scale.parse(max);\n    }\n\n    return max;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  getNeedCrossZero: function () {\n    var option = this.option;\n    return option.rangeStart != null || option.rangeEnd != null ? false : !option.scale;\n  },\n\n  /**\n   * Should be implemented by each axis model if necessary.\n   * @return {module:echarts/model/Component} coordinate system model\n   */\n  getCoordSysModel: zrUtil.noop,\n\n  /**\n   * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n   * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n   */\n  setRange: function (rangeStart, rangeEnd) {\n    this.option.rangeStart = rangeStart;\n    this.option.rangeEnd = rangeEnd;\n  },\n\n  /**\n   * Reset range\n   */\n  resetRange: function () {\n    // rangeStart and rangeEnd is readonly.\n    this.option.rangeStart = this.option.rangeEnd = null;\n  }\n};\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar coordinateSystemCreators = {};\n\nfunction CoordinateSystemManager() {\n  this._coordinateSystems = [];\n}\n\nCoordinateSystemManager.prototype = {\n  constructor: CoordinateSystemManager,\n  create: function (ecModel, api) {\n    var coordinateSystems = [];\n    zrUtil.each(coordinateSystemCreators, function (creater, type) {\n      var list = creater.create(ecModel, api);\n      coordinateSystems = coordinateSystems.concat(list || []);\n    });\n    this._coordinateSystems = coordinateSystems;\n  },\n  update: function (ecModel, api) {\n    zrUtil.each(this._coordinateSystems, function (coordSys) {\n      coordSys.update && coordSys.update(ecModel, api);\n    });\n  },\n  getCoordinateSystems: function () {\n    return this._coordinateSystems.slice();\n  }\n};\n\nCoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n  coordinateSystemCreators[type] = coordinateSystemCreator;\n};\n\nCoordinateSystemManager.get = function (type) {\n  return coordinateSystemCreators[type];\n};\n\nvar _default = CoordinateSystemManager;\nmodule.exports = _default;","var curve = require(\"./curve\");\n\nvar vec2 = require(\"./vector\");\n\nvar bbox = require(\"./bbox\");\n\nvar BoundingRect = require(\"./BoundingRect\");\n\nvar _config = require(\"../config\");\n\nvar dpr = _config.devicePixelRatio;\n\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n// TODO getTotalLength, getPointAtLength\nvar CMD = {\n  M: 1,\n  L: 2,\n  C: 3,\n  Q: 4,\n  A: 5,\n  Z: 6,\n  // Rect\n  R: 7\n}; // var CMD_MEM_SIZE = {\n//     M: 3,\n//     L: 3,\n//     C: 7,\n//     Q: 5,\n//     A: 9,\n//     R: 5,\n//     Z: 1\n// };\n\nvar min = [];\nvar max = [];\nvar min2 = [];\nvar max2 = [];\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathCos = Math.cos;\nvar mathSin = Math.sin;\nvar mathSqrt = Math.sqrt;\nvar mathAbs = Math.abs;\nvar hasTypedArray = typeof Float32Array != 'undefined';\n/**\n * @alias module:zrender/core/PathProxy\n * @constructor\n */\n\nvar PathProxy = function (notSaveData) {\n  this._saveData = !(notSaveData || false);\n\n  if (this._saveData) {\n    /**\n     * Path data. Stored as flat array\n     * @type {Array.<Object>}\n     */\n    this.data = [];\n  }\n\n  this._ctx = null;\n};\n/**\n * 快速计算Path包围盒（并不是最小包围盒）\n * @return {Object}\n */\n\n\nPathProxy.prototype = {\n  constructor: PathProxy,\n  _xi: 0,\n  _yi: 0,\n  _x0: 0,\n  _y0: 0,\n  // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n  _ux: 0,\n  _uy: 0,\n  _len: 0,\n  _lineDash: null,\n  _dashOffset: 0,\n  _dashIdx: 0,\n  _dashSum: 0,\n\n  /**\n   * @readOnly\n   */\n  setScale: function (sx, sy) {\n    this._ux = mathAbs(1 / dpr / sx) || 0;\n    this._uy = mathAbs(1 / dpr / sy) || 0;\n  },\n  getContext: function () {\n    return this._ctx;\n  },\n\n  /**\n   * @param  {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  beginPath: function (ctx) {\n    this._ctx = ctx;\n    ctx && ctx.beginPath();\n    ctx && (this.dpr = ctx.dpr); // Reset\n\n    if (this._saveData) {\n      this._len = 0;\n    }\n\n    if (this._lineDash) {\n      this._lineDash = null;\n      this._dashOffset = 0;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  moveTo: function (x, y) {\n    this.addData(CMD.M, x, y);\n    this._ctx && this._ctx.moveTo(x, y); // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n    // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n    // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n    // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n\n    this._x0 = x;\n    this._y0 = y;\n    this._xi = x;\n    this._yi = y;\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  lineTo: function (x, y) {\n    var exceedUnit = mathAbs(x - this._xi) > this._ux || mathAbs(y - this._yi) > this._uy // Force draw the first segment\n    || this._len < 5;\n    this.addData(CMD.L, x, y);\n\n    if (this._ctx && exceedUnit) {\n      this._needsDash() ? this._dashedLineTo(x, y) : this._ctx.lineTo(x, y);\n    }\n\n    if (exceedUnit) {\n      this._xi = x;\n      this._yi = y;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @param  {number} x3\n   * @param  {number} y3\n   * @return {module:zrender/core/PathProxy}\n   */\n  bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n    this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3) : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n    }\n\n    this._xi = x3;\n    this._yi = y3;\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @return {module:zrender/core/PathProxy}\n   */\n  quadraticCurveTo: function (x1, y1, x2, y2) {\n    this.addData(CMD.Q, x1, y1, x2, y2);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2) : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n    }\n\n    this._xi = x2;\n    this._yi = y2;\n    return this;\n  },\n\n  /**\n   * @param  {number} cx\n   * @param  {number} cy\n   * @param  {number} r\n   * @param  {number} startAngle\n   * @param  {number} endAngle\n   * @param  {boolean} anticlockwise\n   * @return {module:zrender/core/PathProxy}\n   */\n  arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n    this.addData(CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1);\n    this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n    this._xi = mathCos(endAngle) * r + cx;\n    this._yi = mathSin(endAngle) * r + cx;\n    return this;\n  },\n  // TODO\n  arcTo: function (x1, y1, x2, y2, radius) {\n    if (this._ctx) {\n      this._ctx.arcTo(x1, y1, x2, y2, radius);\n    }\n\n    return this;\n  },\n  // TODO\n  rect: function (x, y, w, h) {\n    this._ctx && this._ctx.rect(x, y, w, h);\n    this.addData(CMD.R, x, y, w, h);\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/PathProxy}\n   */\n  closePath: function () {\n    this.addData(CMD.Z);\n    var ctx = this._ctx;\n    var x0 = this._x0;\n    var y0 = this._y0;\n\n    if (ctx) {\n      this._needsDash() && this._dashedLineTo(x0, y0);\n      ctx.closePath();\n    }\n\n    this._xi = x0;\n    this._yi = y0;\n    return this;\n  },\n\n  /**\n   * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n   * stroke 同样\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  fill: function (ctx) {\n    ctx && ctx.fill();\n    this.toStatic();\n  },\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  stroke: function (ctx) {\n    ctx && ctx.stroke();\n    this.toStatic();\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDash: function (lineDash) {\n    if (lineDash instanceof Array) {\n      this._lineDash = lineDash;\n      this._dashIdx = 0;\n      var lineDashSum = 0;\n\n      for (var i = 0; i < lineDash.length; i++) {\n        lineDashSum += lineDash[i];\n      }\n\n      this._dashSum = lineDashSum;\n    }\n\n    return this;\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDashOffset: function (offset) {\n    this._dashOffset = offset;\n    return this;\n  },\n\n  /**\n   *\n   * @return {boolean}\n   */\n  len: function () {\n    return this._len;\n  },\n\n  /**\n   * 直接设置 Path 数据\n   */\n  setData: function (data) {\n    var len = data.length;\n\n    if (!(this.data && this.data.length == len) && hasTypedArray) {\n      this.data = new Float32Array(len);\n    }\n\n    for (var i = 0; i < len; i++) {\n      this.data[i] = data[i];\n    }\n\n    this._len = len;\n  },\n\n  /**\n   * 添加子路径\n   * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n   */\n  appendPath: function (path) {\n    if (!(path instanceof Array)) {\n      path = [path];\n    }\n\n    var len = path.length;\n    var appendSize = 0;\n    var offset = this._len;\n\n    for (var i = 0; i < len; i++) {\n      appendSize += path[i].len();\n    }\n\n    if (hasTypedArray && this.data instanceof Float32Array) {\n      this.data = new Float32Array(offset + appendSize);\n    }\n\n    for (var i = 0; i < len; i++) {\n      var appendPathData = path[i].data;\n\n      for (var k = 0; k < appendPathData.length; k++) {\n        this.data[offset++] = appendPathData[k];\n      }\n    }\n\n    this._len = offset;\n  },\n\n  /**\n   * 填充 Path 数据。\n   * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n   */\n  addData: function (cmd) {\n    if (!this._saveData) {\n      return;\n    }\n\n    var data = this.data;\n\n    if (this._len + arguments.length > data.length) {\n      // 因为之前的数组已经转换成静态的 Float32Array\n      // 所以不够用时需要扩展一个新的动态数组\n      this._expandData();\n\n      data = this.data;\n    }\n\n    for (var i = 0; i < arguments.length; i++) {\n      data[this._len++] = arguments[i];\n    }\n\n    this._prevCmd = cmd;\n  },\n  _expandData: function () {\n    // Only if data is Float32Array\n    if (!(this.data instanceof Array)) {\n      var newData = [];\n\n      for (var i = 0; i < this._len; i++) {\n        newData[i] = this.data[i];\n      }\n\n      this.data = newData;\n    }\n  },\n\n  /**\n   * If needs js implemented dashed line\n   * @return {boolean}\n   * @private\n   */\n  _needsDash: function () {\n    return this._lineDash;\n  },\n  _dashedLineTo: function (x1, y1) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    var dist = mathSqrt(dx * dx + dy * dy);\n    var x = x0;\n    var y = y0;\n    var dash;\n    var nDash = lineDash.length;\n    var idx;\n    dx /= dist;\n    dy /= dist;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum;\n    x -= offset * dx;\n    y -= offset * dy;\n\n    while (dx > 0 && x <= x1 || dx < 0 && x >= x1 || dx == 0 && (dy > 0 && y <= y1 || dy < 0 && y >= y1)) {\n      idx = this._dashIdx;\n      dash = lineDash[idx];\n      x += dx * dash;\n      y += dy * dash;\n      this._dashIdx = (idx + 1) % nDash; // Skip positive offset\n\n      if (dx > 0 && x < x0 || dx < 0 && x > x0 || dy > 0 && y < y0 || dy < 0 && y > y0) {\n        continue;\n      }\n\n      ctx[idx % 2 ? 'moveTo' : 'lineTo'](dx >= 0 ? mathMin(x, x1) : mathMax(x, x1), dy >= 0 ? mathMin(y, y1) : mathMax(y, y1));\n    } // Offset for next lineTo\n\n\n    dx = x - x1;\n    dy = y - y1;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  // Not accurate dashed line to\n  _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var t;\n    var dx;\n    var dy;\n    var cubicAt = curve.cubicAt;\n    var bezierLen = 0;\n    var idx = this._dashIdx;\n    var nDash = lineDash.length;\n    var x;\n    var y;\n    var tmpLen = 0;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum; // Bezier approx length\n\n    for (t = 0; t < 1; t += 0.1) {\n      dx = cubicAt(x0, x1, x2, x3, t + 0.1) - cubicAt(x0, x1, x2, x3, t);\n      dy = cubicAt(y0, y1, y2, y3, t + 0.1) - cubicAt(y0, y1, y2, y3, t);\n      bezierLen += mathSqrt(dx * dx + dy * dy);\n    } // Find idx after add offset\n\n\n    for (; idx < nDash; idx++) {\n      tmpLen += lineDash[idx];\n\n      if (tmpLen > offset) {\n        break;\n      }\n    }\n\n    t = (tmpLen - offset) / bezierLen;\n\n    while (t <= 1) {\n      x = cubicAt(x0, x1, x2, x3, t);\n      y = cubicAt(y0, y1, y2, y3, t); // Use line to approximate dashed bezier\n      // Bad result if dash is long\n\n      idx % 2 ? ctx.moveTo(x, y) : ctx.lineTo(x, y);\n      t += lineDash[idx] / bezierLen;\n      idx = (idx + 1) % nDash;\n    } // Finish the last segment and calculate the new offset\n\n\n    idx % 2 !== 0 && ctx.lineTo(x3, y3);\n    dx = x3 - x;\n    dy = y3 - y;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  _dashedQuadraticTo: function (x1, y1, x2, y2) {\n    // Convert quadratic to cubic using degree elevation\n    var x3 = x2;\n    var y3 = y2;\n    x2 = (x2 + 2 * x1) / 3;\n    y2 = (y2 + 2 * y1) / 3;\n    x1 = (this._xi + 2 * x1) / 3;\n    y1 = (this._yi + 2 * y1) / 3;\n\n    this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n  },\n\n  /**\n   * 转成静态的 Float32Array 减少堆内存占用\n   * Convert dynamic array to static Float32Array\n   */\n  toStatic: function () {\n    var data = this.data;\n\n    if (data instanceof Array) {\n      data.length = this._len;\n\n      if (hasTypedArray) {\n        this.data = new Float32Array(data);\n      }\n    }\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n    max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n    var data = this.data;\n    var xi = 0;\n    var yi = 0;\n    var x0 = 0;\n    var y0 = 0;\n\n    for (var i = 0; i < data.length;) {\n      var cmd = data[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = data[i];\n        yi = data[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n          // 在 closePath 的时候使用\n          x0 = data[i++];\n          y0 = data[i++];\n          xi = x0;\n          yi = y0;\n          min2[0] = x0;\n          min2[1] = y0;\n          max2[0] = x0;\n          max2[1] = y0;\n          break;\n\n        case CMD.L:\n          bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.C:\n          bbox.fromCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.Q:\n          bbox.fromQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.A:\n          // TODO Arc 判断的开销比较大\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++];\n          var endAngle = data[i++] + startAngle; // TODO Arc 旋转\n\n          var psi = data[i++];\n          var anticlockwise = 1 - data[i++];\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(startAngle) * rx + cx;\n            y0 = mathSin(startAngle) * ry + cy;\n          }\n\n          bbox.fromArc(cx, cy, rx, ry, startAngle, endAngle, anticlockwise, min2, max2);\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = data[i++];\n          y0 = yi = data[i++];\n          var width = data[i++];\n          var height = data[i++]; // Use fromLine\n\n          bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n          break;\n\n        case CMD.Z:\n          xi = x0;\n          yi = y0;\n          break;\n      } // Union\n\n\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * Rebuild path from current data\n   * Rebuild path will not consider javascript implemented line dash.\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  rebuildPath: function (ctx) {\n    var d = this.data;\n    var x0, y0;\n    var xi, yi;\n    var x, y;\n    var ux = this._ux;\n    var uy = this._uy;\n    var len = this._len;\n\n    for (var i = 0; i < len;) {\n      var cmd = d[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = d[i];\n        yi = d[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          x0 = xi = d[i++];\n          y0 = yi = d[i++];\n          ctx.moveTo(xi, yi);\n          break;\n\n        case CMD.L:\n          x = d[i++];\n          y = d[i++]; // Not draw too small seg between\n\n          if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n            ctx.lineTo(x, y);\n            xi = x;\n            yi = y;\n          }\n\n          break;\n\n        case CMD.C:\n          ctx.bezierCurveTo(d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.Q:\n          ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.A:\n          var cx = d[i++];\n          var cy = d[i++];\n          var rx = d[i++];\n          var ry = d[i++];\n          var theta = d[i++];\n          var dTheta = d[i++];\n          var psi = d[i++];\n          var fs = d[i++];\n          var r = rx > ry ? rx : ry;\n          var scaleX = rx > ry ? 1 : rx / ry;\n          var scaleY = rx > ry ? ry / rx : 1;\n          var isEllipse = Math.abs(rx - ry) > 1e-3;\n          var endAngle = theta + dTheta;\n\n          if (isEllipse) {\n            ctx.translate(cx, cy);\n            ctx.rotate(psi);\n            ctx.scale(scaleX, scaleY);\n            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n            ctx.scale(1 / scaleX, 1 / scaleY);\n            ctx.rotate(-psi);\n            ctx.translate(-cx, -cy);\n          } else {\n            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n          }\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(theta) * rx + cx;\n            y0 = mathSin(theta) * ry + cy;\n          }\n\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = d[i];\n          y0 = yi = d[i + 1];\n          ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n          break;\n\n        case CMD.Z:\n          ctx.closePath();\n          xi = x0;\n          yi = y0;\n      }\n    }\n  }\n};\nPathProxy.CMD = CMD;\nvar _default = PathProxy;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar formatUtil = require(\"../util/format\");\n\nvar scaleHelper = require(\"./helper\");\n\nvar IntervalScale = require(\"./Interval\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// [About UTC and local time zone]:\n// In most cases, `number.parseDate` will treat input data string as local time\n// (except time zone is specified in time string). And `format.formateTime` returns\n// local time by default. option.useUTC is false by default. This design have\n// concidered these common case:\n// (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n// in local time by default.\n// (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n// as its original time, without any time difference.\nvar intervalScaleProto = IntervalScale.prototype;\nvar mathCeil = Math.ceil;\nvar mathFloor = Math.floor;\nvar ONE_SECOND = 1000;\nvar ONE_MINUTE = ONE_SECOND * 60;\nvar ONE_HOUR = ONE_MINUTE * 60;\nvar ONE_DAY = ONE_HOUR * 24; // FIXME 公用？\n\nvar bisect = function (a, x, lo, hi) {\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n\n    if (a[mid][1] < x) {\n      lo = mid + 1;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return lo;\n};\n/**\n * @alias module:echarts/coord/scale/Time\n * @constructor\n */\n\n\nvar TimeScale = IntervalScale.extend({\n  type: 'time',\n\n  /**\n   * @override\n   */\n  getLabel: function (val) {\n    var stepLvl = this._stepLvl;\n    var date = new Date(val);\n    return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n  },\n\n  /**\n   * @override\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      // Expand extent\n      extent[0] -= ONE_DAY;\n      extent[1] += ONE_DAY;\n    } // If there are no data and extent are [Infinity, -Infinity]\n\n\n    if (extent[1] === -Infinity && extent[0] === Infinity) {\n      var d = new Date();\n      extent[1] = +new Date(d.getFullYear(), d.getMonth(), d.getDate());\n      extent[0] = extent[1] - ONE_DAY;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n    }\n  },\n\n  /**\n   * @override\n   */\n  niceTicks: function (approxTickNum, minInterval, maxInterval) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n    var approxInterval = span / approxTickNum;\n\n    if (minInterval != null && approxInterval < minInterval) {\n      approxInterval = minInterval;\n    }\n\n    if (maxInterval != null && approxInterval > maxInterval) {\n      approxInterval = maxInterval;\n    }\n\n    var scaleLevelsLen = scaleLevels.length;\n    var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n    var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n    var interval = level[1]; // Same with interval scale if span is much larger than 1 year\n\n    if (level[0] === 'year') {\n      var yearSpan = span / interval; // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n      // var niceYearSpan = numberUtil.nice(yearSpan, false);\n\n      var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n      interval *= yearStep;\n    }\n\n    var timezoneOffset = this.getSetting('useUTC') ? 0 : new Date(+extent[0] || +extent[1]).getTimezoneOffset() * 60 * 1000;\n    var niceExtent = [Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset), Math.round(mathFloor((extent[1] - timezoneOffset) / interval) * interval + timezoneOffset)];\n    scaleHelper.fixExtent(niceExtent, extent);\n    this._stepLvl = level; // Interval will be used in getTicks\n\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n  parse: function (val) {\n    // val might be float.\n    return +numberUtil.parseDate(val);\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  TimeScale.prototype[methodName] = function (val) {\n    return intervalScaleProto[methodName].call(this, this.parse(val));\n  };\n}); // Steps from d3\n\nvar scaleLevels = [// Format              interval\n['hh:mm:ss', ONE_SECOND], // 1s\n['hh:mm:ss', ONE_SECOND * 5], // 5s\n['hh:mm:ss', ONE_SECOND * 10], // 10s\n['hh:mm:ss', ONE_SECOND * 15], // 15s\n['hh:mm:ss', ONE_SECOND * 30], // 30s\n['hh:mm\\nMM-dd', ONE_MINUTE], // 1m\n['hh:mm\\nMM-dd', ONE_MINUTE * 5], // 5m\n['hh:mm\\nMM-dd', ONE_MINUTE * 10], // 10m\n['hh:mm\\nMM-dd', ONE_MINUTE * 15], // 15m\n['hh:mm\\nMM-dd', ONE_MINUTE * 30], // 30m\n['hh:mm\\nMM-dd', ONE_HOUR], // 1h\n['hh:mm\\nMM-dd', ONE_HOUR * 2], // 2h\n['hh:mm\\nMM-dd', ONE_HOUR * 6], // 6h\n['hh:mm\\nMM-dd', ONE_HOUR * 12], // 12h\n['MM-dd\\nyyyy', ONE_DAY], // 1d\n['MM-dd\\nyyyy', ONE_DAY * 2], // 2d\n['MM-dd\\nyyyy', ONE_DAY * 3], // 3d\n['MM-dd\\nyyyy', ONE_DAY * 4], // 4d\n['MM-dd\\nyyyy', ONE_DAY * 5], // 5d\n['MM-dd\\nyyyy', ONE_DAY * 6], // 6d\n['week', ONE_DAY * 7], // 7d\n['MM-dd\\nyyyy', ONE_DAY * 10], // 10d\n['week', ONE_DAY * 14], // 2w\n['week', ONE_DAY * 21], // 3w\n['month', ONE_DAY * 31], // 1M\n['week', ONE_DAY * 42], // 6w\n['month', ONE_DAY * 62], // 2M\n['week', ONE_DAY * 42], // 10w\n['quarter', ONE_DAY * 380 / 4], // 3M\n['month', ONE_DAY * 31 * 4], // 4M\n['month', ONE_DAY * 31 * 5], // 5M\n['half-year', ONE_DAY * 380 / 2], // 6M\n['month', ONE_DAY * 31 * 8], // 8M\n['month', ONE_DAY * 31 * 10], // 10M\n['year', ONE_DAY * 380] // 1Y\n];\n/**\n * @param {module:echarts/model/Model}\n * @return {module:echarts/scale/Time}\n */\n\nTimeScale.create = function (model) {\n  return new TimeScale({\n    useUTC: model.ecModel.get('useUTC')\n  });\n};\n\nvar _default = TimeScale;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = SeriesModel.extend({\n  type: 'series.line',\n  dependencies: ['grid', 'polar'],\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // stack: null\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // polarIndex: 0,\n    // If clip the overflow value\n    clipOverflow: true,\n    // cursor: null,\n    label: {\n      position: 'top'\n    },\n    // itemStyle: {\n    // },\n    lineStyle: {\n      width: 2,\n      type: 'solid'\n    },\n    // areaStyle: {\n    // origin of areaStyle. Valid values:\n    // `'auto'/null/undefined`: from axisLine to data\n    // `'start'`: from min to data\n    // `'end'`: from data to max\n    // origin: 'auto'\n    // },\n    // false, 'start', 'end', 'middle'\n    step: false,\n    // Disabled if step is true\n    smooth: false,\n    smoothMonotone: null,\n    symbol: 'emptyCircle',\n    symbolSize: 4,\n    symbolRotate: null,\n    showSymbol: true,\n    // `false`: follow the label interval strategy.\n    // `true`: show all symbols.\n    // `'auto'`: If possible, show all symbols, otherwise\n    //           follow the label interval strategy.\n    showAllSymbol: 'auto',\n    // Whether to connect break point.\n    connectNulls: false,\n    // Sampling for large data. Can be: 'average', 'max', 'min', 'sum'.\n    sampling: 'none',\n    animationEasing: 'linear',\n    // Disable progressive\n    progressive: 0,\n    hoverLayerThreshold: Infinity\n  }\n});\n\nmodule.exports = _default;","/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\nvar env = {};\n\nif (typeof wx === 'object' && typeof wx.getSystemInfoSync === 'function') {\n  // In Weixin Application\n  env = {\n    browser: {},\n    os: {},\n    node: false,\n    wxa: true,\n    // Weixin Application\n    canvasSupported: true,\n    svgSupported: false,\n    touchEventsSupported: true\n  };\n} else if (typeof document === 'undefined' && typeof self !== 'undefined') {\n  // In worker\n  env = {\n    browser: {},\n    os: {},\n    node: false,\n    worker: true,\n    canvasSupported: true\n  };\n} else if (typeof navigator === 'undefined') {\n  // In node\n  env = {\n    browser: {},\n    os: {},\n    node: true,\n    worker: false,\n    // Assume canvas is supported\n    canvasSupported: true,\n    svgSupported: true\n  };\n} else {\n  env = detect(navigator.userAgent);\n}\n\nvar _default = env; // Zepto.js\n// (c) 2010-2013 Thomas Fuchs\n// Zepto.js may be freely distributed under the MIT license.\n\nfunction detect(ua) {\n  var os = {};\n  var browser = {}; // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n  // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n  // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n  // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n  // var touchpad = webos && ua.match(/TouchPad/);\n  // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n  // var silk = ua.match(/Silk\\/([\\d._]+)/);\n  // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n  // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n  // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n  // var playbook = ua.match(/PlayBook/);\n  // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n\n  var firefox = ua.match(/Firefox\\/([\\d.]+)/); // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n  // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n\n  var ie = ua.match(/MSIE\\s([\\d.]+)/) // IE 11 Trident/7.0; rv:11.0\n  || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n  var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n  var weChat = /micromessenger/i.test(ua); // Todo: clean this up with a better OS/browser seperation:\n  // - discern (more) between multiple browsers on android\n  // - decide if kindle fire in silk mode is android or not\n  // - Firefox on Android doesn't specify the Android version\n  // - possibly devide in os, device and browser hashes\n  // if (browser.webkit = !!webkit) browser.version = webkit[1];\n  // if (android) os.android = true, os.version = android[2];\n  // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n  // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n  // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n  // if (webos) os.webos = true, os.version = webos[2];\n  // if (touchpad) os.touchpad = true;\n  // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n  // if (bb10) os.bb10 = true, os.version = bb10[2];\n  // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n  // if (playbook) browser.playbook = true;\n  // if (kindle) os.kindle = true, os.version = kindle[1];\n  // if (silk) browser.silk = true, browser.version = silk[1];\n  // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n  // if (chrome) browser.chrome = true, browser.version = chrome[1];\n\n  if (firefox) {\n    browser.firefox = true;\n    browser.version = firefox[1];\n  } // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n  // if (webview) browser.webview = true;\n\n\n  if (ie) {\n    browser.ie = true;\n    browser.version = ie[1];\n  }\n\n  if (edge) {\n    browser.edge = true;\n    browser.version = edge[1];\n  } // It is difficult to detect WeChat in Win Phone precisely, because ua can\n  // not be set on win phone. So we do not consider Win Phone.\n\n\n  if (weChat) {\n    browser.weChat = true;\n  } // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n  //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n  // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n  //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n  //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n\n  return {\n    browser: browser,\n    os: os,\n    node: false,\n    // 原生canvas支持，改极端点了\n    // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n    canvasSupported: !!document.createElement('canvas').getContext,\n    svgSupported: typeof SVGRect !== 'undefined',\n    // works on most browsers\n    // IE10/11 does not support touch event, and MS Edge supports them but not by\n    // default, so we dont check navigator.maxTouchPoints for them here.\n    touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n    // <http://caniuse.com/#search=pointer%20event>.\n    pointerEventsSupported: 'onpointerdown' in window // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n    // events currently. So we dont use that on other browsers unless tested sufficiently.\n    // Although IE 10 supports pointer event, it use old style and is different from the\n    // standard. So we exclude that. (IE 10 is hardly used on touch device)\n    && (browser.edge || browser.ie && browser.version >= 11) // passiveSupported: detectPassiveSupport()\n\n  };\n} // See https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n// function detectPassiveSupport() {\n//     // Test via a getter in the options object to see if the passive property is accessed\n//     var supportsPassive = false;\n//     try {\n//         var opts = Object.defineProperty({}, 'passive', {\n//             get: function() {\n//                 supportsPassive = true;\n//             }\n//         });\n//         window.addEventListener('testPassive', function() {}, opts);\n//     } catch (e) {\n//     }\n//     return supportsPassive;\n// }\n\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar pathTool = require(\"zrender/lib/tool/path\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\nvar Transformable = require(\"zrender/lib/mixin/Transformable\");\n\nvar ZImage = require(\"zrender/lib/graphic/Image\");\n\nexports.Image = ZImage;\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nexports.Group = Group;\n\nvar Text = require(\"zrender/lib/graphic/Text\");\n\nexports.Text = Text;\n\nvar Circle = require(\"zrender/lib/graphic/shape/Circle\");\n\nexports.Circle = Circle;\n\nvar Sector = require(\"zrender/lib/graphic/shape/Sector\");\n\nexports.Sector = Sector;\n\nvar Ring = require(\"zrender/lib/graphic/shape/Ring\");\n\nexports.Ring = Ring;\n\nvar Polygon = require(\"zrender/lib/graphic/shape/Polygon\");\n\nexports.Polygon = Polygon;\n\nvar Polyline = require(\"zrender/lib/graphic/shape/Polyline\");\n\nexports.Polyline = Polyline;\n\nvar Rect = require(\"zrender/lib/graphic/shape/Rect\");\n\nexports.Rect = Rect;\n\nvar Line = require(\"zrender/lib/graphic/shape/Line\");\n\nexports.Line = Line;\n\nvar BezierCurve = require(\"zrender/lib/graphic/shape/BezierCurve\");\n\nexports.BezierCurve = BezierCurve;\n\nvar Arc = require(\"zrender/lib/graphic/shape/Arc\");\n\nexports.Arc = Arc;\n\nvar CompoundPath = require(\"zrender/lib/graphic/CompoundPath\");\n\nexports.CompoundPath = CompoundPath;\n\nvar LinearGradient = require(\"zrender/lib/graphic/LinearGradient\");\n\nexports.LinearGradient = LinearGradient;\n\nvar RadialGradient = require(\"zrender/lib/graphic/RadialGradient\");\n\nexports.RadialGradient = RadialGradient;\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nexports.BoundingRect = BoundingRect;\n\nvar IncrementalDisplayable = require(\"zrender/lib/graphic/IncrementalDisplayable\");\n\nexports.IncrementalDisplayable = IncrementalDisplayable;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar round = Math.round;\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar EMPTY_OBJ = {};\n/**\n * Extend shape with parameters\n */\n\nfunction extendShape(opts) {\n  return Path.extend(opts);\n}\n/**\n * Extend path\n */\n\n\nfunction extendPath(pathData, opts) {\n  return pathTool.extendFromString(pathData, opts);\n}\n/**\n * Create a path element from path data string\n * @param {string} pathData\n * @param {Object} opts\n * @param {module:zrender/core/BoundingRect} rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makePath(pathData, opts, rect, layout) {\n  var path = pathTool.createFromString(pathData, opts);\n  var boundingRect = path.getBoundingRect();\n\n  if (rect) {\n    if (layout === 'center') {\n      rect = centerGraphic(rect, boundingRect);\n    }\n\n    resizePath(path, rect);\n  }\n\n  return path;\n}\n/**\n * Create a image element from image url\n * @param {string} imageUrl image url\n * @param {Object} opts options\n * @param {module:zrender/core/BoundingRect} rect constrain rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makeImage(imageUrl, rect, layout) {\n  var path = new ZImage({\n    style: {\n      image: imageUrl,\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    onload: function (img) {\n      if (layout === 'center') {\n        var boundingRect = {\n          width: img.width,\n          height: img.height\n        };\n        path.setStyle(centerGraphic(rect, boundingRect));\n      }\n    }\n  });\n  return path;\n}\n/**\n * Get position of centered element in bounding box.\n *\n * @param  {Object} rect         element local bounding box\n * @param  {Object} boundingRect constraint bounding box\n * @return {Object} element position containing x, y, width, and height\n */\n\n\nfunction centerGraphic(rect, boundingRect) {\n  // Set rect to center, keep width / height ratio.\n  var aspect = boundingRect.width / boundingRect.height;\n  var width = rect.height * aspect;\n  var height;\n\n  if (width <= rect.width) {\n    height = rect.height;\n  } else {\n    width = rect.width;\n    height = width / aspect;\n  }\n\n  var cx = rect.x + rect.width / 2;\n  var cy = rect.y + rect.height / 2;\n  return {\n    x: cx - width / 2,\n    y: cy - height / 2,\n    width: width,\n    height: height\n  };\n}\n\nvar mergePath = pathTool.mergePath;\n/**\n * Resize a path to fit the rect\n * @param {module:zrender/graphic/Path} path\n * @param {Object} rect\n */\n\nfunction resizePath(path, rect) {\n  if (!path.applyTransform) {\n    return;\n  }\n\n  var pathRect = path.getBoundingRect();\n  var m = pathRect.calculateTransform(rect);\n  path.applyTransform(m);\n}\n/**\n * Sub pixel optimize line for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x1]\n * @param {number} [param.shape.y1]\n * @param {number} [param.shape.x2]\n * @param {number} [param.shape.y2]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeLine(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n\n  if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n    shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n  }\n\n  if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n    shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n  }\n\n  return param;\n}\n/**\n * Sub pixel optimize rect for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x]\n * @param {number} [param.shape.y]\n * @param {number} [param.shape.width]\n * @param {number} [param.shape.height]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeRect(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n  var originX = shape.x;\n  var originY = shape.y;\n  var originWidth = shape.width;\n  var originHeight = shape.height;\n  shape.x = subPixelOptimize(shape.x, lineWidth, true);\n  shape.y = subPixelOptimize(shape.y, lineWidth, true);\n  shape.width = Math.max(subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x, originWidth === 0 ? 0 : 1);\n  shape.height = Math.max(subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y, originHeight === 0 ? 0 : 1);\n  return param;\n}\n/**\n * Sub pixel optimize for canvas\n *\n * @param {number} position Coordinate, such as x, y\n * @param {number} lineWidth Should be nonnegative integer.\n * @param {boolean=} positiveOrNegative Default false (negative).\n * @return {number} Optimized position.\n */\n\n\nfunction subPixelOptimize(position, lineWidth, positiveOrNegative) {\n  // Assure that (position + lineWidth / 2) is near integer edge,\n  // otherwise line will be fuzzy in canvas.\n  var doubledPosition = round(position * 2);\n  return (doubledPosition + round(lineWidth)) % 2 === 0 ? doubledPosition / 2 : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n}\n\nfunction hasFillOrStroke(fillOrStroke) {\n  return fillOrStroke != null && fillOrStroke != 'none';\n}\n\nfunction liftColor(color) {\n  return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n}\n/**\n * @private\n */\n\n\nfunction cacheElementStl(el) {\n  if (el.__hoverStlDirty) {\n    var stroke = el.style.stroke;\n    var fill = el.style.fill; // Create hoverStyle on mouseover\n\n    var hoverStyle = el.__hoverStl;\n    hoverStyle.fill = hoverStyle.fill || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n    hoverStyle.stroke = hoverStyle.stroke || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n    var normalStyle = {};\n\n    for (var name in hoverStyle) {\n      // See comment in `doSingleEnterHover`.\n      if (hoverStyle[name] != null) {\n        normalStyle[name] = el.style[name];\n      }\n    }\n\n    el.__normalStl = normalStyle;\n    el.__hoverStlDirty = false;\n  }\n}\n/**\n * @private\n */\n\n\nfunction doSingleEnterHover(el) {\n  if (el.__isHover) {\n    return;\n  }\n\n  cacheElementStl(el);\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.addHover(el, el.__hoverStl);\n  } else {\n    var style = el.style;\n    var insideRollbackOpt = style.insideRollbackOpt; // Consider case: only `position: 'top'` is set on emphasis, then text\n    // color should be returned to `autoColor`, rather than remain '#fff'.\n    // So we should rollback then apply again after style merging.\n\n    insideRollbackOpt && rollbackInsideStyle(style); // styles can be:\n    // {\n    //    label: {\n    //        show: false,\n    //        position: 'outside',\n    //        fontSize: 18\n    //    },\n    //    emphasis: {\n    //        label: {\n    //            show: true\n    //        }\n    //    }\n    // },\n    // where properties of `emphasis` may not appear in `normal`. We previously use\n    // module:echarts/util/model#defaultEmphasis to merge `normal` to `emphasis`.\n    // But consider rich text and setOption in merge mode, it is impossible to cover\n    // all properties in merge. So we use merge mode when setting style here, where\n    // only properties that is not `null/undefined` can be set. The disadventage:\n    // null/undefined can not be used to remove style any more in `emphasis`.\n\n    style.extendFrom(el.__hoverStl); // Do not save `insideRollback`.\n\n    if (insideRollbackOpt) {\n      applyInsideStyle(style, style.insideOriginalTextPosition, insideRollbackOpt); // textFill may be rollbacked to null.\n\n      if (style.textFill == null) {\n        style.textFill = insideRollbackOpt.autoColor;\n      }\n    }\n\n    el.dirty(false);\n    el.z2 += 1;\n  }\n\n  el.__isHover = true;\n}\n/**\n * @inner\n */\n\n\nfunction doSingleLeaveHover(el) {\n  if (!el.__isHover) {\n    return;\n  }\n\n  var normalStl = el.__normalStl;\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.removeHover(el);\n  } else {\n    // Consider null/undefined value, should use\n    // `setStyle` but not `extendFrom(stl, true)`.\n    normalStl && el.setStyle(normalStl);\n    el.z2 -= 1;\n  }\n\n  el.__isHover = false;\n}\n/**\n * @inner\n */\n\n\nfunction doEnterHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleEnterHover(child);\n    }\n  }) : doSingleEnterHover(el);\n}\n\nfunction doLeaveHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleLeaveHover(child);\n    }\n  }) : doSingleLeaveHover(el);\n}\n/**\n * @inner\n */\n\n\nfunction setElementHoverStl(el, hoverStl) {\n  // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n  // Often used when item group has a label element and it's hoverStyle is different\n  el.__hoverStl = el.hoverStyle || hoverStl || {};\n  el.__hoverStlDirty = true;\n\n  if (el.__isHover) {\n    cacheElementStl(el);\n  }\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOver(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOut(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doLeaveHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction enterEmphasis() {\n  this.__isEmphasis = true;\n  doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction leaveEmphasis() {\n  this.__isEmphasis = false;\n  doLeaveHover(this);\n}\n/**\n * Set hover style of element.\n * This method can be called repeatly without side-effects.\n * @param {module:zrender/Element} el\n * @param {Object} [hoverStyle]\n * @param {Object} [opt]\n * @param {boolean} [opt.hoverSilentOnTouch=false]\n *        In touch device, mouseover event will be trigger on touchstart event\n *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n *        conviniently use hoverStyle when tap on touch screen without additional\n *        code for compatibility.\n *        But if the chart/component has select feature, which usually also use\n *        hoverStyle, there might be conflict between 'select-highlight' and\n *        'hover-highlight' especially when roam is enabled (see geo for example).\n *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n *        on touch device.\n */\n\n\nfunction setHoverStyle(el, hoverStyle, opt) {\n  el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      setElementHoverStl(child, hoverStyle);\n    }\n  }) : setElementHoverStl(el, hoverStyle); // Duplicated function will be auto-ignored, see Eventful.js.\n\n  el.on('mouseover', onElementMouseOver).on('mouseout', onElementMouseOut); // Emphasis, normal can be triggered manually\n\n  el.on('emphasis', enterEmphasis).on('normal', leaveEmphasis);\n}\n/**\n * @param {Object|module:zrender/graphic/Style} normalStyle\n * @param {Object} emphasisStyle\n * @param {module:echarts/model/Model} normalModel\n * @param {module:echarts/model/Model} emphasisModel\n * @param {Object} opt Check `opt` of `setTextStyleCommon` to find other props.\n * @param {string|Function} [opt.defaultText]\n * @param {module:echarts/model/Model} [opt.labelFetcher] Fetch text by\n *      `opt.labelFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDataIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDimIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {Object} [normalSpecified]\n * @param {Object} [emphasisSpecified]\n */\n\n\nfunction setLabelStyle(normalStyle, emphasisStyle, normalModel, emphasisModel, opt, normalSpecified, emphasisSpecified) {\n  opt = opt || EMPTY_OBJ;\n  var labelFetcher = opt.labelFetcher;\n  var labelDataIndex = opt.labelDataIndex;\n  var labelDimIndex = opt.labelDimIndex; // This scenario, `label.normal.show = true; label.emphasis.show = false`,\n  // is not supported util someone requests.\n\n  var showNormal = normalModel.getShallow('show');\n  var showEmphasis = emphasisModel.getShallow('show'); // Consider performance, only fetch label when necessary.\n  // If `normal.show` is `false` and `emphasis.show` is `true` and `emphasis.formatter` is not set,\n  // label should be displayed, where text is fetched by `normal.formatter` or `opt.defaultText`.\n\n  var baseText;\n\n  if (showNormal || showEmphasis) {\n    if (labelFetcher) {\n      baseText = labelFetcher.getFormattedLabel(labelDataIndex, 'normal', null, labelDimIndex);\n    }\n\n    if (baseText == null) {\n      baseText = zrUtil.isFunction(opt.defaultText) ? opt.defaultText(labelDataIndex, opt) : opt.defaultText;\n    }\n  }\n\n  var normalStyleText = showNormal ? baseText : null;\n  var emphasisStyleText = showEmphasis ? zrUtil.retrieve2(labelFetcher ? labelFetcher.getFormattedLabel(labelDataIndex, 'emphasis', null, labelDimIndex) : null, baseText) : null; // Optimize: If style.text is null, text will not be drawn.\n\n  if (normalStyleText != null || emphasisStyleText != null) {\n    // Always set `textStyle` even if `normalStyle.text` is null, because default\n    // values have to be set on `normalStyle`.\n    // If we set default values on `emphasisStyle`, consider case:\n    // Firstly, `setOption(... label: {normal: {text: null}, emphasis: {show: true}} ...);`\n    // Secondly, `setOption(... label: {noraml: {show: true, text: 'abc', color: 'red'} ...);`\n    // Then the 'red' will not work on emphasis.\n    setTextStyle(normalStyle, normalModel, normalSpecified, opt);\n    setTextStyle(emphasisStyle, emphasisModel, emphasisSpecified, opt, true);\n  }\n\n  normalStyle.text = normalStyleText;\n  emphasisStyle.text = emphasisStyleText;\n}\n/**\n * Set basic textStyle properties.\n * @param {Object|module:zrender/graphic/Style} textStyle\n * @param {module:echarts/model/Model} model\n * @param {Object} [specifiedTextStyle] Can be overrided by settings in model.\n * @param {Object} [opt] See `opt` of `setTextStyleCommon`.\n * @param {boolean} [isEmphasis]\n */\n\n\nfunction setTextStyle(textStyle, textStyleModel, specifiedTextStyle, opt, isEmphasis) {\n  setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis);\n  specifiedTextStyle && zrUtil.extend(textStyle, specifiedTextStyle);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n  return textStyle;\n}\n/**\n * Set text option in the style.\n * @deprecated\n * @param {Object} textStyle\n * @param {module:echarts/model/Model} labelModel\n * @param {string|boolean} defaultColor Default text color.\n *        If set as false, it will be processed as a emphasis style.\n */\n\n\nfunction setText(textStyle, labelModel, defaultColor) {\n  var opt = {\n    isRectText: true\n  };\n  var isEmphasis;\n\n  if (defaultColor === false) {\n    isEmphasis = true;\n  } else {\n    // Support setting color as 'auto' to get visual color.\n    opt.autoColor = defaultColor;\n  }\n\n  setTextStyleCommon(textStyle, labelModel, opt, isEmphasis);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n}\n/**\n * {\n *      disableBox: boolean, Whether diable drawing box of block (outer most).\n *      isRectText: boolean,\n *      autoColor: string, specify a color when color is 'auto',\n *              for textFill, textStroke, textBackgroundColor, and textBorderColor.\n *              If autoColor specified, it is used as default textFill.\n *      useInsideStyle:\n *              `true`: Use inside style (textFill, textStroke, textStrokeWidth)\n *                  if `textFill` is not specified.\n *              `false`: Do not use inside style.\n *              `null/undefined`: use inside style if `isRectText` is true and\n *                  `textFill` is not specified and textPosition contains `'inside'`.\n *      forceRich: boolean\n * }\n */\n\n\nfunction setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis) {\n  // Consider there will be abnormal when merge hover style to normal style if given default value.\n  opt = opt || EMPTY_OBJ;\n\n  if (opt.isRectText) {\n    var textPosition = textStyleModel.getShallow('position') || (isEmphasis ? null : 'inside'); // 'outside' is not a valid zr textPostion value, but used\n    // in bar series, and magric type should be considered.\n\n    textPosition === 'outside' && (textPosition = 'top');\n    textStyle.textPosition = textPosition;\n    textStyle.textOffset = textStyleModel.getShallow('offset');\n    var labelRotate = textStyleModel.getShallow('rotate');\n    labelRotate != null && (labelRotate *= Math.PI / 180);\n    textStyle.textRotation = labelRotate;\n    textStyle.textDistance = zrUtil.retrieve2(textStyleModel.getShallow('distance'), isEmphasis ? null : 5);\n  }\n\n  var ecModel = textStyleModel.ecModel;\n  var globalTextStyle = ecModel && ecModel.option.textStyle; // Consider case:\n  // {\n  //     data: [{\n  //         value: 12,\n  //         label: {\n  //             rich: {\n  //                 // no 'a' here but using parent 'a'.\n  //             }\n  //         }\n  //     }],\n  //     rich: {\n  //         a: { ... }\n  //     }\n  // }\n\n  var richItemNames = getRichItemNames(textStyleModel);\n  var richResult;\n\n  if (richItemNames) {\n    richResult = {};\n\n    for (var name in richItemNames) {\n      if (richItemNames.hasOwnProperty(name)) {\n        // Cascade is supported in rich.\n        var richTextStyle = textStyleModel.getModel(['rich', name]); // In rich, never `disableBox`.\n\n        setTokenTextStyle(richResult[name] = {}, richTextStyle, globalTextStyle, opt, isEmphasis);\n      }\n    }\n  }\n\n  textStyle.rich = richResult;\n  setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, true);\n\n  if (opt.forceRich && !opt.textStyle) {\n    opt.textStyle = {};\n  }\n\n  return textStyle;\n} // Consider case:\n// {\n//     data: [{\n//         value: 12,\n//         label: {\n//             rich: {\n//                 // no 'a' here but using parent 'a'.\n//             }\n//         }\n//     }],\n//     rich: {\n//         a: { ... }\n//     }\n// }\n\n\nfunction getRichItemNames(textStyleModel) {\n  // Use object to remove duplicated names.\n  var richItemNameMap;\n\n  while (textStyleModel && textStyleModel !== textStyleModel.ecModel) {\n    var rich = (textStyleModel.option || EMPTY_OBJ).rich;\n\n    if (rich) {\n      richItemNameMap = richItemNameMap || {};\n\n      for (var name in rich) {\n        if (rich.hasOwnProperty(name)) {\n          richItemNameMap[name] = 1;\n        }\n      }\n    }\n\n    textStyleModel = textStyleModel.parentModel;\n  }\n\n  return richItemNameMap;\n}\n\nfunction setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, isBlock) {\n  // In merge mode, default value should not be given.\n  globalTextStyle = !isEmphasis && globalTextStyle || EMPTY_OBJ;\n  textStyle.textFill = getAutoColor(textStyleModel.getShallow('color'), opt) || globalTextStyle.color;\n  textStyle.textStroke = getAutoColor(textStyleModel.getShallow('textBorderColor'), opt) || globalTextStyle.textBorderColor;\n  textStyle.textStrokeWidth = zrUtil.retrieve2(textStyleModel.getShallow('textBorderWidth'), globalTextStyle.textBorderWidth);\n\n  if (!isEmphasis) {\n    if (isBlock) {\n      // Always set `insideRollback`, for clearing previous.\n      var originalTextPosition = textStyle.textPosition;\n      textStyle.insideRollback = applyInsideStyle(textStyle, originalTextPosition, opt); // Save original textPosition, because style.textPosition will be repalced by\n      // real location (like [10, 30]) in zrender.\n\n      textStyle.insideOriginalTextPosition = originalTextPosition;\n      textStyle.insideRollbackOpt = opt;\n    } // Set default finally.\n\n\n    if (textStyle.textFill == null) {\n      textStyle.textFill = opt.autoColor;\n    }\n  } // Do not use `getFont` here, because merge should be supported, where\n  // part of these properties may be changed in emphasis style, and the\n  // others should remain their original value got from normal style.\n\n\n  textStyle.fontStyle = textStyleModel.getShallow('fontStyle') || globalTextStyle.fontStyle;\n  textStyle.fontWeight = textStyleModel.getShallow('fontWeight') || globalTextStyle.fontWeight;\n  textStyle.fontSize = textStyleModel.getShallow('fontSize') || globalTextStyle.fontSize;\n  textStyle.fontFamily = textStyleModel.getShallow('fontFamily') || globalTextStyle.fontFamily;\n  textStyle.textAlign = textStyleModel.getShallow('align');\n  textStyle.textVerticalAlign = textStyleModel.getShallow('verticalAlign') || textStyleModel.getShallow('baseline');\n  textStyle.textLineHeight = textStyleModel.getShallow('lineHeight');\n  textStyle.textWidth = textStyleModel.getShallow('width');\n  textStyle.textHeight = textStyleModel.getShallow('height');\n  textStyle.textTag = textStyleModel.getShallow('tag');\n\n  if (!isBlock || !opt.disableBox) {\n    textStyle.textBackgroundColor = getAutoColor(textStyleModel.getShallow('backgroundColor'), opt);\n    textStyle.textPadding = textStyleModel.getShallow('padding');\n    textStyle.textBorderColor = getAutoColor(textStyleModel.getShallow('borderColor'), opt);\n    textStyle.textBorderWidth = textStyleModel.getShallow('borderWidth');\n    textStyle.textBorderRadius = textStyleModel.getShallow('borderRadius');\n    textStyle.textBoxShadowColor = textStyleModel.getShallow('shadowColor');\n    textStyle.textBoxShadowBlur = textStyleModel.getShallow('shadowBlur');\n    textStyle.textBoxShadowOffsetX = textStyleModel.getShallow('shadowOffsetX');\n    textStyle.textBoxShadowOffsetY = textStyleModel.getShallow('shadowOffsetY');\n  }\n\n  textStyle.textShadowColor = textStyleModel.getShallow('textShadowColor') || globalTextStyle.textShadowColor;\n  textStyle.textShadowBlur = textStyleModel.getShallow('textShadowBlur') || globalTextStyle.textShadowBlur;\n  textStyle.textShadowOffsetX = textStyleModel.getShallow('textShadowOffsetX') || globalTextStyle.textShadowOffsetX;\n  textStyle.textShadowOffsetY = textStyleModel.getShallow('textShadowOffsetY') || globalTextStyle.textShadowOffsetY;\n}\n\nfunction getAutoColor(color, opt) {\n  return color !== 'auto' ? color : opt && opt.autoColor ? opt.autoColor : null;\n}\n\nfunction applyInsideStyle(textStyle, textPosition, opt) {\n  var useInsideStyle = opt.useInsideStyle;\n  var insideRollback;\n\n  if (textStyle.textFill == null && useInsideStyle !== false && (useInsideStyle === true || opt.isRectText && textPosition // textPosition can be [10, 30]\n  && typeof textPosition === 'string' && textPosition.indexOf('inside') >= 0)) {\n    insideRollback = {\n      textFill: null,\n      textStroke: textStyle.textStroke,\n      textStrokeWidth: textStyle.textStrokeWidth\n    };\n    textStyle.textFill = '#fff'; // Consider text with #fff overflow its container.\n\n    if (textStyle.textStroke == null) {\n      textStyle.textStroke = opt.autoColor;\n      textStyle.textStrokeWidth == null && (textStyle.textStrokeWidth = 2);\n    }\n  }\n\n  return insideRollback;\n}\n\nfunction rollbackInsideStyle(style) {\n  var insideRollback = style.insideRollback;\n\n  if (insideRollback) {\n    style.textFill = insideRollback.textFill;\n    style.textStroke = insideRollback.textStroke;\n    style.textStrokeWidth = insideRollback.textStrokeWidth;\n  }\n}\n\nfunction getFont(opt, ecModel) {\n  // ecModel or default text style model.\n  var gTextStyleModel = ecModel || ecModel.getModel('textStyle');\n  return zrUtil.trim([// FIXME in node-canvas fontWeight is before fontStyle\n  opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '', opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '', (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px', opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'].join(' '));\n}\n\nfunction animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n  if (typeof dataIndex === 'function') {\n    cb = dataIndex;\n    dataIndex = null;\n  } // Do not check 'animation' property directly here. Consider this case:\n  // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n  // but its parent model (`seriesModel`) does.\n\n\n  var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n  if (animationEnabled) {\n    var postfix = isUpdate ? 'Update' : '';\n    var duration = animatableModel.getShallow('animationDuration' + postfix);\n    var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n    var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n\n    if (typeof animationDelay === 'function') {\n      animationDelay = animationDelay(dataIndex, animatableModel.getAnimationDelayParams ? animatableModel.getAnimationDelayParams(el, dataIndex) : null);\n    }\n\n    if (typeof duration === 'function') {\n      duration = duration(dataIndex);\n    }\n\n    duration > 0 ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb, !!cb) : (el.stopAnimation(), el.attr(props), cb && cb());\n  } else {\n    el.stopAnimation();\n    el.attr(props);\n    cb && cb();\n  }\n}\n/**\n * Update graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} [cb]\n * @example\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n *     // Or\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, function () { console.log('Animation done!'); });\n */\n\n\nfunction updateProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Init graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} cb\n */\n\n\nfunction initProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Get transform matrix of target (param target),\n * in coordinate of its ancestor (param ancestor)\n *\n * @param {module:zrender/mixin/Transformable} target\n * @param {module:zrender/mixin/Transformable} [ancestor]\n */\n\n\nfunction getTransform(target, ancestor) {\n  var mat = matrix.identity([]);\n\n  while (target && target !== ancestor) {\n    matrix.mul(mat, target.getLocalTransform(), mat);\n    target = target.parent;\n  }\n\n  return mat;\n}\n/**\n * Apply transform to an vertex.\n * @param {Array.<number>} target [x, y]\n * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n * @param {boolean=} invert Whether use invert matrix.\n * @return {Array.<number>} [x, y]\n */\n\n\nfunction applyTransform(target, transform, invert) {\n  if (transform && !zrUtil.isArrayLike(transform)) {\n    transform = Transformable.getLocalTransform(transform);\n  }\n\n  if (invert) {\n    transform = matrix.invert([], transform);\n  }\n\n  return vector.applyTransform([], target, transform);\n}\n/**\n * @param {string} direction 'left' 'right' 'top' 'bottom'\n * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n * @param {boolean=} invert Whether use invert matrix.\n * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n */\n\n\nfunction transformDirection(direction, transform, invert) {\n  // Pick a base, ensure that transform result will not be (0, 0).\n  var hBase = transform[4] === 0 || transform[5] === 0 || transform[0] === 0 ? 1 : Math.abs(2 * transform[4] / transform[0]);\n  var vBase = transform[4] === 0 || transform[5] === 0 || transform[2] === 0 ? 1 : Math.abs(2 * transform[4] / transform[2]);\n  var vertex = [direction === 'left' ? -hBase : direction === 'right' ? hBase : 0, direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0];\n  vertex = applyTransform(vertex, transform, invert);\n  return Math.abs(vertex[0]) > Math.abs(vertex[1]) ? vertex[0] > 0 ? 'right' : 'left' : vertex[1] > 0 ? 'bottom' : 'top';\n}\n/**\n * Apply group transition animation from g1 to g2.\n * If no animatableModel, no animation.\n */\n\n\nfunction groupTransition(g1, g2, animatableModel, cb) {\n  if (!g1 || !g2) {\n    return;\n  }\n\n  function getElMap(g) {\n    var elMap = {};\n    g.traverse(function (el) {\n      if (!el.isGroup && el.anid) {\n        elMap[el.anid] = el;\n      }\n    });\n    return elMap;\n  }\n\n  function getAnimatableProps(el) {\n    var obj = {\n      position: vector.clone(el.position),\n      rotation: el.rotation\n    };\n\n    if (el.shape) {\n      obj.shape = zrUtil.extend({}, el.shape);\n    }\n\n    return obj;\n  }\n\n  var elMap1 = getElMap(g1);\n  g2.traverse(function (el) {\n    if (!el.isGroup && el.anid) {\n      var oldEl = elMap1[el.anid];\n\n      if (oldEl) {\n        var newProp = getAnimatableProps(el);\n        el.attr(getAnimatableProps(oldEl));\n        updateProps(el, newProp, animatableModel, el.dataIndex);\n      } // else {\n      //     if (el.previousProps) {\n      //         graphic.updateProps\n      //     }\n      // }\n\n    }\n  });\n}\n/**\n * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]\n * @param {Object} rect {x, y, width, height}\n * @return {Array.<Array.<number>>} A new clipped points.\n */\n\n\nfunction clipPointsByRect(points, rect) {\n  return zrUtil.map(points, function (point) {\n    var x = point[0];\n    x = mathMax(x, rect.x);\n    x = mathMin(x, rect.x + rect.width);\n    var y = point[1];\n    y = mathMax(y, rect.y);\n    y = mathMin(y, rect.y + rect.height);\n    return [x, y];\n  });\n}\n/**\n * @param {Object} targetRect {x, y, width, height}\n * @param {Object} rect {x, y, width, height}\n * @return {Object} A new clipped rect. If rect size are negative, return undefined.\n */\n\n\nfunction clipRectByRect(targetRect, rect) {\n  var x = mathMax(targetRect.x, rect.x);\n  var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\n  var y = mathMax(targetRect.y, rect.y);\n  var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height);\n\n  if (x2 >= x && y2 >= y) {\n    return {\n      x: x,\n      y: y,\n      width: x2 - x,\n      height: y2 - y\n    };\n  }\n}\n/**\n * @param {string} iconStr Support 'image://' or 'path://' or direct svg path.\n * @param {Object} [opt] Properties of `module:zrender/Element`, except `style`.\n * @param {Object} [rect] {x, y, width, height}\n * @return {module:zrender/Element} Icon path or image element.\n */\n\n\nfunction createIcon(iconStr, opt, rect) {\n  opt = zrUtil.extend({\n    rectHover: true\n  }, opt);\n  var style = opt.style = {\n    strokeNoScale: true\n  };\n  rect = rect || {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  };\n\n  if (iconStr) {\n    return iconStr.indexOf('image://') === 0 ? (style.image = iconStr.slice(8), zrUtil.defaults(style, rect), new ZImage(opt)) : makePath(iconStr.replace('path://', ''), opt, rect, 'center');\n  }\n}\n\nexports.extendShape = extendShape;\nexports.extendPath = extendPath;\nexports.makePath = makePath;\nexports.makeImage = makeImage;\nexports.mergePath = mergePath;\nexports.resizePath = resizePath;\nexports.subPixelOptimizeLine = subPixelOptimizeLine;\nexports.subPixelOptimizeRect = subPixelOptimizeRect;\nexports.subPixelOptimize = subPixelOptimize;\nexports.setHoverStyle = setHoverStyle;\nexports.setLabelStyle = setLabelStyle;\nexports.setTextStyle = setTextStyle;\nexports.setText = setText;\nexports.getFont = getFont;\nexports.updateProps = updateProps;\nexports.initProps = initProps;\nexports.getTransform = getTransform;\nexports.applyTransform = applyTransform;\nexports.transformDirection = transformDirection;\nexports.groupTransition = groupTransition;\nexports.clipPointsByRect = clipPointsByRect;\nexports.clipRectByRect = clipRectByRect;\nexports.createIcon = createIcon;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar POSSIBLE_STYLES = ['areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle', 'chordStyle', 'label', 'labelLine'];\n\nfunction compatEC2ItemStyle(opt) {\n  var itemStyleOpt = opt && opt.itemStyle;\n\n  if (!itemStyleOpt) {\n    return;\n  }\n\n  for (var i = 0, len = POSSIBLE_STYLES.length; i < len; i++) {\n    var styleName = POSSIBLE_STYLES[i];\n    var normalItemStyleOpt = itemStyleOpt.normal;\n    var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n\n    if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].normal) {\n        opt[styleName].normal = normalItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n      }\n\n      normalItemStyleOpt[styleName] = null;\n    }\n\n    if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].emphasis) {\n        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n      }\n\n      emphasisItemStyleOpt[styleName] = null;\n    }\n  }\n}\n\nfunction convertNormalEmphasis(opt, optType, useExtend) {\n  if (opt && opt[optType] && (opt[optType].normal || opt[optType].emphasis)) {\n    var normalOpt = opt[optType].normal;\n    var emphasisOpt = opt[optType].emphasis;\n\n    if (normalOpt) {\n      // Timeline controlStyle has other properties besides normal and emphasis\n      if (useExtend) {\n        opt[optType].normal = opt[optType].emphasis = null;\n        zrUtil.defaults(opt[optType], normalOpt);\n      } else {\n        opt[optType] = normalOpt;\n      }\n    }\n\n    if (emphasisOpt) {\n      opt.emphasis = opt.emphasis || {};\n      opt.emphasis[optType] = emphasisOpt;\n    }\n  }\n}\n\nfunction removeEC3NormalStatus(opt) {\n  convertNormalEmphasis(opt, 'itemStyle');\n  convertNormalEmphasis(opt, 'lineStyle');\n  convertNormalEmphasis(opt, 'areaStyle');\n  convertNormalEmphasis(opt, 'label');\n  convertNormalEmphasis(opt, 'labelLine'); // treemap\n\n  convertNormalEmphasis(opt, 'upperLabel'); // graph\n\n  convertNormalEmphasis(opt, 'edgeLabel');\n}\n\nfunction compatTextStyle(opt, propName) {\n  // Check whether is not object (string\\null\\undefined ...)\n  var labelOptSingle = isObject(opt) && opt[propName];\n  var textStyle = isObject(labelOptSingle) && labelOptSingle.textStyle;\n\n  if (textStyle) {\n    for (var i = 0, len = modelUtil.TEXT_STYLE_OPTIONS.length; i < len; i++) {\n      var propName = modelUtil.TEXT_STYLE_OPTIONS[i];\n\n      if (textStyle.hasOwnProperty(propName)) {\n        labelOptSingle[propName] = textStyle[propName];\n      }\n    }\n  }\n}\n\nfunction compatEC3CommonStyles(opt) {\n  if (opt) {\n    removeEC3NormalStatus(opt);\n    compatTextStyle(opt, 'label');\n    opt.emphasis && compatTextStyle(opt.emphasis, 'label');\n  }\n}\n\nfunction processSeries(seriesOpt) {\n  if (!isObject(seriesOpt)) {\n    return;\n  }\n\n  compatEC2ItemStyle(seriesOpt);\n  removeEC3NormalStatus(seriesOpt);\n  compatTextStyle(seriesOpt, 'label'); // treemap\n\n  compatTextStyle(seriesOpt, 'upperLabel'); // graph\n\n  compatTextStyle(seriesOpt, 'edgeLabel');\n\n  if (seriesOpt.emphasis) {\n    compatTextStyle(seriesOpt.emphasis, 'label'); // treemap\n\n    compatTextStyle(seriesOpt.emphasis, 'upperLabel'); // graph\n\n    compatTextStyle(seriesOpt.emphasis, 'edgeLabel');\n  }\n\n  var markPoint = seriesOpt.markPoint;\n\n  if (markPoint) {\n    compatEC2ItemStyle(markPoint);\n    compatEC3CommonStyles(markPoint);\n  }\n\n  var markLine = seriesOpt.markLine;\n\n  if (markLine) {\n    compatEC2ItemStyle(markLine);\n    compatEC3CommonStyles(markLine);\n  }\n\n  var markArea = seriesOpt.markArea;\n\n  if (markArea) {\n    compatEC3CommonStyles(markArea);\n  }\n\n  var data = seriesOpt.data; // Break with ec3: if `setOption` again, there may be no `type` in option,\n  // then the backward compat based on option type will not be performed.\n\n  if (seriesOpt.type === 'graph') {\n    data = data || seriesOpt.nodes;\n    var edgeData = seriesOpt.links || seriesOpt.edges;\n\n    if (edgeData && !zrUtil.isTypedArray(edgeData)) {\n      for (var i = 0; i < edgeData.length; i++) {\n        compatEC3CommonStyles(edgeData[i]);\n      }\n    }\n\n    zrUtil.each(seriesOpt.categories, function (opt) {\n      removeEC3NormalStatus(opt);\n    });\n  }\n\n  if (data && !zrUtil.isTypedArray(data)) {\n    for (var i = 0; i < data.length; i++) {\n      compatEC3CommonStyles(data[i]);\n    }\n  } // mark point data\n\n\n  var markPoint = seriesOpt.markPoint;\n\n  if (markPoint && markPoint.data) {\n    var mpData = markPoint.data;\n\n    for (var i = 0; i < mpData.length; i++) {\n      compatEC3CommonStyles(mpData[i]);\n    }\n  } // mark line data\n\n\n  var markLine = seriesOpt.markLine;\n\n  if (markLine && markLine.data) {\n    var mlData = markLine.data;\n\n    for (var i = 0; i < mlData.length; i++) {\n      if (zrUtil.isArray(mlData[i])) {\n        compatEC3CommonStyles(mlData[i][0]);\n        compatEC3CommonStyles(mlData[i][1]);\n      } else {\n        compatEC3CommonStyles(mlData[i]);\n      }\n    }\n  } // Series\n\n\n  if (seriesOpt.type === 'gauge') {\n    compatTextStyle(seriesOpt, 'axisLabel');\n    compatTextStyle(seriesOpt, 'title');\n    compatTextStyle(seriesOpt, 'detail');\n  } else if (seriesOpt.type === 'treemap') {\n    convertNormalEmphasis(seriesOpt.breadcrumb, 'itemStyle');\n    zrUtil.each(seriesOpt.levels, function (opt) {\n      removeEC3NormalStatus(opt);\n    });\n  } else if (seriesOpt.type === 'tree') {\n    removeEC3NormalStatus(seriesOpt.leaves);\n  } // sunburst starts from ec4, so it does not need to compat levels.\n\n}\n\nfunction toArr(o) {\n  return zrUtil.isArray(o) ? o : o ? [o] : [];\n}\n\nfunction toObj(o) {\n  return (zrUtil.isArray(o) ? o[0] : o) || {};\n}\n\nfunction _default(option, isTheme) {\n  each(toArr(option.series), function (seriesOpt) {\n    isObject(seriesOpt) && processSeries(seriesOpt);\n  });\n  var axes = ['xAxis', 'yAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'parallelAxis', 'radar'];\n  isTheme && axes.push('valueAxis', 'categoryAxis', 'logAxis', 'timeAxis');\n  each(axes, function (axisName) {\n    each(toArr(option[axisName]), function (axisOpt) {\n      if (axisOpt) {\n        compatTextStyle(axisOpt, 'axisLabel');\n        compatTextStyle(axisOpt.axisPointer, 'label');\n      }\n    });\n  });\n  each(toArr(option.parallel), function (parallelOpt) {\n    var parallelAxisDefault = parallelOpt && parallelOpt.parallelAxisDefault;\n    compatTextStyle(parallelAxisDefault, 'axisLabel');\n    compatTextStyle(parallelAxisDefault && parallelAxisDefault.axisPointer, 'label');\n  });\n  each(toArr(option.calendar), function (calendarOpt) {\n    convertNormalEmphasis(calendarOpt, 'itemStyle');\n    compatTextStyle(calendarOpt, 'dayLabel');\n    compatTextStyle(calendarOpt, 'monthLabel');\n    compatTextStyle(calendarOpt, 'yearLabel');\n  }); // radar.name.textStyle\n\n  each(toArr(option.radar), function (radarOpt) {\n    compatTextStyle(radarOpt, 'name');\n  });\n  each(toArr(option.geo), function (geoOpt) {\n    if (isObject(geoOpt)) {\n      compatEC3CommonStyles(geoOpt);\n      each(toArr(geoOpt.regions), function (regionObj) {\n        compatEC3CommonStyles(regionObj);\n      });\n    }\n  });\n  each(toArr(option.timeline), function (timelineOpt) {\n    compatEC3CommonStyles(timelineOpt);\n    convertNormalEmphasis(timelineOpt, 'label');\n    convertNormalEmphasis(timelineOpt, 'itemStyle');\n    convertNormalEmphasis(timelineOpt, 'controlStyle', true);\n    var data = timelineOpt.data;\n    zrUtil.isArray(data) && zrUtil.each(data, function (item) {\n      if (zrUtil.isObject(item)) {\n        convertNormalEmphasis(item, 'label');\n        convertNormalEmphasis(item, 'itemStyle');\n      }\n    });\n  });\n  each(toArr(option.toolbox), function (toolboxOpt) {\n    convertNormalEmphasis(toolboxOpt, 'iconStyle');\n    each(toolboxOpt.feature, function (featureOpt) {\n      convertNormalEmphasis(featureOpt, 'iconStyle');\n    });\n  });\n  compatTextStyle(toObj(option.axisPointer), 'label');\n  compatTextStyle(toObj(option.tooltip).axisPointer, 'label');\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO Parse shadow style\n// TODO Only shallow path support\nfunction _default(properties) {\n  // Normalize\n  for (var i = 0; i < properties.length; i++) {\n    if (!properties[i][1]) {\n      properties[i][1] = properties[i][0];\n    }\n  }\n\n  return function (model, excludes, includes) {\n    var style = {};\n\n    for (var i = 0; i < properties.length; i++) {\n      var propName = properties[i][1];\n\n      if (excludes && zrUtil.indexOf(excludes, propName) >= 0 || includes && zrUtil.indexOf(includes, propName) < 0) {\n        continue;\n      }\n\n      var val = model.getShallow(propName);\n\n      if (val != null) {\n        style[properties[i][0]] = val;\n      }\n    }\n\n    return style;\n  };\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = {\n  toolbox: {\n    brush: {\n      title: {\n        rect: '矩形选择',\n        polygon: '圈选',\n        lineX: '横向选择',\n        lineY: '纵向选择',\n        keep: '保持选择',\n        clear: '清除选择'\n      }\n    },\n    dataView: {\n      title: '数据视图',\n      lang: ['数据视图', '关闭', '刷新']\n    },\n    dataZoom: {\n      title: {\n        zoom: '区域缩放',\n        back: '区域缩放还原'\n      }\n    },\n    magicType: {\n      title: {\n        line: '切换为折线图',\n        bar: '切换为柱状图',\n        stack: '切换为堆叠',\n        tiled: '切换为平铺'\n      }\n    },\n    restore: {\n      title: '还原'\n    },\n    saveAsImage: {\n      title: '保存为图片',\n      lang: ['右键另存为图片']\n    }\n  },\n  series: {\n    typeNames: {\n      pie: '饼图',\n      bar: '柱状图',\n      line: '折线图',\n      scatter: '散点图',\n      effectScatter: '涟漪散点图',\n      radar: '雷达图',\n      tree: '树图',\n      treemap: '矩形树图',\n      boxplot: '箱型图',\n      candlestick: 'K线图',\n      k: 'K线图',\n      heatmap: '热力图',\n      map: '地图',\n      parallel: '平行坐标图',\n      lines: '线图',\n      graph: '关系图',\n      sankey: '桑基图',\n      funnel: '漏斗图',\n      gauge: '仪表盘图',\n      pictorialBar: '象形柱图',\n      themeRiver: '主题河流图',\n      sunburst: '旭日图'\n    }\n  },\n  aria: {\n    general: {\n      withTitle: '这是一个关于“{title}”的图表。',\n      withoutTitle: '这是一个图表，'\n    },\n    series: {\n      single: {\n        prefix: '',\n        withName: '图表类型是{seriesType}，表示{seriesName}。',\n        withoutName: '图表类型是{seriesType}。'\n      },\n      multiple: {\n        prefix: '它由{seriesCount}个图表系列组成。',\n        withName: '第{seriesId}个系列是一个表示{seriesName}的{seriesType}，',\n        withoutName: '第{seriesId}个系列是一个{seriesType}，',\n        separator: {\n          middle: '；',\n          end: '。'\n        }\n      }\n    },\n    data: {\n      allData: '其数据是——',\n      partialData: '其中，前{displayCnt}项是——',\n      withName: '{name}的数据是{value}',\n      withoutName: '{value}',\n      separator: {\n        middle: '，',\n        end: ''\n      }\n    }\n  }\n};\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar isTypedArray = _util.isTypedArray;\nvar extend = _util.extend;\nvar assert = _util.assert;\nvar each = _util.each;\nvar isObject = _util.isObject;\n\nvar _model = require(\"../../util/model\");\n\nvar getDataItemValue = _model.getDataItemValue;\nvar isDataItemOption = _model.isDataItemOption;\n\nvar _number = require(\"../../util/number\");\n\nvar parseDate = _number.parseDate;\n\nvar Source = require(\"../Source\");\n\nvar _sourceType = require(\"./sourceType\");\n\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\nvar SOURCE_FORMAT_ARRAY_ROWS = _sourceType.SOURCE_FORMAT_ARRAY_ROWS;\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\nvar SOURCE_FORMAT_OBJECT_ROWS = _sourceType.SOURCE_FORMAT_OBJECT_ROWS;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO\n// ??? refactor? check the outer usage of data provider.\n// merge with defaultDimValueGetter?\n\n/**\n * If normal array used, mutable chunk size is supported.\n * If typed array used, chunk size must be fixed.\n */\nfunction DefaultDataProvider(source, dimSize) {\n  if (!Source.isInstance(source)) {\n    source = Source.seriesDataToSource(source);\n  }\n\n  this._source = source;\n  var data = this._data = source.data;\n  var sourceFormat = source.sourceFormat; // Typed array. TODO IE10+?\n\n  if (sourceFormat === SOURCE_FORMAT_TYPED_ARRAY) {\n    this._offset = 0;\n    this._dimSize = dimSize;\n    this._data = data;\n  }\n\n  var methods = providerMethods[sourceFormat === SOURCE_FORMAT_ARRAY_ROWS ? sourceFormat + '_' + source.seriesLayoutBy : sourceFormat];\n  extend(this, methods);\n}\n\nvar providerProto = DefaultDataProvider.prototype; // If data is pure without style configuration\n\nproviderProto.pure = false; // If data is persistent and will not be released after use.\n\nproviderProto.persistent = true; // ???! FIXME legacy data provider do not has method getSource\n\nproviderProto.getSource = function () {\n  return this._source;\n};\n\nvar providerMethods = {\n  'arrayRows_column': {\n    pure: true,\n    count: function () {\n      return Math.max(0, this._data.length - this._source.startIndex);\n    },\n    getItem: function (idx) {\n      return this._data[idx + this._source.startIndex];\n    },\n    appendData: appendDataSimply\n  },\n  'arrayRows_row': {\n    pure: true,\n    count: function () {\n      var row = this._data[0];\n      return row ? Math.max(0, row.length - this._source.startIndex) : 0;\n    },\n    getItem: function (idx) {\n      idx += this._source.startIndex;\n      var item = [];\n      var data = this._data;\n\n      for (var i = 0; i < data.length; i++) {\n        var row = data[i];\n        item.push(row ? row[idx] : null);\n      }\n\n      return item;\n    },\n    appendData: function () {\n      throw new Error('Do not support appendData when set seriesLayoutBy: \"row\".');\n    }\n  },\n  'objectRows': {\n    pure: true,\n    count: countSimply,\n    getItem: getItemSimply,\n    appendData: appendDataSimply\n  },\n  'keyedColumns': {\n    pure: true,\n    count: function () {\n      var dimName = this._source.dimensionsDefine[0].name;\n      var col = this._data[dimName];\n      return col ? col.length : 0;\n    },\n    getItem: function (idx) {\n      var item = [];\n      var dims = this._source.dimensionsDefine;\n\n      for (var i = 0; i < dims.length; i++) {\n        var col = this._data[dims[i].name];\n        item.push(col ? col[idx] : null);\n      }\n\n      return item;\n    },\n    appendData: function (newData) {\n      var data = this._data;\n      each(newData, function (newCol, key) {\n        var oldCol = data[key] || (data[key] = []);\n\n        for (var i = 0; i < (newCol || []).length; i++) {\n          oldCol.push(newCol[i]);\n        }\n      });\n    }\n  },\n  'original': {\n    count: countSimply,\n    getItem: getItemSimply,\n    appendData: appendDataSimply\n  },\n  'typedArray': {\n    persistent: false,\n    pure: true,\n    count: function () {\n      return this._data ? this._data.length / this._dimSize : 0;\n    },\n    getItem: function (idx, out) {\n      idx = idx - this._offset;\n      out = out || [];\n      var offset = this._dimSize * idx;\n\n      for (var i = 0; i < this._dimSize; i++) {\n        out[i] = this._data[offset + i];\n      }\n\n      return out;\n    },\n    appendData: function (newData) {\n      this._data = newData;\n    },\n    // Clean self if data is already used.\n    clean: function () {\n      // PENDING\n      this._offset += this.count();\n      this._data = null;\n    }\n  }\n};\n\nfunction countSimply() {\n  return this._data.length;\n}\n\nfunction getItemSimply(idx) {\n  return this._data[idx];\n}\n\nfunction appendDataSimply(newData) {\n  for (var i = 0; i < newData.length; i++) {\n    this._data.push(newData[i]);\n  }\n}\n\nvar rawValueGetters = {\n  arrayRows: getRawValueSimply,\n  objectRows: function (dataItem, dataIndex, dimIndex, dimName) {\n    return dimIndex != null ? dataItem[dimName] : dataItem;\n  },\n  keyedColumns: getRawValueSimply,\n  original: function (dataItem, dataIndex, dimIndex, dimName) {\n    // FIXME\n    // In some case (markpoint in geo (geo-map.html)), dataItem\n    // is {coord: [...]}\n    var value = getDataItemValue(dataItem);\n    return dimIndex == null || !(value instanceof Array) ? value : value[dimIndex];\n  },\n  typedArray: getRawValueSimply\n};\n\nfunction getRawValueSimply(dataItem, dataIndex, dimIndex, dimName) {\n  return dimIndex != null ? dataItem[dimIndex] : dataItem;\n}\n\nvar defaultDimValueGetters = {\n  arrayRows: getDimValueSimply,\n  objectRows: function (dataItem, dimName, dataIndex, dimIndex) {\n    return converDataValue(dataItem[dimName], this._dimensionInfos[dimName]);\n  },\n  keyedColumns: getDimValueSimply,\n  original: function (dataItem, dimName, dataIndex, dimIndex) {\n    // Performance sensitive, do not use modelUtil.getDataItemValue.\n    // If dataItem is an plain object with no value field, the var `value`\n    // will be assigned with the object, but it will be tread correctly\n    // in the `convertDataValue`.\n    var value = dataItem && (dataItem.value == null ? dataItem : dataItem.value); // If any dataItem is like { value: 10 }\n\n    if (!this._rawData.pure && isDataItemOption(dataItem)) {\n      this.hasItemOption = true;\n    }\n\n    return converDataValue(value instanceof Array ? value[dimIndex] // If value is a single number or something else not array.\n    : value, this._dimensionInfos[dimName]);\n  },\n  typedArray: function (dataItem, dimName, dataIndex, dimIndex) {\n    return dataItem[dimIndex];\n  }\n};\n\nfunction getDimValueSimply(dataItem, dimName, dataIndex, dimIndex) {\n  return converDataValue(dataItem[dimIndex], this._dimensionInfos[dimName]);\n}\n/**\n * This helper method convert value in data.\n * @param {string|number|Date} value\n * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n *        If \"dimInfo.ordinalParseAndSave\", ordinal value can be parsed.\n */\n\n\nfunction converDataValue(value, dimInfo) {\n  // Performance sensitive.\n  var dimType = dimInfo && dimInfo.type;\n\n  if (dimType === 'ordinal') {\n    // If given value is a category string\n    var ordinalMeta = dimInfo && dimInfo.ordinalMeta;\n    return ordinalMeta ? ordinalMeta.parseAndCollect(value) : value;\n  }\n\n  if (dimType === 'time' // spead up when using timestamp\n  && typeof value !== 'number' && value != null && value !== '-') {\n    value = +parseDate(value);\n  } // dimType defaults 'number'.\n  // If dimType is not ordinal and value is null or undefined or NaN or '-',\n  // parse to NaN.\n\n\n  return value == null || value === '' ? NaN // If string (like '-'), using '+' parse to NaN\n  // If object, also parse to NaN\n  : +value;\n} // ??? FIXME can these logic be more neat: getRawValue, getRawDataItem,\n// Consider persistent.\n// Caution: why use raw value to display on label or tooltip?\n// A reason is to avoid format. For example time value we do not know\n// how to format is expected. More over, if stack is used, calculated\n// value may be 0.91000000001, which have brings trouble to display.\n// TODO: consider how to treat null/undefined/NaN when display?\n\n/**\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @param {string|number} [dim] dimName or dimIndex\n * @return {Array.<number>|string|number} can be null/undefined.\n */\n\n\nfunction retrieveRawValue(data, dataIndex, dim) {\n  if (!data) {\n    return;\n  } // Consider data may be not persistent.\n\n\n  var dataItem = data.getRawDataItem(dataIndex);\n\n  if (dataItem == null) {\n    return;\n  }\n\n  var sourceFormat = data.getProvider().getSource().sourceFormat;\n  var dimName;\n  var dimIndex;\n  var dimInfo = data.getDimensionInfo(dim);\n\n  if (dimInfo) {\n    dimName = dimInfo.name;\n    dimIndex = dimInfo.index;\n  }\n\n  return rawValueGetters[sourceFormat](dataItem, dataIndex, dimIndex, dimName);\n}\n/**\n * Compatible with some cases (in pie, map) like:\n * data: [{name: 'xx', value: 5, selected: true}, ...]\n * where only sourceFormat is 'original' and 'objectRows' supported.\n *\n * ??? TODO\n * Supported detail options in data item when using 'arrayRows'.\n *\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @param {string} attr like 'selected'\n */\n\n\nfunction retrieveRawAttr(data, dataIndex, attr) {\n  if (!data) {\n    return;\n  }\n\n  var sourceFormat = data.getProvider().getSource().sourceFormat;\n\n  if (sourceFormat !== SOURCE_FORMAT_ORIGINAL && sourceFormat !== SOURCE_FORMAT_OBJECT_ROWS) {\n    return;\n  }\n\n  var dataItem = data.getRawDataItem(dataIndex);\n\n  if (sourceFormat === SOURCE_FORMAT_ORIGINAL && !isObject(dataItem)) {\n    dataItem = null;\n  }\n\n  if (dataItem) {\n    return dataItem[attr];\n  }\n}\n\nexports.DefaultDataProvider = DefaultDataProvider;\nexports.defaultDimValueGetters = defaultDimValueGetters;\nexports.retrieveRawValue = retrieveRawValue;\nexports.retrieveRawAttr = retrieveRawAttr;","var fixShadow = require(\"./helper/fixShadow\");\n\nvar STYLE_COMMON_PROPS = [['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'], ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]]; // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n// var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\nvar Style = function (opts, host) {\n  this.extendFrom(opts, false);\n  this.host = host;\n};\n\nfunction createLinearGradient(ctx, obj, rect) {\n  var x = obj.x == null ? 0 : obj.x;\n  var x2 = obj.x2 == null ? 1 : obj.x2;\n  var y = obj.y == null ? 0 : obj.y;\n  var y2 = obj.y2 == null ? 0 : obj.y2;\n\n  if (!obj.global) {\n    x = x * rect.width + rect.x;\n    x2 = x2 * rect.width + rect.x;\n    y = y * rect.height + rect.y;\n    y2 = y2 * rect.height + rect.y;\n  } // Fix NaN when rect is Infinity\n\n\n  x = isNaN(x) ? 0 : x;\n  x2 = isNaN(x2) ? 1 : x2;\n  y = isNaN(y) ? 0 : y;\n  y2 = isNaN(y2) ? 0 : y2;\n  var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n  return canvasGradient;\n}\n\nfunction createRadialGradient(ctx, obj, rect) {\n  var width = rect.width;\n  var height = rect.height;\n  var min = Math.min(width, height);\n  var x = obj.x == null ? 0.5 : obj.x;\n  var y = obj.y == null ? 0.5 : obj.y;\n  var r = obj.r == null ? 0.5 : obj.r;\n\n  if (!obj.global) {\n    x = x * width + rect.x;\n    y = y * height + rect.y;\n    r = r * min;\n  }\n\n  var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n  return canvasGradient;\n}\n\nStyle.prototype = {\n  constructor: Style,\n\n  /**\n   * @type {module:zrender/graphic/Displayable}\n   */\n  host: null,\n\n  /**\n   * @type {string}\n   */\n  fill: '#000',\n\n  /**\n   * @type {string}\n   */\n  stroke: null,\n\n  /**\n   * @type {number}\n   */\n  opacity: 1,\n\n  /**\n   * @type {Array.<number>}\n   */\n  lineDash: null,\n\n  /**\n   * @type {number}\n   */\n  lineDashOffset: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetY: 0,\n\n  /**\n   * @type {number}\n   */\n  lineWidth: 1,\n\n  /**\n   * If stroke ignore scale\n   * @type {Boolean}\n   */\n  strokeNoScale: false,\n  // Bounding rect text configuration\n  // Not affected by element transform\n\n  /**\n   * @type {string}\n   */\n  text: null,\n\n  /**\n   * If `fontSize` or `fontFamily` exists, `font` will be reset by\n   * `fontSize`, `fontStyle`, `fontWeight`, `fontFamily`.\n   * So do not visit it directly in upper application (like echarts),\n   * but use `contain/text#makeFont` instead.\n   * @type {string}\n   */\n  font: null,\n\n  /**\n   * The same as font. Use font please.\n   * @deprecated\n   * @type {string}\n   */\n  textFont: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontStyle: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontWeight: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * Should be 12 but not '12px'.\n   * @type {number}\n   */\n  fontSize: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontFamily: null,\n\n  /**\n   * Reserved for special functinality, like 'hr'.\n   * @type {string}\n   */\n  textTag: null,\n\n  /**\n   * @type {string}\n   */\n  textFill: '#000',\n\n  /**\n   * @type {string}\n   */\n  textStroke: null,\n\n  /**\n   * @type {number}\n   */\n  textWidth: null,\n\n  /**\n   * Only for textBackground.\n   * @type {number}\n   */\n  textHeight: null,\n\n  /**\n   * textStroke may be set as some color as a default\n   * value in upper applicaion, where the default value\n   * of textStrokeWidth should be 0 to make sure that\n   * user can choose to do not use text stroke.\n   * @type {number}\n   */\n  textStrokeWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textLineHeight: null,\n\n  /**\n   * 'inside', 'left', 'right', 'top', 'bottom'\n   * [x, y]\n   * Based on x, y of rect.\n   * @type {string|Array.<number>}\n   * @default 'inside'\n   */\n  textPosition: 'inside',\n\n  /**\n   * If not specified, use the boundingRect of a `displayable`.\n   * @type {Object}\n   */\n  textRect: null,\n\n  /**\n   * [x, y]\n   * @type {Array.<number>}\n   */\n  textOffset: null,\n\n  /**\n   * @type {string}\n   */\n  textAlign: null,\n\n  /**\n   * @type {string}\n   */\n  textVerticalAlign: null,\n\n  /**\n   * @type {number}\n   */\n  textDistance: 5,\n\n  /**\n   * @type {string}\n   */\n  textShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetY: 0,\n\n  /**\n   * @type {string}\n   */\n  textBoxShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetY: 0,\n\n  /**\n   * Whether transform text.\n   * Only useful in Path and Image element\n   * @type {boolean}\n   */\n  transformText: false,\n\n  /**\n   * Text rotate around position of Path or Image\n   * Only useful in Path and Image element and transformText is false.\n   */\n  textRotation: 0,\n\n  /**\n   * Text origin of text rotation, like [10, 40].\n   * Based on x, y of rect.\n   * Useful in label rotation of circular symbol.\n   * By default, this origin is textPosition.\n   * Can be 'center'.\n   * @type {string|Array.<number>}\n   */\n  textOrigin: null,\n\n  /**\n   * @type {string}\n   */\n  textBackgroundColor: null,\n\n  /**\n   * @type {string}\n   */\n  textBorderColor: null,\n\n  /**\n   * @type {number}\n   */\n  textBorderWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textBorderRadius: 0,\n\n  /**\n   * Can be `2` or `[2, 4]` or `[2, 3, 4, 5]`\n   * @type {number|Array.<number>}\n   */\n  textPadding: null,\n\n  /**\n   * Text styles for rich text.\n   * @type {Object}\n   */\n  rich: null,\n\n  /**\n   * {outerWidth, outerHeight, ellipsis, placeholder}\n   * @type {Object}\n   */\n  truncate: null,\n\n  /**\n   * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n   * @type {string}\n   */\n  blend: null,\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  bind: function (ctx, el, prevEl) {\n    var style = this;\n    var prevStyle = prevEl && prevEl.style;\n    var firstDraw = !prevStyle;\n\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n      var prop = STYLE_COMMON_PROPS[i];\n      var styleName = prop[0];\n\n      if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n        // FIXME Invalid property value will cause style leak from previous element.\n        ctx[styleName] = fixShadow(ctx, styleName, style[styleName] || prop[1]);\n      }\n    }\n\n    if (firstDraw || style.fill !== prevStyle.fill) {\n      ctx.fillStyle = style.fill;\n    }\n\n    if (firstDraw || style.stroke !== prevStyle.stroke) {\n      ctx.strokeStyle = style.stroke;\n    }\n\n    if (firstDraw || style.opacity !== prevStyle.opacity) {\n      ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n    }\n\n    if (firstDraw || style.blend !== prevStyle.blend) {\n      ctx.globalCompositeOperation = style.blend || 'source-over';\n    }\n\n    if (this.hasStroke()) {\n      var lineWidth = style.lineWidth;\n      ctx.lineWidth = lineWidth / (this.strokeNoScale && el && el.getLineScale ? el.getLineScale() : 1);\n    }\n  },\n  hasFill: function () {\n    var fill = this.fill;\n    return fill != null && fill !== 'none';\n  },\n  hasStroke: function () {\n    var stroke = this.stroke;\n    return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n  },\n\n  /**\n   * Extend from other style\n   * @param {zrender/graphic/Style} otherStyle\n   * @param {boolean} overwrite true: overwrirte any way.\n   *                            false: overwrite only when !target.hasOwnProperty\n   *                            others: overwrite when property is not null/undefined.\n   */\n  extendFrom: function (otherStyle, overwrite) {\n    if (otherStyle) {\n      for (var name in otherStyle) {\n        if (otherStyle.hasOwnProperty(name) && (overwrite === true || (overwrite === false ? !this.hasOwnProperty(name) : otherStyle[name] != null))) {\n          this[name] = otherStyle[name];\n        }\n      }\n    }\n  },\n\n  /**\n   * Batch setting style with a given object\n   * @param {Object|string} obj\n   * @param {*} [obj]\n   */\n  set: function (obj, value) {\n    if (typeof obj === 'string') {\n      this[obj] = value;\n    } else {\n      this.extendFrom(obj, true);\n    }\n  },\n\n  /**\n   * Clone\n   * @return {zrender/graphic/Style} [description]\n   */\n  clone: function () {\n    var newStyle = new this.constructor();\n    newStyle.extendFrom(this, true);\n    return newStyle;\n  },\n  getGradient: function (ctx, obj, rect) {\n    var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n    var canvasGradient = method(ctx, obj, rect);\n    var colorStops = obj.colorStops;\n\n    for (var i = 0; i < colorStops.length; i++) {\n      canvasGradient.addColorStop(colorStops[i].offset, colorStops[i].color);\n    }\n\n    return canvasGradient;\n  }\n};\nvar styleProto = Style.prototype;\n\nfor (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n  var prop = STYLE_COMMON_PROPS[i];\n\n  if (!(prop[0] in styleProto)) {\n    styleProto[prop[0]] = prop[1];\n  }\n} // Provide for others\n\n\nStyle.getGradient = styleProto.getGradient;\nvar _default = Style;\nmodule.exports = _default;","var dpr = 1; // If in browser environment\n\nif (typeof window !== 'undefined') {\n  dpr = Math.max(window.devicePixelRatio || 1, 1);\n}\n/**\n * config默认配置项\n * @exports zrender/config\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n/**\n * debug日志选项：catchBrushException为true下有效\n * 0 : 不生成debug数据，发布用\n * 1 : 异常抛出，调试用\n * 2 : 控制台输出，调试用\n */\n\n\nvar debugMode = 0; // retina 屏幕优化\n\nvar devicePixelRatio = dpr;\nexports.debugMode = debugMode;\nexports.devicePixelRatio = devicePixelRatio;","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar createHashMap = _util.createHashMap;\nvar assert = _util.assert;\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar OTHER_DIMENSIONS = createHashMap(['tooltip', 'label', 'itemName', 'itemId', 'seriesName']);\n\nfunction summarizeDimensions(data) {\n  var summary = {};\n  var encode = summary.encode = {};\n  var notExtraCoordDimMap = createHashMap();\n  var defaultedLabel = [];\n  var defaultedTooltip = [];\n  each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n    var coordDim = dimItem.coordDim;\n\n    if (coordDim) {\n      var coordDimArr = encode[coordDim];\n\n      if (!encode.hasOwnProperty(coordDim)) {\n        coordDimArr = encode[coordDim] = [];\n      }\n\n      coordDimArr[dimItem.coordDimIndex] = dimName;\n\n      if (!dimItem.isExtraCoord) {\n        notExtraCoordDimMap.set(coordDim, 1); // Use the last coord dim (and label friendly) as default label,\n        // because when dataset is used, it is hard to guess which dimension\n        // can be value dimension. If both show x, y on label is not look good,\n        // and conventionally y axis is focused more.\n\n        if (mayLabelDimType(dimItem.type)) {\n          defaultedLabel[0] = dimName;\n        }\n      }\n\n      if (dimItem.defaultTooltip) {\n        defaultedTooltip.push(dimName);\n      }\n    }\n\n    OTHER_DIMENSIONS.each(function (v, otherDim) {\n      var otherDimArr = encode[otherDim];\n\n      if (!encode.hasOwnProperty(otherDim)) {\n        otherDimArr = encode[otherDim] = [];\n      }\n\n      var dimIndex = dimItem.otherDims[otherDim];\n\n      if (dimIndex != null && dimIndex !== false) {\n        otherDimArr[dimIndex] = dimItem.name;\n      }\n    });\n  });\n  var dataDimsOnCoord = [];\n  var encodeFirstDimNotExtra = {};\n  notExtraCoordDimMap.each(function (v, coordDim) {\n    var dimArr = encode[coordDim]; // ??? FIXME extra coord should not be set in dataDimsOnCoord.\n    // But should fix the case that radar axes: simplify the logic\n    // of `completeDimension`, remove `extraPrefix`.\n\n    encodeFirstDimNotExtra[coordDim] = dimArr[0]; // Not necessary to remove duplicate, because a data\n    // dim canot on more than one coordDim.\n\n    dataDimsOnCoord = dataDimsOnCoord.concat(dimArr);\n  });\n  summary.dataDimsOnCoord = dataDimsOnCoord;\n  summary.encodeFirstDimNotExtra = encodeFirstDimNotExtra;\n  var encodeLabel = encode.label; // FIXME `encode.label` is not recommanded, because formatter can not be set\n  // in this way. Use label.formatter instead. May be remove this approach someday.\n\n  if (encodeLabel && encodeLabel.length) {\n    defaultedLabel = encodeLabel.slice();\n  }\n\n  var encodeTooltip = encode.tooltip;\n\n  if (encodeTooltip && encodeTooltip.length) {\n    defaultedTooltip = encodeTooltip.slice();\n  } else if (!defaultedTooltip.length) {\n    defaultedTooltip = defaultedLabel.slice();\n  }\n\n  encode.defaultedLabel = defaultedLabel;\n  encode.defaultedTooltip = defaultedTooltip;\n  return summary;\n}\n\nfunction getDimensionTypeByAxis(axisType) {\n  return axisType === 'category' ? 'ordinal' : axisType === 'time' ? 'time' : 'float';\n}\n\nfunction mayLabelDimType(dimType) {\n  // In most cases, ordinal and time do not suitable for label.\n  // Ordinal info can be displayed on axis. Time is too long.\n  return !(dimType === 'ordinal' || dimType === 'time');\n} // function findTheLastDimMayLabel(data) {\n//     // Get last value dim\n//     var dimensions = data.dimensions.slice();\n//     var valueType;\n//     var valueDim;\n//     while (dimensions.length && (\n//         valueDim = dimensions.pop(),\n//         valueType = data.getDimensionInfo(valueDim).type,\n//         valueType === 'ordinal' || valueType === 'time'\n//     )) {} // jshint ignore:line\n//     return valueDim;\n// }\n\n\nexports.OTHER_DIMENSIONS = OTHER_DIMENSIONS;\nexports.summarizeDimensions = summarizeDimensions;\nexports.getDimensionTypeByAxis = getDimensionTypeByAxis;","var SeriesModel = require(\"../../model/Series\");\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = SeriesModel.extend({\n  type: 'series.__base_bar__',\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  },\n  getMarkerPosition: function (value) {\n    var coordSys = this.coordinateSystem;\n\n    if (coordSys) {\n      // PENDING if clamp ?\n      var pt = coordSys.dataToPoint(coordSys.clampData(value));\n      var data = this.getData();\n      var offset = data.getLayout('offset');\n      var size = data.getLayout('size');\n      var offsetIndex = coordSys.getBaseAxis().isHorizontal() ? 0 : 1;\n      pt[offsetIndex] += offset + size / 2;\n      return pt;\n    }\n\n    return [NaN, NaN];\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    // stack: null\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // 最小高度改为0\n    barMinHeight: 0,\n    // 最小角度为0，仅对极坐标系下的柱状图有效\n    barMinAngle: 0,\n    // cursor: null,\n    large: false,\n    largeThreshold: 400,\n    progressive: 5e3,\n    progressiveChunkMode: 'mod',\n    // barMaxWidth: null,\n    // 默认自适应\n    // barWidth: null,\n    // 柱间距离，默认为柱形宽度的30%，可设固定值\n    // barGap: '30%',\n    // 类目间柱形距离，默认为类目间距的20%，可设固定值\n    // barCategoryGap: '20%',\n    // label: {\n    //      show: false\n    // },\n    itemStyle: {},\n    emphasis: {}\n  }\n});\n\nmodule.exports = _default;","var util = require(\"../core/util\");\n\nvar _event = require(\"../core/event\");\n\nvar Dispatcher = _event.Dispatcher;\n\nvar requestAnimationFrame = require(\"./requestAnimationFrame\");\n\nvar Animator = require(\"./Animator\");\n\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n/**\n * @typedef {Object} IZRenderStage\n * @property {Function} update\n */\n\n/**\n * @alias module:zrender/animation/Animation\n * @constructor\n * @param {Object} [options]\n * @param {Function} [options.onframe]\n * @param {IZRenderStage} [options.stage]\n * @example\n *     var animation = new Animation();\n *     var obj = {\n *         x: 100,\n *         y: 100\n *     };\n *     animation.animate(node.position)\n *         .when(1000, {\n *             x: 500,\n *             y: 500\n *         })\n *         .when(2000, {\n *             x: 100,\n *             y: 100\n *         })\n *         .start('spline');\n */\nvar Animation = function (options) {\n  options = options || {};\n  this.stage = options.stage || {};\n\n  this.onframe = options.onframe || function () {}; // private properties\n\n\n  this._clips = [];\n  this._running = false;\n  this._time;\n  this._pausedTime;\n  this._pauseStart;\n  this._paused = false;\n  Dispatcher.call(this);\n};\n\nAnimation.prototype = {\n  constructor: Animation,\n\n  /**\n   * 添加 clip\n   * @param {module:zrender/animation/Clip} clip\n   */\n  addClip: function (clip) {\n    this._clips.push(clip);\n  },\n\n  /**\n   * 添加 animator\n   * @param {module:zrender/animation/Animator} animator\n   */\n  addAnimator: function (animator) {\n    animator.animation = this;\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.addClip(clips[i]);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Clip} clip\n   */\n  removeClip: function (clip) {\n    var idx = util.indexOf(this._clips, clip);\n\n    if (idx >= 0) {\n      this._clips.splice(idx, 1);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Animator} animator\n   */\n  removeAnimator: function (animator) {\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.removeClip(clips[i]);\n    }\n\n    animator.animation = null;\n  },\n  _update: function () {\n    var time = new Date().getTime() - this._pausedTime;\n\n    var delta = time - this._time;\n    var clips = this._clips;\n    var len = clips.length;\n    var deferredEvents = [];\n    var deferredClips = [];\n\n    for (var i = 0; i < len; i++) {\n      var clip = clips[i];\n      var e = clip.step(time, delta); // Throw out the events need to be called after\n      // stage.update, like destroy\n\n      if (e) {\n        deferredEvents.push(e);\n        deferredClips.push(clip);\n      }\n    } // Remove the finished clip\n\n\n    for (var i = 0; i < len;) {\n      if (clips[i]._needsRemove) {\n        clips[i] = clips[len - 1];\n        clips.pop();\n        len--;\n      } else {\n        i++;\n      }\n    }\n\n    len = deferredEvents.length;\n\n    for (var i = 0; i < len; i++) {\n      deferredClips[i].fire(deferredEvents[i]);\n    }\n\n    this._time = time;\n    this.onframe(delta); // 'frame' should be triggered before stage, because upper application\n    // depends on the sequence (e.g., echarts-stream and finish\n    // event judge)\n\n    this.trigger('frame', delta);\n\n    if (this.stage.update) {\n      this.stage.update();\n    }\n  },\n  _startLoop: function () {\n    var self = this;\n    this._running = true;\n\n    function step() {\n      if (self._running) {\n        requestAnimationFrame(step);\n        !self._paused && self._update();\n      }\n    }\n\n    requestAnimationFrame(step);\n  },\n\n  /**\n   * Start animation.\n   */\n  start: function () {\n    this._time = new Date().getTime();\n    this._pausedTime = 0;\n\n    this._startLoop();\n  },\n\n  /**\n   * Stop animation.\n   */\n  stop: function () {\n    this._running = false;\n  },\n\n  /**\n   * Pause animation.\n   */\n  pause: function () {\n    if (!this._paused) {\n      this._pauseStart = new Date().getTime();\n      this._paused = true;\n    }\n  },\n\n  /**\n   * Resume animation.\n   */\n  resume: function () {\n    if (this._paused) {\n      this._pausedTime += new Date().getTime() - this._pauseStart;\n      this._paused = false;\n    }\n  },\n\n  /**\n   * Clear animation.\n   */\n  clear: function () {\n    this._clips = [];\n  },\n\n  /**\n   * Whether animation finished.\n   */\n  isFinished: function () {\n    return !this._clips.length;\n  },\n\n  /**\n   * Creat animator for a target, whose props can be animated.\n   *\n   * @param  {Object} target\n   * @param  {Object} options\n   * @param  {boolean} [options.loop=false] Whether loop animation.\n   * @param  {Function} [options.getter=null] Get value from target.\n   * @param  {Function} [options.setter=null] Set value to target.\n   * @return {module:zrender/animation/Animation~Animator}\n   */\n  // TODO Gap\n  animate: function (target, options) {\n    options = options || {};\n    var animator = new Animator(target, options.loop, options.getter, options.setter);\n    this.addAnimator(animator);\n    return animator;\n  }\n};\nutil.mixin(Animation, Dispatcher);\nvar _default = Animation;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar List = require(\"../../data/List\");\n\nvar createDimensions = require(\"../../data/helper/createDimensions\");\n\nvar _sourceType = require(\"../../data/helper/sourceType\");\n\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\n\nvar _dimensionHelper = require(\"../../data/helper/dimensionHelper\");\n\nvar getDimensionTypeByAxis = _dimensionHelper.getDimensionTypeByAxis;\n\nvar _model = require(\"../../util/model\");\n\nvar getDataItemValue = _model.getDataItemValue;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar _referHelper = require(\"../../model/referHelper\");\n\nvar getCoordSysDefineBySeries = _referHelper.getCoordSysDefineBySeries;\n\nvar Source = require(\"../../data/Source\");\n\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar enableDataStack = _dataStackHelper.enableDataStack;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/data/Source|Array} source Or raw data.\n * @param {module:echarts/model/Series} seriesModel\n * @param {Object} [opt]\n * @param {string} [opt.generateCoord]\n */\nfunction createListFromArray(source, seriesModel, opt) {\n  opt = opt || {};\n\n  if (!Source.isInstance(source)) {\n    source = Source.seriesDataToSource(source);\n  }\n\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var registeredCoordSys = CoordinateSystem.get(coordSysName);\n  var coordSysDefine = getCoordSysDefineBySeries(seriesModel);\n  var coordSysDimDefs;\n\n  if (coordSysDefine) {\n    coordSysDimDefs = zrUtil.map(coordSysDefine.coordSysDims, function (dim) {\n      var dimInfo = {\n        name: dim\n      };\n      var axisModel = coordSysDefine.axisMap.get(dim);\n\n      if (axisModel) {\n        var axisType = axisModel.get('type');\n        dimInfo.type = getDimensionTypeByAxis(axisType); // dimInfo.stackable = isStackable(axisType);\n      }\n\n      return dimInfo;\n    });\n  }\n\n  if (!coordSysDimDefs) {\n    // Get dimensions from registered coordinate system\n    coordSysDimDefs = registeredCoordSys && (registeredCoordSys.getDimensionsInfo ? registeredCoordSys.getDimensionsInfo() : registeredCoordSys.dimensions.slice()) || ['x', 'y'];\n  }\n\n  var dimInfoList = createDimensions(source, {\n    coordDimensions: coordSysDimDefs,\n    generateCoord: opt.generateCoord\n  });\n  var firstCategoryDimIndex;\n  var hasNameEncode;\n  coordSysDefine && zrUtil.each(dimInfoList, function (dimInfo, dimIndex) {\n    var coordDim = dimInfo.coordDim;\n    var categoryAxisModel = coordSysDefine.categoryAxisMap.get(coordDim);\n\n    if (categoryAxisModel) {\n      if (firstCategoryDimIndex == null) {\n        firstCategoryDimIndex = dimIndex;\n      }\n\n      dimInfo.ordinalMeta = categoryAxisModel.getOrdinalMeta();\n    }\n\n    if (dimInfo.otherDims.itemName != null) {\n      hasNameEncode = true;\n    }\n  });\n\n  if (!hasNameEncode && firstCategoryDimIndex != null) {\n    dimInfoList[firstCategoryDimIndex].otherDims.itemName = 0;\n  }\n\n  var stackCalculationInfo = enableDataStack(seriesModel, dimInfoList);\n  var list = new List(dimInfoList, seriesModel);\n  list.setCalculationInfo(stackCalculationInfo);\n  var dimValueGetter = firstCategoryDimIndex != null && isNeedCompleteOrdinalData(source) ? function (itemOpt, dimName, dataIndex, dimIndex) {\n    // Use dataIndex as ordinal value in categoryAxis\n    return dimIndex === firstCategoryDimIndex ? dataIndex : this.defaultDimValueGetter(itemOpt, dimName, dataIndex, dimIndex);\n  } : null;\n  list.hasItemOption = false;\n  list.initData(source, null, dimValueGetter);\n  return list;\n}\n\nfunction isNeedCompleteOrdinalData(source) {\n  if (source.sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    var sampleItem = firstDataNotNull(source.data || []);\n    return sampleItem != null && !zrUtil.isArray(getDataItemValue(sampleItem));\n  }\n}\n\nfunction firstDataNotNull(data) {\n  var i = 0;\n\n  while (i < data.length && data[i] == null) {\n    i++;\n  }\n\n  return data[i];\n}\n\nvar _default = createListFromArray;\nmodule.exports = _default;","var Path = require(\"../graphic/Path\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar transformPath = require(\"./transformPath\");\n\n// command chars\nvar cc = ['m', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z', 'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'];\nvar mathSqrt = Math.sqrt;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\n\nvar vMag = function (v) {\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n};\n\nvar vRatio = function (u, v) {\n  return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n};\n\nvar vAngle = function (u, v) {\n  return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n};\n\nfunction processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n  var psi = psiDeg * (PI / 180.0);\n  var xp = mathCos(psi) * (x1 - x2) / 2.0 + mathSin(psi) * (y1 - y2) / 2.0;\n  var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0 + mathCos(psi) * (y1 - y2) / 2.0;\n  var lambda = xp * xp / (rx * rx) + yp * yp / (ry * ry);\n\n  if (lambda > 1) {\n    rx *= mathSqrt(lambda);\n    ry *= mathSqrt(lambda);\n  }\n\n  var f = (fa === fs ? -1 : 1) * mathSqrt((rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) / (rx * rx * (yp * yp) + ry * ry * (xp * xp))) || 0;\n  var cxp = f * rx * yp / ry;\n  var cyp = f * -ry * xp / rx;\n  var cx = (x1 + x2) / 2.0 + mathCos(psi) * cxp - mathSin(psi) * cyp;\n  var cy = (y1 + y2) / 2.0 + mathSin(psi) * cxp + mathCos(psi) * cyp;\n  var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n  var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n  var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n  var dTheta = vAngle(u, v);\n\n  if (vRatio(u, v) <= -1) {\n    dTheta = PI;\n  }\n\n  if (vRatio(u, v) >= 1) {\n    dTheta = 0;\n  }\n\n  if (fs === 0 && dTheta > 0) {\n    dTheta = dTheta - 2 * PI;\n  }\n\n  if (fs === 1 && dTheta < 0) {\n    dTheta = dTheta + 2 * PI;\n  }\n\n  path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n}\n\nfunction createPathProxyFromString(data) {\n  if (!data) {\n    return [];\n  } // command string\n\n\n  var cs = data.replace(/-/g, ' -').replace(/  /g, ' ').replace(/ /g, ',').replace(/,,/g, ',');\n  var n; // create pipes so that we can split the data\n\n  for (n = 0; n < cc.length; n++) {\n    cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n  } // create array\n\n\n  var arr = cs.split('|'); // init context point\n\n  var cpx = 0;\n  var cpy = 0;\n  var path = new PathProxy();\n  var CMD = PathProxy.CMD;\n  var prevCmd;\n\n  for (n = 1; n < arr.length; n++) {\n    var str = arr[n];\n    var c = str.charAt(0);\n    var off = 0;\n    var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n    var cmd;\n\n    if (p.length > 0 && p[0] === '') {\n      p.shift();\n    }\n\n    for (var i = 0; i < p.length; i++) {\n      p[i] = parseFloat(p[i]);\n    }\n\n    while (off < p.length && !isNaN(p[off])) {\n      if (isNaN(p[0])) {\n        break;\n      }\n\n      var ctlPtx;\n      var ctlPty;\n      var rx;\n      var ry;\n      var psi;\n      var fa;\n      var fs;\n      var x1 = cpx;\n      var y1 = cpy; // convert l, H, h, V, and v to L\n\n      switch (c) {\n        case 'l':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'L':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'm':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'l';\n          break;\n\n        case 'M':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'L';\n          break;\n\n        case 'h':\n          cpx += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'H':\n          cpx = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'v':\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'V':\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'C':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]);\n          cpx = p[off - 2];\n          cpy = p[off - 1];\n          break;\n\n        case 'c':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy);\n          cpx += p[off - 2];\n          cpy += p[off - 1];\n          break;\n\n        case 'S':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 's':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = cpx + p[off++];\n          y1 = cpy + p[off++];\n          cpx += p[off++];\n          cpy += p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 'Q':\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'q':\n          x1 = p[off++] + cpx;\n          y1 = p[off++] + cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'T':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 't':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 'A':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n\n        case 'a':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n      }\n    }\n\n    if (c === 'z' || c === 'Z') {\n      cmd = CMD.Z;\n      path.addData(cmd);\n    }\n\n    prevCmd = cmd;\n  }\n\n  path.toStatic();\n  return path;\n} // TODO Optimize double memory cost problem\n\n\nfunction createPathOptions(str, opts) {\n  var pathProxy = createPathProxyFromString(str);\n  opts = opts || {};\n\n  opts.buildPath = function (path) {\n    if (path.setData) {\n      path.setData(pathProxy.data); // Svg and vml renderer don't have context\n\n      var ctx = path.getContext();\n\n      if (ctx) {\n        path.rebuildPath(ctx);\n      }\n    } else {\n      var ctx = path;\n      pathProxy.rebuildPath(ctx);\n    }\n  };\n\n  opts.applyTransform = function (m) {\n    transformPath(pathProxy, m);\n    this.dirty(true);\n  };\n\n  return opts;\n}\n/**\n * Create a Path object from path string data\n * http://www.w3.org/TR/SVG/paths.html#PathData\n * @param  {Object} opts Other options\n */\n\n\nfunction createFromString(str, opts) {\n  return new Path(createPathOptions(str, opts));\n}\n/**\n * Create a Path class from path string data\n * @param  {string} str\n * @param  {Object} opts Other options\n */\n\n\nfunction extendFromString(str, opts) {\n  return Path.extend(createPathOptions(str, opts));\n}\n/**\n * Merge multiple paths\n */\n// TODO Apply transform\n// TODO stroke dash\n// TODO Optimize double memory cost problem\n\n\nfunction mergePath(pathEls, opts) {\n  var pathList = [];\n  var len = pathEls.length;\n\n  for (var i = 0; i < len; i++) {\n    var pathEl = pathEls[i];\n\n    if (!pathEl.path) {\n      pathEl.createPathProxy();\n    }\n\n    if (pathEl.__dirtyPath) {\n      pathEl.buildPath(pathEl.path, pathEl.shape, true);\n    }\n\n    pathList.push(pathEl.path);\n  }\n\n  var pathBundle = new Path(opts); // Need path proxy.\n\n  pathBundle.createPathProxy();\n\n  pathBundle.buildPath = function (path) {\n    path.appendPath(pathList); // Svg and vml renderer don't have context\n\n    var ctx = path.getContext();\n\n    if (ctx) {\n      path.rebuildPath(ctx);\n    }\n  };\n\n  return pathBundle;\n}\n\nexports.createFromString = createFromString;\nexports.extendFromString = extendFromString;\nexports.mergePath = mergePath;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar RADIAN_EPSILON = 1e-4;\n\nfunction _trim(str) {\n  return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n}\n/**\n * Linear mapping a value from domain to range\n * @memberOf module:echarts/util/number\n * @param  {(number|Array.<number>)} val\n * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n * @param  {boolean} clamp\n * @return {(number|Array.<number>}\n */\n\n\nfunction linearMap(val, domain, range, clamp) {\n  var subDomain = domain[1] - domain[0];\n  var subRange = range[1] - range[0];\n\n  if (subDomain === 0) {\n    return subRange === 0 ? range[0] : (range[0] + range[1]) / 2;\n  } // Avoid accuracy problem in edge, such as\n  // 146.39 - 62.83 === 83.55999999999999.\n  // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n  // It is a little verbose for efficiency considering this method\n  // is a hotspot.\n\n\n  if (clamp) {\n    if (subDomain > 0) {\n      if (val <= domain[0]) {\n        return range[0];\n      } else if (val >= domain[1]) {\n        return range[1];\n      }\n    } else {\n      if (val >= domain[0]) {\n        return range[0];\n      } else if (val <= domain[1]) {\n        return range[1];\n      }\n    }\n  } else {\n    if (val === domain[0]) {\n      return range[0];\n    }\n\n    if (val === domain[1]) {\n      return range[1];\n    }\n  }\n\n  return (val - domain[0]) / subDomain * subRange + range[0];\n}\n/**\n * Convert a percent string to absolute number.\n * Returns NaN if percent is not a valid string or number\n * @memberOf module:echarts/util/number\n * @param {string|number} percent\n * @param {number} all\n * @return {number}\n */\n\n\nfunction parsePercent(percent, all) {\n  switch (percent) {\n    case 'center':\n    case 'middle':\n      percent = '50%';\n      break;\n\n    case 'left':\n    case 'top':\n      percent = '0%';\n      break;\n\n    case 'right':\n    case 'bottom':\n      percent = '100%';\n      break;\n  }\n\n  if (typeof percent === 'string') {\n    if (_trim(percent).match(/%$/)) {\n      return parseFloat(percent) / 100 * all;\n    }\n\n    return parseFloat(percent);\n  }\n\n  return percent == null ? NaN : +percent;\n}\n/**\n * (1) Fix rounding error of float numbers.\n * (2) Support return string to avoid scientific notation like '3.5e-7'.\n *\n * @param {number} x\n * @param {number} [precision]\n * @param {boolean} [returnStr]\n * @return {number|string}\n */\n\n\nfunction round(x, precision, returnStr) {\n  if (precision == null) {\n    precision = 10;\n  } // Avoid range error\n\n\n  precision = Math.min(Math.max(0, precision), 20);\n  x = (+x).toFixed(precision);\n  return returnStr ? x : +x;\n}\n\nfunction asc(arr) {\n  arr.sort(function (a, b) {\n    return a - b;\n  });\n  return arr;\n}\n/**\n * Get precision\n * @param {number} val\n */\n\n\nfunction getPrecision(val) {\n  val = +val;\n\n  if (isNaN(val)) {\n    return 0;\n  } // It is much faster than methods converting number to string as follows\n  //      var tmp = val.toString();\n  //      return tmp.length - 1 - tmp.indexOf('.');\n  // especially when precision is low\n\n\n  var e = 1;\n  var count = 0;\n\n  while (Math.round(val * e) / e !== val) {\n    e *= 10;\n    count++;\n  }\n\n  return count;\n}\n/**\n * @param {string|number} val\n * @return {number}\n */\n\n\nfunction getPrecisionSafe(val) {\n  var str = val.toString(); // Consider scientific notation: '3.4e-12' '3.4e+12'\n\n  var eIndex = str.indexOf('e');\n\n  if (eIndex > 0) {\n    var precision = +str.slice(eIndex + 1);\n    return precision < 0 ? -precision : 0;\n  } else {\n    var dotIndex = str.indexOf('.');\n    return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n  }\n}\n/**\n * Minimal dicernible data precisioin according to a single pixel.\n *\n * @param {Array.<number>} dataExtent\n * @param {Array.<number>} pixelExtent\n * @return {number} precision\n */\n\n\nfunction getPixelPrecision(dataExtent, pixelExtent) {\n  var log = Math.log;\n  var LN10 = Math.LN10;\n  var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n  var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10); // toFixed() digits argument must be between 0 and 20.\n\n  var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n  return !isFinite(precision) ? 20 : precision;\n}\n/**\n * Get a data of given precision, assuring the sum of percentages\n * in valueList is 1.\n * The largest remainer method is used.\n * https://en.wikipedia.org/wiki/Largest_remainder_method\n *\n * @param {Array.<number>} valueList a list of all data\n * @param {number} idx index of the data to be processed in valueList\n * @param {number} precision integer number showing digits of precision\n * @return {number} percent ranging from 0 to 100\n */\n\n\nfunction getPercentWithPrecision(valueList, idx, precision) {\n  if (!valueList[idx]) {\n    return 0;\n  }\n\n  var sum = zrUtil.reduce(valueList, function (acc, val) {\n    return acc + (isNaN(val) ? 0 : val);\n  }, 0);\n\n  if (sum === 0) {\n    return 0;\n  }\n\n  var digits = Math.pow(10, precision);\n  var votesPerQuota = zrUtil.map(valueList, function (val) {\n    return (isNaN(val) ? 0 : val) / sum * digits * 100;\n  });\n  var targetSeats = digits * 100;\n  var seats = zrUtil.map(votesPerQuota, function (votes) {\n    // Assign automatic seats.\n    return Math.floor(votes);\n  });\n  var currentSum = zrUtil.reduce(seats, function (acc, val) {\n    return acc + val;\n  }, 0);\n  var remainder = zrUtil.map(votesPerQuota, function (votes, idx) {\n    return votes - seats[idx];\n  }); // Has remainding votes.\n\n  while (currentSum < targetSeats) {\n    // Find next largest remainder.\n    var max = Number.NEGATIVE_INFINITY;\n    var maxId = null;\n\n    for (var i = 0, len = remainder.length; i < len; ++i) {\n      if (remainder[i] > max) {\n        max = remainder[i];\n        maxId = i;\n      }\n    } // Add a vote to max remainder.\n\n\n    ++seats[maxId];\n    remainder[maxId] = 0;\n    ++currentSum;\n  }\n\n  return seats[idx] / digits;\n} // Number.MAX_SAFE_INTEGER, ie do not support.\n\n\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * To 0 - 2 * PI, considering negative radian.\n * @param {number} radian\n * @return {number}\n */\n\nfunction remRadian(radian) {\n  var pi2 = Math.PI * 2;\n  return (radian % pi2 + pi2) % pi2;\n}\n/**\n * @param {type} radian\n * @return {boolean}\n */\n\n\nfunction isRadianAroundZero(val) {\n  return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n}\n\nvar TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n/**\n * @param {string|Date|number} value These values can be accepted:\n *   + An instance of Date, represent a time in its own time zone.\n *   + Or string in a subset of ISO 8601, only including:\n *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n *     all of which will be treated as local time if time zone is not specified\n *     (see <https://momentjs.com/>).\n *   + Or other string format, including (all of which will be treated as loacal time):\n *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n *   + a timestamp, which represent a time in UTC.\n * @return {Date} date\n */\n\nfunction parseDate(value) {\n  if (value instanceof Date) {\n    return value;\n  } else if (typeof value === 'string') {\n    // Different browsers parse date in different way, so we parse it manually.\n    // Some other issues:\n    // new Date('1970-01-01') is UTC,\n    // new Date('1970/01/01') and new Date('1970-1-01') is local.\n    // See issue #3623\n    var match = TIME_REG.exec(value);\n\n    if (!match) {\n      // return Invalid Date.\n      return new Date(NaN);\n    } // Use local time when no timezone offset specifed.\n\n\n    if (!match[8]) {\n      // match[n] can only be string or undefined.\n      // But take care of '12' + 1 => '121'.\n      return new Date(+match[1], +(match[2] || 1) - 1, +match[3] || 1, +match[4] || 0, +(match[5] || 0), +match[6] || 0, +match[7] || 0);\n    } // Timezoneoffset of Javascript Date has considered DST (Daylight Saving Time,\n    // https://tc39.github.io/ecma262/#sec-daylight-saving-time-adjustment).\n    // For example, system timezone is set as \"Time Zone: America/Toronto\",\n    // then these code will get different result:\n    // `new Date(1478411999999).getTimezoneOffset();  // get 240`\n    // `new Date(1478412000000).getTimezoneOffset();  // get 300`\n    // So we should not use `new Date`, but use `Date.UTC`.\n    else {\n        var hour = +match[4] || 0;\n\n        if (match[8].toUpperCase() !== 'Z') {\n          hour -= match[8].slice(0, 3);\n        }\n\n        return new Date(Date.UTC(+match[1], +(match[2] || 1) - 1, +match[3] || 1, hour, +(match[5] || 0), +match[6] || 0, +match[7] || 0));\n      }\n  } else if (value == null) {\n    return new Date(NaN);\n  }\n\n  return new Date(Math.round(value));\n}\n/**\n * Quantity of a number. e.g. 0.1, 1, 10, 100\n *\n * @param  {number} val\n * @return {number}\n */\n\n\nfunction quantity(val) {\n  return Math.pow(10, quantityExponent(val));\n}\n\nfunction quantityExponent(val) {\n  return Math.floor(Math.log(val) / Math.LN10);\n}\n/**\n * find a “nice” number approximately equal to x. Round the number if round = true,\n * take ceiling if round = false. The primary observation is that the “nicest”\n * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n *\n * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n *\n * @param  {number} val Non-negative value.\n * @param  {boolean} round\n * @return {number}\n */\n\n\nfunction nice(val, round) {\n  var exponent = quantityExponent(val);\n  var exp10 = Math.pow(10, exponent);\n  var f = val / exp10; // 1 <= f < 10\n\n  var nf;\n\n  if (round) {\n    if (f < 1.5) {\n      nf = 1;\n    } else if (f < 2.5) {\n      nf = 2;\n    } else if (f < 4) {\n      nf = 3;\n    } else if (f < 7) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  } else {\n    if (f < 1) {\n      nf = 1;\n    } else if (f < 2) {\n      nf = 2;\n    } else if (f < 3) {\n      nf = 3;\n    } else if (f < 5) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  }\n\n  val = nf * exp10; // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n  // 20 is the uppper bound of toFixed.\n\n  return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n}\n/**\n * Order intervals asc, and split them when overlap.\n * expect(numberUtil.reformIntervals([\n *     {interval: [18, 62], close: [1, 1]},\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [1, 1]},\n *     {interval: [62, 150], close: [1, 1]},\n *     {interval: [106, 150], close: [1, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ])).toEqual([\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [0, 1]},\n *     {interval: [18, 62], close: [0, 1]},\n *     {interval: [62, 150], close: [0, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ]);\n * @param {Array.<Object>} list, where `close` mean open or close\n *        of the interval, and Infinity can be used.\n * @return {Array.<Object>} The origin list, which has been reformed.\n */\n\n\nfunction reformIntervals(list) {\n  list.sort(function (a, b) {\n    return littleThan(a, b, 0) ? -1 : 1;\n  });\n  var curr = -Infinity;\n  var currClose = 1;\n\n  for (var i = 0; i < list.length;) {\n    var interval = list[i].interval;\n    var close = list[i].close;\n\n    for (var lg = 0; lg < 2; lg++) {\n      if (interval[lg] <= curr) {\n        interval[lg] = curr;\n        close[lg] = !lg ? 1 - currClose : 1;\n      }\n\n      curr = interval[lg];\n      currClose = close[lg];\n    }\n\n    if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n      list.splice(i, 1);\n    } else {\n      i++;\n    }\n  }\n\n  return list;\n\n  function littleThan(a, b, lg) {\n    return a.interval[lg] < b.interval[lg] || a.interval[lg] === b.interval[lg] && (a.close[lg] - b.close[lg] === (!lg ? 1 : -1) || !lg && littleThan(a, b, 1));\n  }\n}\n/**\n * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n * subtraction forces infinities to NaN\n *\n * @param {*} v\n * @return {boolean}\n */\n\n\nfunction isNumeric(v) {\n  return v - parseFloat(v) >= 0;\n}\n\nexports.linearMap = linearMap;\nexports.parsePercent = parsePercent;\nexports.round = round;\nexports.asc = asc;\nexports.getPrecision = getPrecision;\nexports.getPrecisionSafe = getPrecisionSafe;\nexports.getPixelPrecision = getPixelPrecision;\nexports.getPercentWithPrecision = getPercentWithPrecision;\nexports.MAX_SAFE_INTEGER = MAX_SAFE_INTEGER;\nexports.remRadian = remRadian;\nexports.isRadianAroundZero = isRadianAroundZero;\nexports.parseDate = parseDate;\nexports.quantity = quantity;\nexports.nice = nice;\nexports.reformIntervals = reformIntervals;\nexports.isNumeric = isNumeric;","var _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\nvar _format = require(\"../../util/format\");\n\nvar getTooltipMarker = _format.getTooltipMarker;\nvar formatTpl = _format.formatTpl;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar DIMENSION_LABEL_REG = /\\{@(.+?)\\}/g; // PENDING A little ugly\n\nvar _default = {\n  /**\n   * Get params for formatter\n   * @param {number} dataIndex\n   * @param {string} [dataType]\n   * @return {Object}\n   */\n  getDataParams: function (dataIndex, dataType) {\n    var data = this.getData(dataType);\n    var rawValue = this.getRawValue(dataIndex, dataType);\n    var rawDataIndex = data.getRawIndex(dataIndex);\n    var name = data.getName(dataIndex);\n    var itemOpt = data.getRawDataItem(dataIndex);\n    var color = data.getItemVisual(dataIndex, 'color');\n    return {\n      componentType: this.mainType,\n      componentSubType: this.subType,\n      seriesType: this.mainType === 'series' ? this.subType : null,\n      seriesIndex: this.seriesIndex,\n      seriesId: this.id,\n      seriesName: this.name,\n      name: name,\n      dataIndex: rawDataIndex,\n      data: itemOpt,\n      dataType: dataType,\n      value: rawValue,\n      color: color,\n      marker: getTooltipMarker(color),\n      // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n      $vars: ['seriesName', 'name', 'value']\n    };\n  },\n\n  /**\n   * Format label\n   * @param {number} dataIndex\n   * @param {string} [status='normal'] 'normal' or 'emphasis'\n   * @param {string} [dataType]\n   * @param {number} [dimIndex]\n   * @param {string} [labelProp='label']\n   * @return {string} If not formatter, return null/undefined\n   */\n  getFormattedLabel: function (dataIndex, status, dataType, dimIndex, labelProp) {\n    status = status || 'normal';\n    var data = this.getData(dataType);\n    var itemModel = data.getItemModel(dataIndex);\n    var params = this.getDataParams(dataIndex, dataType);\n\n    if (dimIndex != null && params.value instanceof Array) {\n      params.value = params.value[dimIndex];\n    }\n\n    var formatter = itemModel.get(status === 'normal' ? [labelProp || 'label', 'formatter'] : [status, labelProp || 'label', 'formatter']);\n\n    if (typeof formatter === 'function') {\n      params.status = status;\n      return formatter(params);\n    } else if (typeof formatter === 'string') {\n      var str = formatTpl(formatter, params); // Support 'aaa{@[3]}bbb{@product}ccc'.\n      // Do not support '}' in dim name util have to.\n\n      return str.replace(DIMENSION_LABEL_REG, function (origin, dim) {\n        var len = dim.length;\n\n        if (dim.charAt(0) === '[' && dim.charAt(len - 1) === ']') {\n          dim = +dim.slice(1, len - 1); // Also: '[]' => 0\n        }\n\n        return retrieveRawValue(data, dataIndex, dim);\n      });\n    }\n  },\n\n  /**\n   * Get raw value in option\n   * @param {number} idx\n   * @param {string} [dataType]\n   * @return {Array|number|string}\n   */\n  getRawValue: function (idx, dataType) {\n    return retrieveRawValue(this.getData(dataType), idx);\n  },\n\n  /**\n   * Should be implemented.\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   * @return {string} tooltip string\n   */\n  formatTooltip: function () {// Empty function\n  }\n};\nmodule.exports = _default;","var makeStyleMapper = require(\"./makeStyleMapper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar getLineStyle = makeStyleMapper([['lineWidth', 'width'], ['stroke', 'color'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\nvar _default = {\n  getLineStyle: function (excludes) {\n    var style = getLineStyle(this, excludes);\n    var lineDash = this.getLineDash(style.lineWidth);\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getLineDash: function (lineWidth) {\n    if (lineWidth == null) {\n      lineWidth = 1;\n    }\n\n    var lineType = this.get('type');\n    var dotSize = Math.max(lineWidth, 2);\n    var dashSize = lineWidth * 4;\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize];\n  }\n};\nmodule.exports = _default;","var _util = require(\"../core/util\");\n\nvar inherits = _util.inherits;\n\nvar Displayble = require(\"./Displayable\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\n/**\n * Displayable for incremental rendering. It will be rendered in a separate layer\n * IncrementalDisplay have too main methods. `clearDisplayables` and `addDisplayables`\n * addDisplayables will render the added displayables incremetally.\n *\n * It use a not clearFlag to tell the painter don't clear the layer if it's the first element.\n */\n// TODO Style override ?\nfunction IncrementalDisplayble(opts) {\n  Displayble.call(this, opts);\n  this._displayables = [];\n  this._temporaryDisplayables = [];\n  this._cursor = 0;\n  this.notClear = true;\n}\n\nIncrementalDisplayble.prototype.incremental = true;\n\nIncrementalDisplayble.prototype.clearDisplaybles = function () {\n  this._displayables = [];\n  this._temporaryDisplayables = [];\n  this._cursor = 0;\n  this.dirty();\n  this.notClear = false;\n};\n\nIncrementalDisplayble.prototype.addDisplayable = function (displayable, notPersistent) {\n  if (notPersistent) {\n    this._temporaryDisplayables.push(displayable);\n  } else {\n    this._displayables.push(displayable);\n  }\n\n  this.dirty();\n};\n\nIncrementalDisplayble.prototype.addDisplayables = function (displayables, notPersistent) {\n  notPersistent = notPersistent || false;\n\n  for (var i = 0; i < displayables.length; i++) {\n    this.addDisplayable(displayables[i], notPersistent);\n  }\n};\n\nIncrementalDisplayble.prototype.eachPendingDisplayable = function (cb) {\n  for (var i = this._cursor; i < this._displayables.length; i++) {\n    cb && cb(this._displayables[i]);\n  }\n\n  for (var i = 0; i < this._temporaryDisplayables.length; i++) {\n    cb && cb(this._temporaryDisplayables[i]);\n  }\n};\n\nIncrementalDisplayble.prototype.update = function () {\n  this.updateTransform();\n\n  for (var i = this._cursor; i < this._displayables.length; i++) {\n    var displayable = this._displayables[i]; // PENDING\n\n    displayable.parent = this;\n    displayable.update();\n    displayable.parent = null;\n  }\n\n  for (var i = 0; i < this._temporaryDisplayables.length; i++) {\n    var displayable = this._temporaryDisplayables[i]; // PENDING\n\n    displayable.parent = this;\n    displayable.update();\n    displayable.parent = null;\n  }\n};\n\nIncrementalDisplayble.prototype.brush = function (ctx, prevEl) {\n  // Render persistant displayables.\n  for (var i = this._cursor; i < this._displayables.length; i++) {\n    var displayable = this._displayables[i];\n    displayable.beforeBrush && displayable.beforeBrush(ctx);\n    displayable.brush(ctx, i === this._cursor ? null : this._displayables[i - 1]);\n    displayable.afterBrush && displayable.afterBrush(ctx);\n  }\n\n  this._cursor = i; // Render temporary displayables.\n\n  for (var i = 0; i < this._temporaryDisplayables.length; i++) {\n    var displayable = this._temporaryDisplayables[i];\n    displayable.beforeBrush && displayable.beforeBrush(ctx);\n    displayable.brush(ctx, i === 0 ? null : this._temporaryDisplayables[i - 1]);\n    displayable.afterBrush && displayable.afterBrush(ctx);\n  }\n\n  this._temporaryDisplayables = [];\n  this.notClear = true;\n};\n\nvar m = [];\n\nIncrementalDisplayble.prototype.getBoundingRect = function () {\n  if (!this._rect) {\n    var rect = new BoundingRect(Infinity, Infinity, -Infinity, -Infinity);\n\n    for (var i = 0; i < this._displayables.length; i++) {\n      var displayable = this._displayables[i];\n      var childRect = displayable.getBoundingRect().clone();\n\n      if (displayable.needLocalTransform()) {\n        childRect.applyTransform(displayable.getLocalTransform(m));\n      }\n\n      rect.union(childRect);\n    }\n\n    this._rect = rect;\n  }\n\n  return this._rect;\n};\n\nIncrementalDisplayble.prototype.contain = function (x, y) {\n  var localPos = this.transformCoordToLocal(x, y);\n  var rect = this.getBoundingRect();\n\n  if (rect.contain(localPos[0], localPos[1])) {\n    for (var i = 0; i < this._displayables.length; i++) {\n      var displayable = this._displayables[i];\n\n      if (displayable.contain(x, y)) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n\ninherits(IncrementalDisplayble, Displayble);\nvar _default = IncrementalDisplayble;\nmodule.exports = _default;","var _config = require(\"./config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrender = require(\"zrender/lib/zrender\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar timsort = require(\"zrender/lib/core/timsort\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar GlobalModel = require(\"./model/Global\");\n\nvar ExtensionAPI = require(\"./ExtensionAPI\");\n\nvar CoordinateSystemManager = require(\"./CoordinateSystem\");\n\nvar OptionManager = require(\"./model/OptionManager\");\n\nvar backwardCompat = require(\"./preprocessor/backwardCompat\");\n\nvar dataStack = require(\"./processor/dataStack\");\n\nvar ComponentModel = require(\"./model/Component\");\n\nvar SeriesModel = require(\"./model/Series\");\n\nvar ComponentView = require(\"./view/Component\");\n\nvar ChartView = require(\"./view/Chart\");\n\nvar graphic = require(\"./util/graphic\");\n\nvar modelUtil = require(\"./util/model\");\n\nvar _throttle = require(\"./util/throttle\");\n\nvar throttle = _throttle.throttle;\n\nvar seriesColor = require(\"./visual/seriesColor\");\n\nvar aria = require(\"./visual/aria\");\n\nvar loadingDefault = require(\"./loading/default\");\n\nvar Scheduler = require(\"./stream/Scheduler\");\n\nvar lightTheme = require(\"./theme/light\");\n\nvar darkTheme = require(\"./theme/dark\");\n\nrequire(\"./component/dataset\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar assert = zrUtil.assert;\nvar each = zrUtil.each;\nvar isFunction = zrUtil.isFunction;\nvar isObject = zrUtil.isObject;\nvar parseClassType = ComponentModel.parseClassType;\nvar version = '4.1.0';\nvar dependencies = {\n  zrender: '4.0.4'\n};\nvar TEST_FRAME_REMAIN_TIME = 1;\nvar PRIORITY_PROCESSOR_FILTER = 1000;\nvar PRIORITY_PROCESSOR_STATISTIC = 5000;\nvar PRIORITY_VISUAL_LAYOUT = 1000;\nvar PRIORITY_VISUAL_GLOBAL = 2000;\nvar PRIORITY_VISUAL_CHART = 3000;\nvar PRIORITY_VISUAL_COMPONENT = 4000; // FIXME\n// necessary?\n\nvar PRIORITY_VISUAL_BRUSH = 5000;\nvar PRIORITY = {\n  PROCESSOR: {\n    FILTER: PRIORITY_PROCESSOR_FILTER,\n    STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n  },\n  VISUAL: {\n    LAYOUT: PRIORITY_VISUAL_LAYOUT,\n    GLOBAL: PRIORITY_VISUAL_GLOBAL,\n    CHART: PRIORITY_VISUAL_CHART,\n    COMPONENT: PRIORITY_VISUAL_COMPONENT,\n    BRUSH: PRIORITY_VISUAL_BRUSH\n  }\n}; // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n// where they must not be invoked nestedly, except the only case: invoke\n// dispatchAction with updateMethod \"none\" in main process.\n// This flag is used to carry out this rule.\n// All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n\nvar IN_MAIN_PROCESS = '__flagInMainProcess';\nvar OPTION_UPDATED = '__optionUpdated';\nvar ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\nfunction createRegisterEventWithLowercaseName(method) {\n  return function (eventName, handler, context) {\n    // Event name is all lowercase\n    eventName = eventName && eventName.toLowerCase();\n    Eventful.prototype[method].call(this, eventName, handler, context);\n  };\n}\n/**\n * @module echarts~MessageCenter\n */\n\n\nfunction MessageCenter() {\n  Eventful.call(this);\n}\n\nMessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\nMessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\nMessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\nzrUtil.mixin(MessageCenter, Eventful);\n/**\n * @module echarts~ECharts\n */\n\nfunction ECharts(dom, theme, opts) {\n  opts = opts || {}; // Get theme by name\n\n  if (typeof theme === 'string') {\n    theme = themeStorage[theme];\n  }\n  /**\n   * @type {string}\n   */\n\n\n  this.id;\n  /**\n   * Group id\n   * @type {string}\n   */\n\n  this.group;\n  /**\n   * @type {HTMLElement}\n   * @private\n   */\n\n  this._dom = dom;\n  var defaultRenderer = 'canvas';\n\n  /**\n   * @type {module:zrender/ZRender}\n   * @private\n   */\n  var zr = this._zr = zrender.init(dom, {\n    renderer: opts.renderer || defaultRenderer,\n    devicePixelRatio: opts.devicePixelRatio,\n    width: opts.width,\n    height: opts.height\n  });\n  /**\n   * Expect 60 pfs.\n   * @type {Function}\n   * @private\n   */\n\n  this._throttledZrFlush = throttle(zrUtil.bind(zr.flush, zr), 17);\n  var theme = zrUtil.clone(theme);\n  theme && backwardCompat(theme, true);\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._theme = theme;\n  /**\n   * @type {Array.<module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsMap = {};\n  /**\n   * @type {Array.<module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsMap = {};\n  /**\n   * @type {module:echarts/CoordinateSystem}\n   * @private\n   */\n\n  this._coordSysMgr = new CoordinateSystemManager();\n  /**\n   * @type {module:echarts/ExtensionAPI}\n   * @private\n   */\n\n  var api = this._api = createExtensionAPI(this); // Sort on demand\n\n  function prioritySortFunc(a, b) {\n    return a.__prio - b.__prio;\n  }\n\n  timsort(visualFuncs, prioritySortFunc);\n  timsort(dataProcessorFuncs, prioritySortFunc);\n  /**\n   * @type {module:echarts/stream/Scheduler}\n   */\n\n  this._scheduler = new Scheduler(this, api, dataProcessorFuncs, visualFuncs);\n  Eventful.call(this);\n  /**\n   * @type {module:echarts~MessageCenter}\n   * @private\n   */\n\n  this._messageCenter = new MessageCenter(); // Init mouse events\n\n  this._initEvents(); // In case some people write `window.onresize = chart.resize`\n\n\n  this.resize = zrUtil.bind(this.resize, this); // Can't dispatch action during rendering procedure\n\n  this._pendingActions = [];\n  zr.animation.on('frame', this._onframe, this);\n  bindRenderedEvent(zr, this); // ECharts instance can be used as value.\n\n  zrUtil.setAsPrimitive(this);\n}\n\nvar echartsProto = ECharts.prototype;\n\nechartsProto._onframe = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  var scheduler = this._scheduler; // Lazy update\n\n  if (this[OPTION_UPDATED]) {\n    var silent = this[OPTION_UPDATED].silent;\n    this[IN_MAIN_PROCESS] = true;\n    prepare(this);\n    updateMethods.update.call(this);\n    this[IN_MAIN_PROCESS] = false;\n    this[OPTION_UPDATED] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  } // Avoid do both lazy update and progress in one frame.\n  else if (scheduler.unfinished) {\n      // Stream progress.\n      var remainTime = TEST_FRAME_REMAIN_TIME;\n      var ecModel = this._model;\n      var api = this._api;\n      scheduler.unfinished = false;\n\n      do {\n        var startTime = +new Date();\n        scheduler.performSeriesTasks(ecModel); // Currently dataProcessorFuncs do not check threshold.\n\n        scheduler.performDataProcessorTasks(ecModel);\n        updateStreamModes(this, ecModel); // Do not update coordinate system here. Because that coord system update in\n        // each frame is not a good user experience. So we follow the rule that\n        // the extent of the coordinate system is determin in the first frame (the\n        // frame is executed immedietely after task reset.\n        // this._coordSysMgr.update(ecModel, api);\n        // console.log('--- ec frame visual ---', remainTime);\n\n        scheduler.performVisualTasks(ecModel);\n        renderSeries(this, this._model, api, 'remain');\n        remainTime -= +new Date() - startTime;\n      } while (remainTime > 0 && scheduler.unfinished); // Call flush explicitly for trigger finished event.\n\n\n      if (!scheduler.unfinished) {\n        this._zr.flush();\n      } // Else, zr flushing be ensue within the same frame,\n      // because zr flushing is after onframe event.\n\n    }\n};\n/**\n * @return {HTMLElement}\n */\n\n\nechartsProto.getDom = function () {\n  return this._dom;\n};\n/**\n * @return {module:zrender~ZRender}\n */\n\n\nechartsProto.getZr = function () {\n  return this._zr;\n};\n/**\n * Usage:\n * chart.setOption(option, notMerge, lazyUpdate);\n * chart.setOption(option, {\n *     notMerge: ...,\n *     lazyUpdate: ...,\n *     silent: ...\n * });\n *\n * @param {Object} option\n * @param {Object|boolean} [opts] opts or notMerge.\n * @param {boolean} [opts.notMerge=false]\n * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n */\n\n\nechartsProto.setOption = function (option, notMerge, lazyUpdate) {\n  var silent;\n\n  if (isObject(notMerge)) {\n    lazyUpdate = notMerge.lazyUpdate;\n    silent = notMerge.silent;\n    notMerge = notMerge.notMerge;\n  }\n\n  this[IN_MAIN_PROCESS] = true;\n\n  if (!this._model || notMerge) {\n    var optionManager = new OptionManager(this._api);\n    var theme = this._theme;\n    var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n    ecModel.scheduler = this._scheduler;\n    ecModel.init(null, null, theme, optionManager);\n  }\n\n  this._model.setOption(option, optionPreprocessorFuncs);\n\n  if (lazyUpdate) {\n    this[OPTION_UPDATED] = {\n      silent: silent\n    };\n    this[IN_MAIN_PROCESS] = false;\n  } else {\n    prepare(this);\n    updateMethods.update.call(this); // Ensure zr refresh sychronously, and then pixel in canvas can be\n    // fetched after `setOption`.\n\n    this._zr.flush();\n\n    this[OPTION_UPDATED] = false;\n    this[IN_MAIN_PROCESS] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @DEPRECATED\n */\n\n\nechartsProto.setTheme = function () {\n  console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n};\n/**\n * @return {module:echarts/model/Global}\n */\n\n\nechartsProto.getModel = function () {\n  return this._model;\n};\n/**\n * @return {Object}\n */\n\n\nechartsProto.getOption = function () {\n  return this._model && this._model.getOption();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getWidth = function () {\n  return this._zr.getWidth();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getHeight = function () {\n  return this._zr.getHeight();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getDevicePixelRatio = function () {\n  return this._zr.painter.dpr || window.devicePixelRatio || 1;\n};\n/**\n * Get canvas which has all thing rendered\n * @param {Object} opts\n * @param {string} [opts.backgroundColor]\n * @return {string}\n */\n\n\nechartsProto.getRenderedCanvas = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  opts = opts || {};\n  opts.pixelRatio = opts.pixelRatio || 1;\n  opts.backgroundColor = opts.backgroundColor || this._model.get('backgroundColor');\n  var zr = this._zr; // var list = zr.storage.getDisplayList();\n  // Stop animations\n  // Never works before in init animation, so remove it.\n  // zrUtil.each(list, function (el) {\n  //     el.stopAnimation(true);\n  // });\n\n  return zr.painter.getRenderedCanvas(opts);\n};\n/**\n * Get svg data url\n * @return {string}\n */\n\n\nechartsProto.getSvgDataUrl = function () {\n  if (!env.svgSupported) {\n    return;\n  }\n\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.pathToDataUrl();\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n * @param {string} [opts.excludeComponents]\n */\n\n\nechartsProto.getDataURL = function (opts) {\n  opts = opts || {};\n  var excludeComponents = opts.excludeComponents;\n  var ecModel = this._model;\n  var excludesComponentViews = [];\n  var self = this;\n  each(excludeComponents, function (componentType) {\n    ecModel.eachComponent({\n      mainType: componentType\n    }, function (component) {\n      var view = self._componentsMap[component.__viewId];\n\n      if (!view.group.ignore) {\n        excludesComponentViews.push(view);\n        view.group.ignore = true;\n      }\n    });\n  });\n  var url = this._zr.painter.getType() === 'svg' ? this.getSvgDataUrl() : this.getRenderedCanvas(opts).toDataURL('image/' + (opts && opts.type || 'png'));\n  each(excludesComponentViews, function (view) {\n    view.group.ignore = false;\n  });\n  return url;\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n */\n\n\nechartsProto.getConnectedDataURL = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  var groupId = this.group;\n  var mathMin = Math.min;\n  var mathMax = Math.max;\n  var MAX_NUMBER = Infinity;\n\n  if (connectedGroups[groupId]) {\n    var left = MAX_NUMBER;\n    var top = MAX_NUMBER;\n    var right = -MAX_NUMBER;\n    var bottom = -MAX_NUMBER;\n    var canvasList = [];\n    var dpr = opts && opts.pixelRatio || 1;\n    zrUtil.each(instances, function (chart, id) {\n      if (chart.group === groupId) {\n        var canvas = chart.getRenderedCanvas(zrUtil.clone(opts));\n        var boundingRect = chart.getDom().getBoundingClientRect();\n        left = mathMin(boundingRect.left, left);\n        top = mathMin(boundingRect.top, top);\n        right = mathMax(boundingRect.right, right);\n        bottom = mathMax(boundingRect.bottom, bottom);\n        canvasList.push({\n          dom: canvas,\n          left: boundingRect.left,\n          top: boundingRect.top\n        });\n      }\n    });\n    left *= dpr;\n    top *= dpr;\n    right *= dpr;\n    bottom *= dpr;\n    var width = right - left;\n    var height = bottom - top;\n    var targetCanvas = zrUtil.createCanvas();\n    targetCanvas.width = width;\n    targetCanvas.height = height;\n    var zr = zrender.init(targetCanvas);\n    each(canvasList, function (item) {\n      var img = new graphic.Image({\n        style: {\n          x: item.left * dpr - left,\n          y: item.top * dpr - top,\n          image: item.dom\n        }\n      });\n      zr.add(img);\n    });\n    zr.refreshImmediately();\n    return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n  } else {\n    return this.getDataURL(opts);\n  }\n};\n/**\n * Convert from logical coordinate system to pixel coordinate system.\n * See CoordinateSystem#convertToPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId, geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\n\nechartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n/**\n * Convert from pixel coordinate system to logical coordinate system.\n * See CoordinateSystem#convertFromPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\nechartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\nfunction doConvertPixel(methodName, finder, value) {\n  var ecModel = this._model;\n\n  var coordSysList = this._coordSysMgr.getCoordinateSystems();\n\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n\n  for (var i = 0; i < coordSysList.length; i++) {\n    var coordSys = coordSysList[i];\n\n    if (coordSys[methodName] && (result = coordSys[methodName](ecModel, finder, value)) != null) {\n      return result;\n    }\n  }\n}\n/**\n * Is the specified coordinate systems or components contain the given pixel point.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {boolean} result\n */\n\n\nechartsProto.containPixel = function (finder, value) {\n  var ecModel = this._model;\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n  zrUtil.each(finder, function (models, key) {\n    key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n      var coordSys = model.coordinateSystem;\n\n      if (coordSys && coordSys.containPoint) {\n        result |= !!coordSys.containPoint(value);\n      } else if (key === 'seriesModels') {\n        var view = this._chartsMap[model.__viewId];\n\n        if (view && view.containPoint) {\n          result |= view.containPoint(value, model);\n        } else {}\n      } else {}\n    }, this);\n  }, this);\n  return !!result;\n};\n/**\n * Get visual from series or data.\n * @param {string|Object} finder\n *        If string, e.g., 'series', means {seriesIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            dataIndex / dataIndexInside\n *        }\n *        If dataIndex is not specified, series visual will be fetched,\n *        but not data item visual.\n *        If all of seriesIndex, seriesId, seriesName are not specified,\n *        visual will be fetched from first series.\n * @param {string} visualType 'color', 'symbol', 'symbolSize'\n */\n\n\nechartsProto.getVisual = function (finder, visualType) {\n  var ecModel = this._model;\n  finder = modelUtil.parseFinder(ecModel, finder, {\n    defaultMainType: 'series'\n  });\n  var seriesModel = finder.seriesModel;\n  var data = seriesModel.getData();\n  var dataIndexInside = finder.hasOwnProperty('dataIndexInside') ? finder.dataIndexInside : finder.hasOwnProperty('dataIndex') ? data.indexOfRawIndex(finder.dataIndex) : null;\n  return dataIndexInside != null ? data.getItemVisual(dataIndexInside, visualType) : data.getVisual(visualType);\n};\n/**\n * Get view of corresponding component model\n * @param  {module:echarts/model/Component} componentModel\n * @return {module:echarts/view/Component}\n */\n\n\nechartsProto.getViewOfComponentModel = function (componentModel) {\n  return this._componentsMap[componentModel.__viewId];\n};\n/**\n * Get view of corresponding series model\n * @param  {module:echarts/model/Series} seriesModel\n * @return {module:echarts/view/Chart}\n */\n\n\nechartsProto.getViewOfSeriesModel = function (seriesModel) {\n  return this._chartsMap[seriesModel.__viewId];\n};\n\nvar updateMethods = {\n  prepareAndUpdate: function (payload) {\n    prepare(this);\n    updateMethods.update.call(this, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  update: function (payload) {\n    // console.profile && console.profile('update');\n    var ecModel = this._model;\n    var api = this._api;\n    var zr = this._zr;\n    var coordSysMgr = this._coordSysMgr;\n    var scheduler = this._scheduler; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    scheduler.restoreData(ecModel, payload);\n    scheduler.performSeriesTasks(ecModel); // TODO\n    // Save total ecModel here for undo/redo (after restoring data and before processing data).\n    // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n    // Create new coordinate system each update\n    // In LineView may save the old coordinate system and use it to get the orignal point\n\n    coordSysMgr.create(ecModel, api);\n    scheduler.performDataProcessorTasks(ecModel, payload); // Current stream render is not supported in data process. So we can update\n    // stream modes after data processing, where the filtered data is used to\n    // deteming whether use progressive rendering.\n\n    updateStreamModes(this, ecModel); // We update stream modes before coordinate system updated, then the modes info\n    // can be fetched when coord sys updating (consider the barGrid extent fix). But\n    // the drawback is the full coord info can not be fetched. Fortunately this full\n    // coord is not requied in stream mode updater currently.\n\n    coordSysMgr.update(ecModel, api);\n    clearColorPalette(ecModel);\n    scheduler.performVisualTasks(ecModel, payload);\n    render(this, ecModel, api, payload); // Set background\n\n    var backgroundColor = ecModel.get('backgroundColor') || 'transparent'; // In IE8\n\n    if (!env.canvasSupported) {\n      var colorArr = colorTool.parse(backgroundColor);\n      backgroundColor = colorTool.stringify(colorArr, 'rgb');\n\n      if (colorArr[3] === 0) {\n        backgroundColor = 'transparent';\n      }\n    } else {\n      zr.setBackgroundColor(backgroundColor);\n    }\n\n    performPostUpdateFuncs(ecModel, api); // console.profile && console.profileEnd('update');\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateTransform: function (payload) {\n    var ecModel = this._model;\n    var ecIns = this;\n    var api = this._api; // update before setOption\n\n    if (!ecModel) {\n      return;\n    } // ChartView.markUpdateMethod(payload, 'updateTransform');\n\n\n    var componentDirtyList = [];\n    ecModel.eachComponent(function (componentType, componentModel) {\n      var componentView = ecIns.getViewOfComponentModel(componentModel);\n\n      if (componentView && componentView.__alive) {\n        if (componentView.updateTransform) {\n          var result = componentView.updateTransform(componentModel, ecModel, api, payload);\n          result && result.update && componentDirtyList.push(componentView);\n        } else {\n          componentDirtyList.push(componentView);\n        }\n      }\n    });\n    var seriesDirtyMap = zrUtil.createHashMap();\n    ecModel.eachSeries(function (seriesModel) {\n      var chartView = ecIns._chartsMap[seriesModel.__viewId];\n\n      if (chartView.updateTransform) {\n        var result = chartView.updateTransform(seriesModel, ecModel, api, payload);\n        result && result.update && seriesDirtyMap.set(seriesModel.uid, 1);\n      } else {\n        seriesDirtyMap.set(seriesModel.uid, 1);\n      }\n    });\n    clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n    // this._scheduler.performVisualTasks(ecModel, payload, 'layout', true);\n\n    this._scheduler.performVisualTasks(ecModel, payload, {\n      setDirty: true,\n      dirtyMap: seriesDirtyMap\n    }); // Currently, not call render of components. Geo render cost a lot.\n    // renderComponents(ecIns, ecModel, api, payload, componentDirtyList);\n\n\n    renderSeries(ecIns, ecModel, api, payload, seriesDirtyMap);\n    performPostUpdateFuncs(ecModel, this._api);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateView: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ChartView.markUpdateMethod(payload, 'updateView');\n    clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n\n    this._scheduler.performVisualTasks(ecModel, payload, {\n      setDirty: true\n    });\n\n    render(this, this._model, this._api, payload);\n    performPostUpdateFuncs(ecModel, this._api);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateVisual: function (payload) {\n    updateMethods.update.call(this, payload); // var ecModel = this._model;\n    // // update before setOption\n    // if (!ecModel) {\n    //     return;\n    // }\n    // ChartView.markUpdateMethod(payload, 'updateVisual');\n    // clearColorPalette(ecModel);\n    // // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n    // this._scheduler.performVisualTasks(ecModel, payload, {visualType: 'visual', setDirty: true});\n    // render(this, this._model, this._api, payload);\n    // performPostUpdateFuncs(ecModel, this._api);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateLayout: function (payload) {\n    updateMethods.update.call(this, payload); // var ecModel = this._model;\n    // // update before setOption\n    // if (!ecModel) {\n    //     return;\n    // }\n    // ChartView.markUpdateMethod(payload, 'updateLayout');\n    // // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n    // // this._scheduler.performVisualTasks(ecModel, payload, 'layout', true);\n    // this._scheduler.performVisualTasks(ecModel, payload, {setDirty: true});\n    // render(this, this._model, this._api, payload);\n    // performPostUpdateFuncs(ecModel, this._api);\n  }\n};\n\nfunction prepare(ecIns) {\n  var ecModel = ecIns._model;\n  var scheduler = ecIns._scheduler;\n  scheduler.restorePipelines(ecModel);\n  scheduler.prepareStageTasks();\n  prepareView(ecIns, 'component', ecModel, scheduler);\n  prepareView(ecIns, 'chart', ecModel, scheduler);\n  scheduler.plan();\n}\n/**\n * @private\n */\n\n\nfunction updateDirectly(ecIns, method, payload, mainType, subType) {\n  var ecModel = ecIns._model; // broadcast\n\n  if (!mainType) {\n    // FIXME\n    // Chart will not be update directly here, except set dirty.\n    // But there is no such scenario now.\n    each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n    return;\n  }\n\n  var query = {};\n  query[mainType + 'Id'] = payload[mainType + 'Id'];\n  query[mainType + 'Index'] = payload[mainType + 'Index'];\n  query[mainType + 'Name'] = payload[mainType + 'Name'];\n  var condition = {\n    mainType: mainType,\n    query: query\n  };\n  subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n  var excludeSeriesId = payload.excludeSeriesId;\n\n  if (excludeSeriesId != null) {\n    excludeSeriesId = zrUtil.createHashMap(modelUtil.normalizeToArray(excludeSeriesId));\n  } // If dispatchAction before setOption, do nothing.\n\n\n  ecModel && ecModel.eachComponent(condition, function (model) {\n    if (!excludeSeriesId || excludeSeriesId.get(model.id) == null) {\n      callView(ecIns[mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId]);\n    }\n  }, ecIns);\n\n  function callView(view) {\n    view && view.__alive && view[method] && view[method](view.__model, ecModel, ecIns._api, payload);\n  }\n}\n/**\n * Resize the chart\n * @param {Object} opts\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n * @param {boolean} [opts.silent=false]\n */\n\n\nechartsProto.resize = function (opts) {\n  this._zr.resize(opts);\n\n  var ecModel = this._model; // Resize loading effect\n\n  this._loadingFX && this._loadingFX.resize();\n\n  if (!ecModel) {\n    return;\n  }\n\n  var optionChanged = ecModel.resetOption('media');\n  var silent = opts && opts.silent;\n  this[IN_MAIN_PROCESS] = true;\n  optionChanged && prepare(this);\n  updateMethods.update.call(this);\n  this[IN_MAIN_PROCESS] = false;\n  flushPendingActions.call(this, silent);\n  triggerUpdatedEvent.call(this, silent);\n};\n\nfunction updateStreamModes(ecIns, ecModel) {\n  var chartsMap = ecIns._chartsMap;\n  var scheduler = ecIns._scheduler;\n  ecModel.eachSeries(function (seriesModel) {\n    scheduler.updateStreamModes(seriesModel, chartsMap[seriesModel.__viewId]);\n  });\n}\n/**\n * Show loading effect\n * @param  {string} [name='default']\n * @param  {Object} [cfg]\n */\n\n\nechartsProto.showLoading = function (name, cfg) {\n  if (isObject(name)) {\n    cfg = name;\n    name = '';\n  }\n\n  name = name || 'default';\n  this.hideLoading();\n\n  if (!loadingEffects[name]) {\n    return;\n  }\n\n  var el = loadingEffects[name](this._api, cfg);\n  var zr = this._zr;\n  this._loadingFX = el;\n  zr.add(el);\n};\n/**\n * Hide loading effect\n */\n\n\nechartsProto.hideLoading = function () {\n  this._loadingFX && this._zr.remove(this._loadingFX);\n  this._loadingFX = null;\n};\n/**\n * @param {Object} eventObj\n * @return {Object}\n */\n\n\nechartsProto.makeActionFromEvent = function (eventObj) {\n  var payload = zrUtil.extend({}, eventObj);\n  payload.type = eventActionMap[eventObj.type];\n  return payload;\n};\n/**\n * @pubilc\n * @param {Object} payload\n * @param {string} [payload.type] Action type\n * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n * @param {boolean} [opt.silent=false] Whether trigger events.\n * @param {boolean} [opt.flush=undefined]\n *                  true: Flush immediately, and then pixel in canvas can be fetched\n *                      immediately. Caution: it might affect performance.\n *                  false: Not not flush.\n *                  undefined: Auto decide whether perform flush.\n */\n\n\nechartsProto.dispatchAction = function (payload, opt) {\n  if (!isObject(opt)) {\n    opt = {\n      silent: !!opt\n    };\n  }\n\n  if (!actions[payload.type]) {\n    return;\n  } // Avoid dispatch action before setOption. Especially in `connect`.\n\n\n  if (!this._model) {\n    return;\n  } // May dispatchAction in rendering procedure\n\n\n  if (this[IN_MAIN_PROCESS]) {\n    this._pendingActions.push(payload);\n\n    return;\n  }\n\n  doDispatchAction.call(this, payload, opt.silent);\n\n  if (opt.flush) {\n    this._zr.flush(true);\n  } else if (opt.flush !== false && env.browser.weChat) {\n    // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n    // hang when sliding page (on touch event), which cause that zr does not\n    // refresh util user interaction finished, which is not expected.\n    // But `dispatchAction` may be called too frequently when pan on touch\n    // screen, which impacts performance if do not throttle them.\n    this._throttledZrFlush();\n  }\n\n  flushPendingActions.call(this, opt.silent);\n  triggerUpdatedEvent.call(this, opt.silent);\n};\n\nfunction doDispatchAction(payload, silent) {\n  var payloadType = payload.type;\n  var escapeConnect = payload.escapeConnect;\n  var actionWrap = actions[payloadType];\n  var actionInfo = actionWrap.actionInfo;\n  var cptType = (actionInfo.update || 'update').split(':');\n  var updateMethod = cptType.pop();\n  cptType = cptType[0] != null && parseClassType(cptType[0]);\n  this[IN_MAIN_PROCESS] = true;\n  var payloads = [payload];\n  var batched = false; // Batch action\n\n  if (payload.batch) {\n    batched = true;\n    payloads = zrUtil.map(payload.batch, function (item) {\n      item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n      item.batch = null;\n      return item;\n    });\n  }\n\n  var eventObjBatch = [];\n  var eventObj;\n  var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n  each(payloads, function (batchItem) {\n    // Action can specify the event by return it.\n    eventObj = actionWrap.action(batchItem, this._model, this._api); // Emit event outside\n\n    eventObj = eventObj || zrUtil.extend({}, batchItem); // Convert type to eventType\n\n    eventObj.type = actionInfo.event || eventObj.type;\n    eventObjBatch.push(eventObj); // light update does not perform data process, layout and visual.\n\n    if (isHighDown) {\n      // method, payload, mainType, subType\n      updateDirectly(this, updateMethod, batchItem, 'series');\n    } else if (cptType) {\n      updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n    }\n  }, this);\n\n  if (updateMethod !== 'none' && !isHighDown && !cptType) {\n    // Still dirty\n    if (this[OPTION_UPDATED]) {\n      // FIXME Pass payload ?\n      prepare(this);\n      updateMethods.update.call(this, payload);\n      this[OPTION_UPDATED] = false;\n    } else {\n      updateMethods[updateMethod].call(this, payload);\n    }\n  } // Follow the rule of action batch\n\n\n  if (batched) {\n    eventObj = {\n      type: actionInfo.event || payloadType,\n      escapeConnect: escapeConnect,\n      batch: eventObjBatch\n    };\n  } else {\n    eventObj = eventObjBatch[0];\n  }\n\n  this[IN_MAIN_PROCESS] = false;\n  !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n}\n\nfunction flushPendingActions(silent) {\n  var pendingActions = this._pendingActions;\n\n  while (pendingActions.length) {\n    var payload = pendingActions.shift();\n    doDispatchAction.call(this, payload, silent);\n  }\n}\n\nfunction triggerUpdatedEvent(silent) {\n  !silent && this.trigger('updated');\n}\n/**\n * Event `rendered` is triggered when zr\n * rendered. It is useful for realtime\n * snapshot (reflect animation).\n *\n * Event `finished` is triggered when:\n * (1) zrender rendering finished.\n * (2) initial animation finished.\n * (3) progressive rendering finished.\n * (4) no pending action.\n * (5) no delayed setOption needs to be processed.\n */\n\n\nfunction bindRenderedEvent(zr, ecIns) {\n  zr.on('rendered', function () {\n    ecIns.trigger('rendered'); // The `finished` event should not be triggered repeatly,\n    // so it should only be triggered when rendering indeed happend\n    // in zrender. (Consider the case that dipatchAction is keep\n    // triggering when mouse move).\n\n    if ( // Although zr is dirty if initial animation is not finished\n    // and this checking is called on frame, we also check\n    // animation finished for robustness.\n    zr.animation.isFinished() && !ecIns[OPTION_UPDATED] && !ecIns._scheduler.unfinished && !ecIns._pendingActions.length) {\n      ecIns.trigger('finished');\n    }\n  });\n}\n/**\n * @param {Object} params\n * @param {number} params.seriesIndex\n * @param {Array|TypedArray} params.data\n */\n\n\nechartsProto.appendData = function (params) {\n  var seriesIndex = params.seriesIndex;\n  var ecModel = this.getModel();\n  var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n  seriesModel.appendData(params); // Note: `appendData` does not support that update extent of coordinate\n  // system, util some scenario require that. In the expected usage of\n  // `appendData`, the initial extent of coordinate system should better\n  // be fixed by axis `min`/`max` setting or initial data, otherwise if\n  // the extent changed while `appendData`, the location of the painted\n  // graphic elements have to be changed, which make the usage of\n  // `appendData` meaningless.\n\n  this._scheduler.unfinished = true;\n};\n/**\n * Register event\n * @method\n */\n\n\nechartsProto.on = createRegisterEventWithLowercaseName('on');\nechartsProto.off = createRegisterEventWithLowercaseName('off');\nechartsProto.one = createRegisterEventWithLowercaseName('one');\n/**\n * Prepare view instances of charts and components\n * @param  {module:echarts/model/Global} ecModel\n * @private\n */\n\nfunction prepareView(ecIns, type, ecModel, scheduler) {\n  var isComponent = type === 'component';\n  var viewList = isComponent ? ecIns._componentsViews : ecIns._chartsViews;\n  var viewMap = isComponent ? ecIns._componentsMap : ecIns._chartsMap;\n  var zr = ecIns._zr;\n  var api = ecIns._api;\n\n  for (var i = 0; i < viewList.length; i++) {\n    viewList[i].__alive = false;\n  }\n\n  isComponent ? ecModel.eachComponent(function (componentType, model) {\n    componentType !== 'series' && doPrepare(model);\n  }) : ecModel.eachSeries(doPrepare);\n\n  function doPrepare(model) {\n    // Consider: id same and type changed.\n    var viewId = '_ec_' + model.id + '_' + model.type;\n    var view = viewMap[viewId];\n\n    if (!view) {\n      var classType = parseClassType(model.type);\n      var Clazz = isComponent ? ComponentView.getClass(classType.main, classType.sub) : ChartView.getClass(classType.sub);\n      view = new Clazz();\n      view.init(ecModel, api);\n      viewMap[viewId] = view;\n      viewList.push(view);\n      zr.add(view.group);\n    }\n\n    model.__viewId = view.__id = viewId;\n    view.__alive = true;\n    view.__model = model;\n    view.group.__ecComponentInfo = {\n      mainType: model.mainType,\n      index: model.componentIndex\n    };\n    !isComponent && scheduler.prepareView(view, model, ecModel, api);\n  }\n\n  for (var i = 0; i < viewList.length;) {\n    var view = viewList[i];\n\n    if (!view.__alive) {\n      !isComponent && view.renderTask.dispose();\n      zr.remove(view.group);\n      view.dispose(ecModel, api);\n      viewList.splice(i, 1);\n      delete viewMap[view.__id];\n      view.__id = view.group.__ecComponentInfo = null;\n    } else {\n      i++;\n    }\n  }\n} // /**\n//  * Encode visual infomation from data after data processing\n//  *\n//  * @param {module:echarts/model/Global} ecModel\n//  * @param {object} layout\n//  * @param {boolean} [layoutFilter] `true`: only layout,\n//  *                                 `false`: only not layout,\n//  *                                 `null`/`undefined`: all.\n//  * @param {string} taskBaseTag\n//  * @private\n//  */\n// function startVisualEncoding(ecIns, ecModel, api, payload, layoutFilter) {\n//     each(visualFuncs, function (visual, index) {\n//         var isLayout = visual.isLayout;\n//         if (layoutFilter == null\n//             || (layoutFilter === false && !isLayout)\n//             || (layoutFilter === true && isLayout)\n//         ) {\n//             visual.func(ecModel, api, payload);\n//         }\n//     });\n// }\n\n\nfunction clearColorPalette(ecModel) {\n  ecModel.clearColorPalette();\n  ecModel.eachSeries(function (seriesModel) {\n    seriesModel.clearColorPalette();\n  });\n}\n\nfunction render(ecIns, ecModel, api, payload) {\n  renderComponents(ecIns, ecModel, api, payload);\n  each(ecIns._chartsViews, function (chart) {\n    chart.__alive = false;\n  });\n  renderSeries(ecIns, ecModel, api, payload); // Remove groups of unrendered charts\n\n  each(ecIns._chartsViews, function (chart) {\n    if (!chart.__alive) {\n      chart.remove(ecModel, api);\n    }\n  });\n}\n\nfunction renderComponents(ecIns, ecModel, api, payload, dirtyList) {\n  each(dirtyList || ecIns._componentsViews, function (componentView) {\n    var componentModel = componentView.__model;\n    componentView.render(componentModel, ecModel, api, payload);\n    updateZ(componentModel, componentView);\n  });\n}\n/**\n * Render each chart and component\n * @private\n */\n\n\nfunction renderSeries(ecIns, ecModel, api, payload, dirtyMap) {\n  // Render all charts\n  var scheduler = ecIns._scheduler;\n  var unfinished;\n  ecModel.eachSeries(function (seriesModel) {\n    var chartView = ecIns._chartsMap[seriesModel.__viewId];\n    chartView.__alive = true;\n    var renderTask = chartView.renderTask;\n    scheduler.updatePayload(renderTask, payload);\n\n    if (dirtyMap && dirtyMap.get(seriesModel.uid)) {\n      renderTask.dirty();\n    }\n\n    unfinished |= renderTask.perform(scheduler.getPerformArgs(renderTask));\n    chartView.group.silent = !!seriesModel.get('silent');\n    updateZ(seriesModel, chartView);\n    updateBlend(seriesModel, chartView);\n  });\n  scheduler.unfinished |= unfinished; // If use hover layer\n\n  updateHoverLayerStatus(ecIns._zr, ecModel); // Add aria\n\n  aria(ecIns._zr.dom, ecModel);\n}\n\nfunction performPostUpdateFuncs(ecModel, api) {\n  each(postUpdateFuncs, function (func) {\n    func(ecModel, api);\n  });\n}\n\nvar MOUSE_EVENT_NAMES = ['click', 'dblclick', 'mouseover', 'mouseout', 'mousemove', 'mousedown', 'mouseup', 'globalout', 'contextmenu'];\n/**\n * @private\n */\n\nechartsProto._initEvents = function () {\n  each(MOUSE_EVENT_NAMES, function (eveName) {\n    this._zr.on(eveName, function (e) {\n      var ecModel = this.getModel();\n      var el = e.target;\n      var params; // no e.target when 'globalout'.\n\n      if (eveName === 'globalout') {\n        params = {};\n      } else if (el && el.dataIndex != null) {\n        var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n        params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n      } // If element has custom eventData of components\n      else if (el && el.eventData) {\n          params = zrUtil.extend({}, el.eventData);\n        }\n\n      if (params) {\n        params.event = e;\n        params.type = eveName;\n        this.trigger(eveName, params);\n      }\n    }, this);\n  }, this);\n  each(eventActionMap, function (actionType, eventType) {\n    this._messageCenter.on(eventType, function (event) {\n      this.trigger(eventType, event);\n    }, this);\n  }, this);\n};\n/**\n * @return {boolean}\n */\n\n\nechartsProto.isDisposed = function () {\n  return this._disposed;\n};\n/**\n * Clear\n */\n\n\nechartsProto.clear = function () {\n  this.setOption({\n    series: []\n  }, true);\n};\n/**\n * Dispose instance\n */\n\n\nechartsProto.dispose = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  this._disposed = true;\n  modelUtil.setAttribute(this.getDom(), DOM_ATTRIBUTE_KEY, '');\n  var api = this._api;\n  var ecModel = this._model;\n  each(this._componentsViews, function (component) {\n    component.dispose(ecModel, api);\n  });\n  each(this._chartsViews, function (chart) {\n    chart.dispose(ecModel, api);\n  }); // Dispose after all views disposed\n\n  this._zr.dispose();\n\n  delete instances[this.id];\n};\n\nzrUtil.mixin(ECharts, Eventful);\n\nfunction updateHoverLayerStatus(zr, ecModel) {\n  var storage = zr.storage;\n  var elCount = 0;\n  storage.traverse(function (el) {\n    if (!el.isGroup) {\n      elCount++;\n    }\n  });\n\n  if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n    storage.traverse(function (el) {\n      if (!el.isGroup) {\n        // Don't switch back.\n        el.useHoverLayer = true;\n      }\n    });\n  }\n}\n/**\n * Update chart progressive and blend.\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateBlend(seriesModel, chartView) {\n  var blendMode = seriesModel.get('blendMode') || null;\n  chartView.group.traverse(function (el) {\n    // FIXME marker and other components\n    if (!el.isGroup) {\n      // Only set if blendMode is changed. In case element is incremental and don't wan't to rerender.\n      if (el.style.blend !== blendMode) {\n        el.setStyle('blend', blendMode);\n      }\n    }\n\n    if (el.eachPendingDisplayable) {\n      el.eachPendingDisplayable(function (displayable) {\n        displayable.setStyle('blend', blendMode);\n      });\n    }\n  });\n}\n/**\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateZ(model, view) {\n  var z = model.get('z');\n  var zlevel = model.get('zlevel'); // Set z and zlevel\n\n  view.group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n    }\n  });\n}\n\nfunction createExtensionAPI(ecInstance) {\n  var coordSysMgr = ecInstance._coordSysMgr;\n  return zrUtil.extend(new ExtensionAPI(ecInstance), {\n    // Inject methods\n    getCoordinateSystems: zrUtil.bind(coordSysMgr.getCoordinateSystems, coordSysMgr),\n    getComponentByElement: function (el) {\n      while (el) {\n        var modelInfo = el.__ecComponentInfo;\n\n        if (modelInfo != null) {\n          return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n        }\n\n        el = el.parent;\n      }\n    }\n  });\n}\n/**\n * @type {Object} key: actionType.\n * @inner\n */\n\n\nvar actions = {};\n/**\n * Map eventType to actionType\n * @type {Object}\n */\n\nvar eventActionMap = {};\n/**\n * Data processor functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar dataProcessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar optionPreprocessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar postUpdateFuncs = [];\n/**\n * Visual encoding functions of each stage\n * @type {Array.<Object.<string, Function>>}\n */\n\nvar visualFuncs = [];\n/**\n * Theme storage\n * @type {Object.<key, Object>}\n */\n\nvar themeStorage = {};\n/**\n * Loading effects\n */\n\nvar loadingEffects = {};\nvar instances = {};\nvar connectedGroups = {};\nvar idBase = new Date() - 0;\nvar groupIdBase = new Date() - 0;\nvar DOM_ATTRIBUTE_KEY = '_echarts_instance_';\nvar mapDataStores = {};\n\nfunction enableConnect(chart) {\n  var STATUS_PENDING = 0;\n  var STATUS_UPDATING = 1;\n  var STATUS_UPDATED = 2;\n  var STATUS_KEY = '__connectUpdateStatus';\n\n  function updateConnectedChartsStatus(charts, status) {\n    for (var i = 0; i < charts.length; i++) {\n      var otherChart = charts[i];\n      otherChart[STATUS_KEY] = status;\n    }\n  }\n\n  each(eventActionMap, function (actionType, eventType) {\n    chart._messageCenter.on(eventType, function (event) {\n      if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n        if (event && event.escapeConnect) {\n          return;\n        }\n\n        var action = chart.makeActionFromEvent(event);\n        var otherCharts = [];\n        each(instances, function (otherChart) {\n          if (otherChart !== chart && otherChart.group === chart.group) {\n            otherCharts.push(otherChart);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n        each(otherCharts, function (otherChart) {\n          if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n            otherChart.dispatchAction(action);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n      }\n    });\n  });\n}\n/**\n * @param {HTMLElement} dom\n * @param {Object} [theme]\n * @param {Object} opts\n * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n *                              Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n *                               Can be 'auto' (the same as null/undefined)\n */\n\n\nfunction init(dom, theme, opts) {\n  var existInstance = getInstanceByDom(dom);\n\n  if (existInstance) {\n    return existInstance;\n  }\n\n  var chart = new ECharts(dom, theme, opts);\n  chart.id = 'ec_' + idBase++;\n  instances[chart.id] = chart;\n  modelUtil.setAttribute(dom, DOM_ATTRIBUTE_KEY, chart.id);\n  enableConnect(chart);\n  return chart;\n}\n/**\n * @return {string|Array.<module:echarts~ECharts>} groupId\n */\n\n\nfunction connect(groupId) {\n  // Is array of charts\n  if (zrUtil.isArray(groupId)) {\n    var charts = groupId;\n    groupId = null; // If any chart has group\n\n    each(charts, function (chart) {\n      if (chart.group != null) {\n        groupId = chart.group;\n      }\n    });\n    groupId = groupId || 'g_' + groupIdBase++;\n    each(charts, function (chart) {\n      chart.group = groupId;\n    });\n  }\n\n  connectedGroups[groupId] = true;\n  return groupId;\n}\n/**\n * @DEPRECATED\n * @return {string} groupId\n */\n\n\nfunction disConnect(groupId) {\n  connectedGroups[groupId] = false;\n}\n/**\n * @return {string} groupId\n */\n\n\nvar disconnect = disConnect;\n/**\n * Dispose a chart instance\n * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n */\n\nfunction dispose(chart) {\n  if (typeof chart === 'string') {\n    chart = instances[chart];\n  } else if (!(chart instanceof ECharts)) {\n    // Try to treat as dom\n    chart = getInstanceByDom(chart);\n  }\n\n  if (chart instanceof ECharts && !chart.isDisposed()) {\n    chart.dispose();\n  }\n}\n/**\n * @param  {HTMLElement} dom\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceByDom(dom) {\n  return instances[modelUtil.getAttribute(dom, DOM_ATTRIBUTE_KEY)];\n}\n/**\n * @param {string} key\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceById(key) {\n  return instances[key];\n}\n/**\n * Register theme\n */\n\n\nfunction registerTheme(name, theme) {\n  themeStorage[name] = theme;\n}\n/**\n * Register option preprocessor\n * @param {Function} preprocessorFunc\n */\n\n\nfunction registerPreprocessor(preprocessorFunc) {\n  optionPreprocessorFuncs.push(preprocessorFunc);\n}\n/**\n * @param {number} [priority=1000]\n * @param {Object|Function} processor\n */\n\n\nfunction registerProcessor(priority, processor) {\n  normalizeRegister(dataProcessorFuncs, priority, processor, PRIORITY_PROCESSOR_FILTER);\n}\n/**\n * Register postUpdater\n * @param {Function} postUpdateFunc\n */\n\n\nfunction registerPostUpdate(postUpdateFunc) {\n  postUpdateFuncs.push(postUpdateFunc);\n}\n/**\n * Usage:\n * registerAction('someAction', 'someEvent', function () { ... });\n * registerAction('someAction', function () { ... });\n * registerAction(\n *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n *     function () { ... }\n * );\n *\n * @param {(string|Object)} actionInfo\n * @param {string} actionInfo.type\n * @param {string} [actionInfo.event]\n * @param {string} [actionInfo.update]\n * @param {string} [eventName]\n * @param {Function} action\n */\n\n\nfunction registerAction(actionInfo, eventName, action) {\n  if (typeof eventName === 'function') {\n    action = eventName;\n    eventName = '';\n  }\n\n  var actionType = isObject(actionInfo) ? actionInfo.type : [actionInfo, actionInfo = {\n    event: eventName\n  }][0]; // Event name is all lowercase\n\n  actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n  eventName = actionInfo.event; // Validate action type and event name.\n\n  assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n  if (!actions[actionType]) {\n    actions[actionType] = {\n      action: action,\n      actionInfo: actionInfo\n    };\n  }\n\n  eventActionMap[eventName] = actionType;\n}\n/**\n * @param {string} type\n * @param {*} CoordinateSystem\n */\n\n\nfunction registerCoordinateSystem(type, CoordinateSystem) {\n  CoordinateSystemManager.register(type, CoordinateSystem);\n}\n/**\n * Get dimensions of specified coordinate system.\n * @param {string} type\n * @return {Array.<string|Object>}\n */\n\n\nfunction getCoordinateSystemDimensions(type) {\n  var coordSysCreator = CoordinateSystemManager.get(type);\n\n  if (coordSysCreator) {\n    return coordSysCreator.getDimensionsInfo ? coordSysCreator.getDimensionsInfo() : coordSysCreator.dimensions.slice();\n  }\n}\n/**\n * Layout is a special stage of visual encoding\n * Most visual encoding like color are common for different chart\n * But each chart has it's own layout algorithm\n *\n * @param {number} [priority=1000]\n * @param {Function} layoutTask\n */\n\n\nfunction registerLayout(priority, layoutTask) {\n  normalizeRegister(visualFuncs, priority, layoutTask, PRIORITY_VISUAL_LAYOUT, 'layout');\n}\n/**\n * @param {number} [priority=3000]\n * @param {module:echarts/stream/Task} visualTask\n */\n\n\nfunction registerVisual(priority, visualTask) {\n  normalizeRegister(visualFuncs, priority, visualTask, PRIORITY_VISUAL_CHART, 'visual');\n}\n/**\n * @param {Object|Function} fn: {seriesType, createOnAllSeries, performRawSeries, reset}\n */\n\n\nfunction normalizeRegister(targetList, priority, fn, defaultPriority, visualType) {\n  if (isFunction(priority) || isObject(priority)) {\n    fn = priority;\n    priority = defaultPriority;\n  }\n\n  var stageHandler = Scheduler.wrapStageHandler(fn, visualType);\n  stageHandler.__prio = priority;\n  stageHandler.__raw = fn;\n  targetList.push(stageHandler);\n  return stageHandler;\n}\n/**\n * @param {string} name\n */\n\n\nfunction registerLoading(name, loadingFx) {\n  loadingEffects[name] = loadingFx;\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentModel(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentModel;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentView(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentView;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentView.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendSeriesModel(opts\n/*, superClass*/\n) {\n  // var Clazz = SeriesModel;\n  // if (superClass) {\n  //     superClass = 'series.' + superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return SeriesModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendChartView(opts\n/*, superClass*/\n) {\n  // var Clazz = ChartView;\n  // if (superClass) {\n  //     superClass = superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ChartView.getClass(classType.main, true);\n  // }\n  return ChartView.extend(opts);\n}\n/**\n * ZRender need a canvas context to do measureText.\n * But in node environment canvas may be created by node-canvas.\n * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n *\n * Be careful of using it in the browser.\n *\n * @param {Function} creator\n * @example\n *     var Canvas = require('canvas');\n *     var echarts = require('echarts');\n *     echarts.setCanvasCreator(function () {\n *         // Small size is enough.\n *         return new Canvas(32, 32);\n *     });\n */\n\n\nfunction setCanvasCreator(creator) {\n  zrUtil.$override('createCanvas', creator);\n}\n/**\n * @param {string} mapName\n * @param {Object|string} geoJson\n * @param {Object} [specialAreas]\n *\n * @example\n *     $.get('USA.json', function (geoJson) {\n *         echarts.registerMap('USA', geoJson);\n *         // Or\n *         echarts.registerMap('USA', {\n *             geoJson: geoJson,\n *             specialAreas: {}\n *         })\n *     });\n */\n\n\nfunction registerMap(mapName, geoJson, specialAreas) {\n  if (geoJson.geoJson && !geoJson.features) {\n    specialAreas = geoJson.specialAreas;\n    geoJson = geoJson.geoJson;\n  }\n\n  if (typeof geoJson === 'string') {\n    geoJson = typeof JSON !== 'undefined' && JSON.parse ? JSON.parse(geoJson) : new Function('return (' + geoJson + ');')();\n  }\n\n  mapDataStores[mapName] = {\n    geoJson: geoJson,\n    specialAreas: specialAreas\n  };\n}\n/**\n * @param {string} mapName\n * @return {Object}\n */\n\n\nfunction getMap(mapName) {\n  return mapDataStores[mapName];\n}\n\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesColor);\nregisterPreprocessor(backwardCompat);\nregisterProcessor(PRIORITY_PROCESSOR_STATISTIC, dataStack);\nregisterLoading('default', loadingDefault); // Default actions\n\nregisterAction({\n  type: 'highlight',\n  event: 'highlight',\n  update: 'highlight'\n}, zrUtil.noop);\nregisterAction({\n  type: 'downplay',\n  event: 'downplay',\n  update: 'downplay'\n}, zrUtil.noop); // Default theme\n\nregisterTheme('light', lightTheme);\nregisterTheme('dark', darkTheme); // For backward compatibility, where the namespace `dataTool` will\n// be mounted on `echarts` is the extension `dataTool` is imported.\n\nvar dataTool = {};\nexports.version = version;\nexports.dependencies = dependencies;\nexports.PRIORITY = PRIORITY;\nexports.init = init;\nexports.connect = connect;\nexports.disConnect = disConnect;\nexports.disconnect = disconnect;\nexports.dispose = dispose;\nexports.getInstanceByDom = getInstanceByDom;\nexports.getInstanceById = getInstanceById;\nexports.registerTheme = registerTheme;\nexports.registerPreprocessor = registerPreprocessor;\nexports.registerProcessor = registerProcessor;\nexports.registerPostUpdate = registerPostUpdate;\nexports.registerAction = registerAction;\nexports.registerCoordinateSystem = registerCoordinateSystem;\nexports.getCoordinateSystemDimensions = getCoordinateSystemDimensions;\nexports.registerLayout = registerLayout;\nexports.registerVisual = registerVisual;\nexports.registerLoading = registerLoading;\nexports.extendComponentModel = extendComponentModel;\nexports.extendComponentView = extendComponentView;\nexports.extendSeriesModel = extendSeriesModel;\nexports.extendChartView = extendChartView;\nexports.setCanvasCreator = setCanvasCreator;\nexports.registerMap = registerMap;\nexports.getMap = getMap;\nexports.dataTool = dataTool;\nvar ___ec_export = require(\"./export\");\n(function () {\n    for (var key in ___ec_export) {\n        if (___ec_export.hasOwnProperty(key)) {\n            exports[key] = ___ec_export[key];\n        }\n    }\n})();","var ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * 创建一个向量\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @return {Vector2}\n */\n\nfunction create(x, y) {\n  var out = new ArrayCtor(2);\n\n  if (x == null) {\n    x = 0;\n  }\n\n  if (y == null) {\n    y = 0;\n  }\n\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * 复制向量数据\n * @param {Vector2} out\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction copy(out, v) {\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 克隆一个向量\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction clone(v) {\n  var out = new ArrayCtor(2);\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 设置向量的两个项\n * @param {Vector2} out\n * @param {number} a\n * @param {number} b\n * @return {Vector2} 结果\n */\n\n\nfunction set(out, a, b) {\n  out[0] = a;\n  out[1] = b;\n  return out;\n}\n/**\n * 向量相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction add(out, v1, v2) {\n  out[0] = v1[0] + v2[0];\n  out[1] = v1[1] + v2[1];\n  return out;\n}\n/**\n * 向量缩放后相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} a\n */\n\n\nfunction scaleAndAdd(out, v1, v2, a) {\n  out[0] = v1[0] + v2[0] * a;\n  out[1] = v1[1] + v2[1] * a;\n  return out;\n}\n/**\n * 向量相减\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction sub(out, v1, v2) {\n  out[0] = v1[0] - v2[0];\n  out[1] = v1[1] - v2[1];\n  return out;\n}\n/**\n * 向量长度\n * @param {Vector2} v\n * @return {number}\n */\n\n\nfunction len(v) {\n  return Math.sqrt(lenSquare(v));\n}\n\nvar length = len; // jshint ignore:line\n\n/**\n * 向量长度平方\n * @param {Vector2} v\n * @return {number}\n */\n\nfunction lenSquare(v) {\n  return v[0] * v[0] + v[1] * v[1];\n}\n\nvar lengthSquare = lenSquare;\n/**\n * 向量乘法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\nfunction mul(out, v1, v2) {\n  out[0] = v1[0] * v2[0];\n  out[1] = v1[1] * v2[1];\n  return out;\n}\n/**\n * 向量除法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction div(out, v1, v2) {\n  out[0] = v1[0] / v2[0];\n  out[1] = v1[1] / v2[1];\n  return out;\n}\n/**\n * 向量点乘\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction dot(v1, v2) {\n  return v1[0] * v2[0] + v1[1] * v2[1];\n}\n/**\n * 向量缩放\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {number} s\n */\n\n\nfunction scale(out, v, s) {\n  out[0] = v[0] * s;\n  out[1] = v[1] * s;\n  return out;\n}\n/**\n * 向量归一化\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\n\nfunction normalize(out, v) {\n  var d = len(v);\n\n  if (d === 0) {\n    out[0] = 0;\n    out[1] = 0;\n  } else {\n    out[0] = v[0] / d;\n    out[1] = v[1] / d;\n  }\n\n  return out;\n}\n/**\n * 计算向量间距离\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction distance(v1, v2) {\n  return Math.sqrt((v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]));\n}\n\nvar dist = distance;\n/**\n * 向量距离平方\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\nfunction distanceSquare(v1, v2) {\n  return (v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n}\n\nvar distSquare = distanceSquare;\n/**\n * 求负向量\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\nfunction negate(out, v) {\n  out[0] = -v[0];\n  out[1] = -v[1];\n  return out;\n}\n/**\n * 插值两个点\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} t\n */\n\n\nfunction lerp(out, v1, v2, t) {\n  out[0] = v1[0] + t * (v2[0] - v1[0]);\n  out[1] = v1[1] + t * (v2[1] - v1[1]);\n  return out;\n}\n/**\n * 矩阵左乘向量\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {Vector2} m\n */\n\n\nfunction applyTransform(out, v, m) {\n  var x = v[0];\n  var y = v[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * 求两个向量最小值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction min(out, v1, v2) {\n  out[0] = Math.min(v1[0], v2[0]);\n  out[1] = Math.min(v1[1], v2[1]);\n  return out;\n}\n/**\n * 求两个向量最大值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction max(out, v1, v2) {\n  out[0] = Math.max(v1[0], v2[0]);\n  out[1] = Math.max(v1[1], v2[1]);\n  return out;\n}\n\nexports.create = create;\nexports.copy = copy;\nexports.clone = clone;\nexports.set = set;\nexports.add = add;\nexports.scaleAndAdd = scaleAndAdd;\nexports.sub = sub;\nexports.len = len;\nexports.length = length;\nexports.lenSquare = lenSquare;\nexports.lengthSquare = lengthSquare;\nexports.mul = mul;\nexports.div = div;\nexports.dot = dot;\nexports.scale = scale;\nexports.normalize = normalize;\nexports.distance = distance;\nexports.dist = dist;\nexports.distanceSquare = distanceSquare;\nexports.distSquare = distSquare;\nexports.negate = negate;\nexports.lerp = lerp;\nexports.applyTransform = applyTransform;\nexports.min = min;\nexports.max = max;","var LRU = require(\"../core/LRU\");\n\nvar kCSSColorTable = {\n  'transparent': [0, 0, 0, 0],\n  'aliceblue': [240, 248, 255, 1],\n  'antiquewhite': [250, 235, 215, 1],\n  'aqua': [0, 255, 255, 1],\n  'aquamarine': [127, 255, 212, 1],\n  'azure': [240, 255, 255, 1],\n  'beige': [245, 245, 220, 1],\n  'bisque': [255, 228, 196, 1],\n  'black': [0, 0, 0, 1],\n  'blanchedalmond': [255, 235, 205, 1],\n  'blue': [0, 0, 255, 1],\n  'blueviolet': [138, 43, 226, 1],\n  'brown': [165, 42, 42, 1],\n  'burlywood': [222, 184, 135, 1],\n  'cadetblue': [95, 158, 160, 1],\n  'chartreuse': [127, 255, 0, 1],\n  'chocolate': [210, 105, 30, 1],\n  'coral': [255, 127, 80, 1],\n  'cornflowerblue': [100, 149, 237, 1],\n  'cornsilk': [255, 248, 220, 1],\n  'crimson': [220, 20, 60, 1],\n  'cyan': [0, 255, 255, 1],\n  'darkblue': [0, 0, 139, 1],\n  'darkcyan': [0, 139, 139, 1],\n  'darkgoldenrod': [184, 134, 11, 1],\n  'darkgray': [169, 169, 169, 1],\n  'darkgreen': [0, 100, 0, 1],\n  'darkgrey': [169, 169, 169, 1],\n  'darkkhaki': [189, 183, 107, 1],\n  'darkmagenta': [139, 0, 139, 1],\n  'darkolivegreen': [85, 107, 47, 1],\n  'darkorange': [255, 140, 0, 1],\n  'darkorchid': [153, 50, 204, 1],\n  'darkred': [139, 0, 0, 1],\n  'darksalmon': [233, 150, 122, 1],\n  'darkseagreen': [143, 188, 143, 1],\n  'darkslateblue': [72, 61, 139, 1],\n  'darkslategray': [47, 79, 79, 1],\n  'darkslategrey': [47, 79, 79, 1],\n  'darkturquoise': [0, 206, 209, 1],\n  'darkviolet': [148, 0, 211, 1],\n  'deeppink': [255, 20, 147, 1],\n  'deepskyblue': [0, 191, 255, 1],\n  'dimgray': [105, 105, 105, 1],\n  'dimgrey': [105, 105, 105, 1],\n  'dodgerblue': [30, 144, 255, 1],\n  'firebrick': [178, 34, 34, 1],\n  'floralwhite': [255, 250, 240, 1],\n  'forestgreen': [34, 139, 34, 1],\n  'fuchsia': [255, 0, 255, 1],\n  'gainsboro': [220, 220, 220, 1],\n  'ghostwhite': [248, 248, 255, 1],\n  'gold': [255, 215, 0, 1],\n  'goldenrod': [218, 165, 32, 1],\n  'gray': [128, 128, 128, 1],\n  'green': [0, 128, 0, 1],\n  'greenyellow': [173, 255, 47, 1],\n  'grey': [128, 128, 128, 1],\n  'honeydew': [240, 255, 240, 1],\n  'hotpink': [255, 105, 180, 1],\n  'indianred': [205, 92, 92, 1],\n  'indigo': [75, 0, 130, 1],\n  'ivory': [255, 255, 240, 1],\n  'khaki': [240, 230, 140, 1],\n  'lavender': [230, 230, 250, 1],\n  'lavenderblush': [255, 240, 245, 1],\n  'lawngreen': [124, 252, 0, 1],\n  'lemonchiffon': [255, 250, 205, 1],\n  'lightblue': [173, 216, 230, 1],\n  'lightcoral': [240, 128, 128, 1],\n  'lightcyan': [224, 255, 255, 1],\n  'lightgoldenrodyellow': [250, 250, 210, 1],\n  'lightgray': [211, 211, 211, 1],\n  'lightgreen': [144, 238, 144, 1],\n  'lightgrey': [211, 211, 211, 1],\n  'lightpink': [255, 182, 193, 1],\n  'lightsalmon': [255, 160, 122, 1],\n  'lightseagreen': [32, 178, 170, 1],\n  'lightskyblue': [135, 206, 250, 1],\n  'lightslategray': [119, 136, 153, 1],\n  'lightslategrey': [119, 136, 153, 1],\n  'lightsteelblue': [176, 196, 222, 1],\n  'lightyellow': [255, 255, 224, 1],\n  'lime': [0, 255, 0, 1],\n  'limegreen': [50, 205, 50, 1],\n  'linen': [250, 240, 230, 1],\n  'magenta': [255, 0, 255, 1],\n  'maroon': [128, 0, 0, 1],\n  'mediumaquamarine': [102, 205, 170, 1],\n  'mediumblue': [0, 0, 205, 1],\n  'mediumorchid': [186, 85, 211, 1],\n  'mediumpurple': [147, 112, 219, 1],\n  'mediumseagreen': [60, 179, 113, 1],\n  'mediumslateblue': [123, 104, 238, 1],\n  'mediumspringgreen': [0, 250, 154, 1],\n  'mediumturquoise': [72, 209, 204, 1],\n  'mediumvioletred': [199, 21, 133, 1],\n  'midnightblue': [25, 25, 112, 1],\n  'mintcream': [245, 255, 250, 1],\n  'mistyrose': [255, 228, 225, 1],\n  'moccasin': [255, 228, 181, 1],\n  'navajowhite': [255, 222, 173, 1],\n  'navy': [0, 0, 128, 1],\n  'oldlace': [253, 245, 230, 1],\n  'olive': [128, 128, 0, 1],\n  'olivedrab': [107, 142, 35, 1],\n  'orange': [255, 165, 0, 1],\n  'orangered': [255, 69, 0, 1],\n  'orchid': [218, 112, 214, 1],\n  'palegoldenrod': [238, 232, 170, 1],\n  'palegreen': [152, 251, 152, 1],\n  'paleturquoise': [175, 238, 238, 1],\n  'palevioletred': [219, 112, 147, 1],\n  'papayawhip': [255, 239, 213, 1],\n  'peachpuff': [255, 218, 185, 1],\n  'peru': [205, 133, 63, 1],\n  'pink': [255, 192, 203, 1],\n  'plum': [221, 160, 221, 1],\n  'powderblue': [176, 224, 230, 1],\n  'purple': [128, 0, 128, 1],\n  'red': [255, 0, 0, 1],\n  'rosybrown': [188, 143, 143, 1],\n  'royalblue': [65, 105, 225, 1],\n  'saddlebrown': [139, 69, 19, 1],\n  'salmon': [250, 128, 114, 1],\n  'sandybrown': [244, 164, 96, 1],\n  'seagreen': [46, 139, 87, 1],\n  'seashell': [255, 245, 238, 1],\n  'sienna': [160, 82, 45, 1],\n  'silver': [192, 192, 192, 1],\n  'skyblue': [135, 206, 235, 1],\n  'slateblue': [106, 90, 205, 1],\n  'slategray': [112, 128, 144, 1],\n  'slategrey': [112, 128, 144, 1],\n  'snow': [255, 250, 250, 1],\n  'springgreen': [0, 255, 127, 1],\n  'steelblue': [70, 130, 180, 1],\n  'tan': [210, 180, 140, 1],\n  'teal': [0, 128, 128, 1],\n  'thistle': [216, 191, 216, 1],\n  'tomato': [255, 99, 71, 1],\n  'turquoise': [64, 224, 208, 1],\n  'violet': [238, 130, 238, 1],\n  'wheat': [245, 222, 179, 1],\n  'white': [255, 255, 255, 1],\n  'whitesmoke': [245, 245, 245, 1],\n  'yellow': [255, 255, 0, 1],\n  'yellowgreen': [154, 205, 50, 1]\n};\n\nfunction clampCssByte(i) {\n  // Clamp to integer 0 .. 255.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 255 ? 255 : i;\n}\n\nfunction clampCssAngle(i) {\n  // Clamp to integer 0 .. 360.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 360 ? 360 : i;\n}\n\nfunction clampCssFloat(f) {\n  // Clamp to float 0.0 .. 1.0.\n  return f < 0 ? 0 : f > 1 ? 1 : f;\n}\n\nfunction parseCssInt(str) {\n  // int or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssByte(parseFloat(str) / 100 * 255);\n  }\n\n  return clampCssByte(parseInt(str, 10));\n}\n\nfunction parseCssFloat(str) {\n  // float or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssFloat(parseFloat(str) / 100);\n  }\n\n  return clampCssFloat(parseFloat(str));\n}\n\nfunction cssHueToRgb(m1, m2, h) {\n  if (h < 0) {\n    h += 1;\n  } else if (h > 1) {\n    h -= 1;\n  }\n\n  if (h * 6 < 1) {\n    return m1 + (m2 - m1) * h * 6;\n  }\n\n  if (h * 2 < 1) {\n    return m2;\n  }\n\n  if (h * 3 < 2) {\n    return m1 + (m2 - m1) * (2 / 3 - h) * 6;\n  }\n\n  return m1;\n}\n\nfunction lerpNumber(a, b, p) {\n  return a + (b - a) * p;\n}\n\nfunction setRgba(out, r, g, b, a) {\n  out[0] = r;\n  out[1] = g;\n  out[2] = b;\n  out[3] = a;\n  return out;\n}\n\nfunction copyRgba(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\nvar colorCache = new LRU(20);\nvar lastRemovedArr = null;\n\nfunction putToCache(colorStr, rgbaArr) {\n  // Reuse removed array\n  if (lastRemovedArr) {\n    copyRgba(lastRemovedArr, rgbaArr);\n  }\n\n  lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || rgbaArr.slice());\n}\n/**\n * @param {string} colorStr\n * @param {Array.<number>} out\n * @return {Array.<number>}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction parse(colorStr, rgbaArr) {\n  if (!colorStr) {\n    return;\n  }\n\n  rgbaArr = rgbaArr || [];\n  var cached = colorCache.get(colorStr);\n\n  if (cached) {\n    return copyRgba(rgbaArr, cached);\n  } // colorStr may be not string\n\n\n  colorStr = colorStr + ''; // Remove all whitespace, not compliant, but should just be more accepting.\n\n  var str = colorStr.replace(/ /g, '').toLowerCase(); // Color keywords (and transparent) lookup.\n\n  if (str in kCSSColorTable) {\n    copyRgba(rgbaArr, kCSSColorTable[str]);\n    putToCache(colorStr, rgbaArr);\n    return rgbaArr;\n  } // #abc and #abc123 syntax.\n\n\n  if (str.charAt(0) === '#') {\n    if (str.length === 4) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xfff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xf00) >> 4 | (iv & 0xf00) >> 8, iv & 0xf0 | (iv & 0xf0) >> 4, iv & 0xf | (iv & 0xf) << 4, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    } else if (str.length === 7) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xffffff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xff0000) >> 16, (iv & 0xff00) >> 8, iv & 0xff, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    }\n\n    return;\n  }\n\n  var op = str.indexOf('('),\n      ep = str.indexOf(')');\n\n  if (op !== -1 && ep + 1 === str.length) {\n    var fname = str.substr(0, op);\n    var params = str.substr(op + 1, ep - (op + 1)).split(',');\n    var alpha = 1; // To allow case fallthrough.\n\n    switch (fname) {\n      case 'rgba':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        alpha = parseCssFloat(params.pop());\n      // jshint ignore:line\n      // Fall through.\n\n      case 'rgb':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        setRgba(rgbaArr, parseCssInt(params[0]), parseCssInt(params[1]), parseCssInt(params[2]), alpha);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsla':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        params[3] = parseCssFloat(params[3]);\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsl':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      default:\n        return;\n    }\n  }\n\n  setRgba(rgbaArr, 0, 0, 0, 1);\n  return;\n}\n/**\n * @param {Array.<number>} hsla\n * @param {Array.<number>} rgba\n * @return {Array.<number>} rgba\n */\n\n\nfunction hsla2rgba(hsla, rgba) {\n  var h = (parseFloat(hsla[0]) % 360 + 360) % 360 / 360; // 0 .. 1\n  // NOTE(deanm): According to the CSS spec s/l should only be\n  // percentages, but we don't bother and let float or percentage.\n\n  var s = parseCssFloat(hsla[1]);\n  var l = parseCssFloat(hsla[2]);\n  var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n  var m1 = l * 2 - m2;\n  rgba = rgba || [];\n  setRgba(rgba, clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255), clampCssByte(cssHueToRgb(m1, m2, h) * 255), clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255), 1);\n\n  if (hsla.length === 4) {\n    rgba[3] = hsla[3];\n  }\n\n  return rgba;\n}\n/**\n * @param {Array.<number>} rgba\n * @return {Array.<number>} hsla\n */\n\n\nfunction rgba2hsla(rgba) {\n  if (!rgba) {\n    return;\n  } // RGB from 0 to 255\n\n\n  var R = rgba[0] / 255;\n  var G = rgba[1] / 255;\n  var B = rgba[2] / 255;\n  var vMin = Math.min(R, G, B); // Min. value of RGB\n\n  var vMax = Math.max(R, G, B); // Max. value of RGB\n\n  var delta = vMax - vMin; // Delta RGB value\n\n  var L = (vMax + vMin) / 2;\n  var H;\n  var S; // HSL results from 0 to 1\n\n  if (delta === 0) {\n    H = 0;\n    S = 0;\n  } else {\n    if (L < 0.5) {\n      S = delta / (vMax + vMin);\n    } else {\n      S = delta / (2 - vMax - vMin);\n    }\n\n    var deltaR = ((vMax - R) / 6 + delta / 2) / delta;\n    var deltaG = ((vMax - G) / 6 + delta / 2) / delta;\n    var deltaB = ((vMax - B) / 6 + delta / 2) / delta;\n\n    if (R === vMax) {\n      H = deltaB - deltaG;\n    } else if (G === vMax) {\n      H = 1 / 3 + deltaR - deltaB;\n    } else if (B === vMax) {\n      H = 2 / 3 + deltaG - deltaR;\n    }\n\n    if (H < 0) {\n      H += 1;\n    }\n\n    if (H > 1) {\n      H -= 1;\n    }\n  }\n\n  var hsla = [H * 360, S, L];\n\n  if (rgba[3] != null) {\n    hsla.push(rgba[3]);\n  }\n\n  return hsla;\n}\n/**\n * @param {string} color\n * @param {number} level\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction lift(color, level) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    for (var i = 0; i < 3; i++) {\n      if (level < 0) {\n        colorArr[i] = colorArr[i] * (1 - level) | 0;\n      } else {\n        colorArr[i] = (255 - colorArr[i]) * level + colorArr[i] | 0;\n      }\n\n      if (colorArr[i] > 255) {\n        colorArr[i] = 255;\n      } else if (color[i] < 0) {\n        colorArr[i] = 0;\n      }\n    }\n\n    return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n  }\n}\n/**\n * @param {string} color\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction toHex(color) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + +colorArr[2]).toString(16).slice(1);\n  }\n}\n/**\n * Map value to color. Faster than lerp methods because color is represented by rgba array.\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<Array.<number>>} colors List of rgba color array\n * @param {Array.<number>} [out] Mapped gba color array\n * @return {Array.<number>} will be null/undefined if input illegal.\n */\n\n\nfunction fastLerp(normalizedValue, colors, out) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  out = out || [];\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = colors[leftIndex];\n  var rightColor = colors[rightIndex];\n  var dv = value - leftIndex;\n  out[0] = clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv));\n  out[1] = clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv));\n  out[2] = clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv));\n  out[3] = clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv));\n  return out;\n}\n/**\n * @deprecated\n */\n\n\nvar fastMapToColor = fastLerp;\n/**\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<string>} colors Color list.\n * @param {boolean=} fullOutput Default false.\n * @return {(string|Object)} Result color. If fullOutput,\n *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n * @memberOf module:zrender/util/color\n */\n\nfunction lerp(normalizedValue, colors, fullOutput) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = parse(colors[leftIndex]);\n  var rightColor = parse(colors[rightIndex]);\n  var dv = value - leftIndex;\n  var color = stringify([clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv)), clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv)), clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv)), clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv))], 'rgba');\n  return fullOutput ? {\n    color: color,\n    leftIndex: leftIndex,\n    rightIndex: rightIndex,\n    value: value\n  } : color;\n}\n/**\n * @deprecated\n */\n\n\nvar mapToColor = lerp;\n/**\n * @param {string} color\n * @param {number=} h 0 ~ 360, ignore when null.\n * @param {number=} s 0 ~ 1, ignore when null.\n * @param {number=} l 0 ~ 1, ignore when null.\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\nfunction modifyHSL(color, h, s, l) {\n  color = parse(color);\n\n  if (color) {\n    color = rgba2hsla(color);\n    h != null && (color[0] = clampCssAngle(h));\n    s != null && (color[1] = parseCssFloat(s));\n    l != null && (color[2] = parseCssFloat(l));\n    return stringify(hsla2rgba(color), 'rgba');\n  }\n}\n/**\n * @param {string} color\n * @param {number=} alpha 0 ~ 1\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\n\nfunction modifyAlpha(color, alpha) {\n  color = parse(color);\n\n  if (color && alpha != null) {\n    color[3] = clampCssFloat(alpha);\n    return stringify(color, 'rgba');\n  }\n}\n/**\n * @param {Array.<number>} arrColor like [12,33,44,0.4]\n * @param {string} type 'rgba', 'hsva', ...\n * @return {string} Result color. (If input illegal, return undefined).\n */\n\n\nfunction stringify(arrColor, type) {\n  if (!arrColor || !arrColor.length) {\n    return;\n  }\n\n  var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n\n  if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n    colorStr += ',' + arrColor[3];\n  }\n\n  return type + '(' + colorStr + ')';\n}\n\nexports.parse = parse;\nexports.lift = lift;\nexports.toHex = toHex;\nexports.fastLerp = fastLerp;\nexports.fastMapToColor = fastMapToColor;\nexports.lerp = lerp;\nexports.mapToColor = mapToColor;\nexports.modifyHSL = modifyHSL;\nexports.modifyAlpha = modifyAlpha;\nexports.stringify = stringify;","/**\n * @param {Array.<Object>} colorStops\n */\nvar Gradient = function (colorStops) {\n  this.colorStops = colorStops || [];\n};\n\nGradient.prototype = {\n  constructor: Gradient,\n  addColorStop: function (offset, color) {\n    this.colorStops.push({\n      offset: offset,\n      color: color\n    });\n  }\n};\nvar _default = Gradient;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar TooltipContent = require(\"./TooltipContent\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar findPointFromSeries = require(\"../axisPointer/findPointFromSeries\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar Model = require(\"../../model/Model\");\n\nvar globalListener = require(\"../axisPointer/globalListener\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar axisPointerViewHelper = require(\"../axisPointer/viewHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar parsePercent = numberUtil.parsePercent;\nvar proxyRect = new graphic.Rect({\n  shape: {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  }\n});\n\nvar _default = echarts.extendComponentView({\n  type: 'tooltip',\n  init: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    var tooltipContent = new TooltipContent(api.getDom(), api);\n    this._tooltipContent = tooltipContent;\n  },\n  render: function (tooltipModel, ecModel, api) {\n    if (env.node || env.wxa) {\n      return;\n    } // Reset\n\n\n    this.group.removeAll();\n    /**\n     * @private\n     * @type {module:echarts/component/tooltip/TooltipModel}\n     */\n\n    this._tooltipModel = tooltipModel;\n    /**\n     * @private\n     * @type {module:echarts/model/Global}\n     */\n\n    this._ecModel = ecModel;\n    /**\n     * @private\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this._api = api;\n    /**\n     * Should be cleaned when render.\n     * @private\n     * @type {Array.<Array.<Object>>}\n     */\n\n    this._lastDataByCoordSys = null;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.update();\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n    this._initGlobalListener();\n\n    this._keepShow();\n  },\n  _initGlobalListener: function () {\n    var tooltipModel = this._tooltipModel;\n    var triggerOn = tooltipModel.get('triggerOn');\n    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none') {\n        if (triggerOn.indexOf(currTrigger) >= 0) {\n          this._tryShow(e, dispatchAction);\n        } else if (currTrigger === 'leave') {\n          this._hide(dispatchAction);\n        }\n      }\n    }, this));\n  },\n  _keepShow: function () {\n    var tooltipModel = this._tooltipModel;\n    var ecModel = this._ecModel;\n    var api = this._api; // Try to keep the tooltip show when refreshing\n\n    if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,\n    // self.manuallyShowTip({x, y}) might cause tooltip hide,\n    // which is not expected.\n    && tooltipModel.get('triggerOn') !== 'none') {\n      var self = this;\n      clearTimeout(this._refreshUpdateTimeout);\n      this._refreshUpdateTimeout = setTimeout(function () {\n        // Show tip next tick after other charts are rendered\n        // In case highlight action has wrong result\n        // FIXME\n        self.manuallyShowTip(tooltipModel, ecModel, api, {\n          x: self._lastX,\n          y: self._lastY\n        });\n      });\n    }\n  },\n\n  /**\n   * Show tip manually by\n   * dispatchAction({\n   *     type: 'showTip',\n   *     x: 10,\n   *     y: 10\n   * });\n   * Or\n   * dispatchAction({\n   *      type: 'showTip',\n   *      seriesIndex: 0,\n   *      dataIndex or dataIndexInside or name\n   * });\n   *\n   *  TODO Batch\n   */\n  manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n    if (payload.from === this.uid || env.node) {\n      return;\n    }\n\n    var dispatchAction = makeDispatchAction(payload, api); // Reset ticket\n\n    this._ticket = ''; // When triggered from axisPointer.\n\n    var dataByCoordSys = payload.dataByCoordSys;\n\n    if (payload.tooltip && payload.x != null && payload.y != null) {\n      var el = proxyRect;\n      el.position = [payload.x, payload.y];\n      el.update();\n      el.tooltip = payload.tooltip; // Manually show tooltip while view is not using zrender elements.\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        target: el\n      }, dispatchAction);\n    } else if (dataByCoordSys) {\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        event: {},\n        dataByCoordSys: payload.dataByCoordSys,\n        tooltipOption: payload.tooltipOption\n      }, dispatchAction);\n    } else if (payload.seriesIndex != null) {\n      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n        return;\n      }\n\n      var pointInfo = findPointFromSeries(payload, ecModel);\n      var cx = pointInfo.point[0];\n      var cy = pointInfo.point[1];\n\n      if (cx != null && cy != null) {\n        this._tryShow({\n          offsetX: cx,\n          offsetY: cy,\n          position: payload.position,\n          target: pointInfo.el,\n          event: {}\n        }, dispatchAction);\n      }\n    } else if (payload.x != null && payload.y != null) {\n      // FIXME\n      // should wrap dispatchAction like `axisPointer/globalListener` ?\n      api.dispatchAction({\n        type: 'updateAxisPointer',\n        x: payload.x,\n        y: payload.y\n      });\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        target: api.getZr().findHover(payload.x, payload.y).target,\n        event: {}\n      }, dispatchAction);\n    }\n  },\n  manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n    var tooltipContent = this._tooltipContent;\n\n    if (!this._alwaysShowContent && this._tooltipModel) {\n      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n    }\n\n    this._lastX = this._lastY = null;\n\n    if (payload.from !== this.uid) {\n      this._hide(makeDispatchAction(payload, api));\n    }\n  },\n  // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n  // and tooltip.\n  _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n    var seriesIndex = payload.seriesIndex;\n    var dataIndex = payload.dataIndex;\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n      return;\n    }\n\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (!seriesModel) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model, tooltipModel]);\n\n    if (tooltipModel.get('trigger') !== 'axis') {\n      return;\n    }\n\n    api.dispatchAction({\n      type: 'updateAxisPointer',\n      seriesIndex: seriesIndex,\n      dataIndex: dataIndex,\n      position: payload.position\n    });\n    return true;\n  },\n  _tryShow: function (e, dispatchAction) {\n    var el = e.target;\n    var tooltipModel = this._tooltipModel;\n\n    if (!tooltipModel) {\n      return;\n    } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n\n\n    this._lastX = e.offsetX;\n    this._lastY = e.offsetY;\n    var dataByCoordSys = e.dataByCoordSys;\n\n    if (dataByCoordSys && dataByCoordSys.length) {\n      this._showAxisTooltip(dataByCoordSys, e);\n    } // Always show item tooltip if mouse is on the element with dataIndex\n    else if (el && el.dataIndex != null) {\n        this._lastDataByCoordSys = null;\n\n        this._showSeriesItemTooltip(e, el, dispatchAction);\n      } // Tooltip provided directly. Like legend.\n      else if (el && el.tooltip) {\n          this._lastDataByCoordSys = null;\n\n          this._showComponentItemTooltip(e, el, dispatchAction);\n        } else {\n          this._lastDataByCoordSys = null;\n\n          this._hide(dispatchAction);\n        }\n  },\n  _showOrMove: function (tooltipModel, cb) {\n    // showDelay is used in this case: tooltip.enterable is set\n    // as true. User intent to move mouse into tooltip and click\n    // something. `showDelay` makes it easyer to enter the content\n    // but tooltip do not move immediately.\n    var delay = tooltipModel.get('showDelay');\n    cb = zrUtil.bind(cb, this);\n    clearTimeout(this._showTimout);\n    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\n  },\n  _showAxisTooltip: function (dataByCoordSys, e) {\n    var ecModel = this._ecModel;\n    var globalTooltipModel = this._tooltipModel;\n    var point = [e.offsetX, e.offsetY];\n    var singleDefaultHTML = [];\n    var singleParamsList = [];\n    var singleTooltipModel = buildTooltipModel([e.tooltipOption, globalTooltipModel]);\n    each(dataByCoordSys, function (itemCoordSys) {\n      // var coordParamList = [];\n      // var coordDefaultHTML = [];\n      // var coordTooltipModel = buildTooltipModel([\n      //     e.tooltipOption,\n      //     itemCoordSys.tooltipOption,\n      //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n      //     globalTooltipModel\n      // ]);\n      // var displayMode = coordTooltipModel.get('displayMode');\n      // var paramsList = displayMode === 'single' ? singleParamsList : [];\n      each(itemCoordSys.dataByAxis, function (item) {\n        var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n        var axisValue = item.value;\n        var seriesDefaultHTML = [];\n\n        if (!axisModel || axisValue == null) {\n          return;\n        }\n\n        var valueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, item.seriesDataIndices, item.valueLabelOpt);\n        zrUtil.each(item.seriesDataIndices, function (idxItem) {\n          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n          var dataIndex = idxItem.dataIndexInside;\n          var dataParams = series && series.getDataParams(dataIndex);\n          dataParams.axisDim = item.axisDim;\n          dataParams.axisIndex = item.axisIndex;\n          dataParams.axisType = item.axisType;\n          dataParams.axisId = item.axisId;\n          dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n          dataParams.axisValueLabel = valueLabel;\n\n          if (dataParams) {\n            singleParamsList.push(dataParams);\n            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n          }\n        }); // Default tooltip content\n        // FIXME\n        // (1) shold be the first data which has name?\n        // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n\n        var firstLine = valueLabel;\n        singleDefaultHTML.push((firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '') + seriesDefaultHTML.join('<br />'));\n      });\n    }, this); // In most case, the second axis is shown upper than the first one.\n\n    singleDefaultHTML.reverse();\n    singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n    var positionExpr = e.position;\n\n    this._showOrMove(singleTooltipModel, function () {\n      if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, singleParamsList);\n      } else {\n        this._showTooltipContent(singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(), point[0], point[1], positionExpr);\n      }\n    }); // Do not trigger events here, because this branch only be entered\n    // from dispatchAction.\n\n  },\n  _showSeriesItemTooltip: function (e, el, dispatchAction) {\n    var ecModel = this._ecModel; // Use dataModel in element if possible\n    // Used when mouseover on a element like markPoint or edge\n    // In which case, the data is not main data in series.\n\n    var seriesIndex = el.seriesIndex;\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.\n\n    var dataModel = el.dataModel || seriesModel;\n    var dataIndex = el.dataIndex;\n    var dataType = el.dataType;\n    var data = dataModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model, this._tooltipModel]);\n    var tooltipTrigger = tooltipModel.get('trigger');\n\n    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n      return;\n    }\n\n    var params = dataModel.getDataParams(dataIndex, dataType);\n    var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n    this._showOrMove(tooltipModel, function () {\n      this._showTooltipContent(tooltipModel, defaultHtml, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target);\n    }); // FIXME\n    // duplicated showtip if manuallyShowTip is called from dispatchAction.\n\n\n    dispatchAction({\n      type: 'showTip',\n      dataIndexInside: dataIndex,\n      dataIndex: data.getRawIndex(dataIndex),\n      seriesIndex: seriesIndex,\n      from: this.uid\n    });\n  },\n  _showComponentItemTooltip: function (e, el, dispatchAction) {\n    var tooltipOpt = el.tooltip;\n\n    if (typeof tooltipOpt === 'string') {\n      var content = tooltipOpt;\n      tooltipOpt = {\n        content: content,\n        // Fixed formatter\n        formatter: content\n      };\n    }\n\n    var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n    var defaultHtml = subTooltipModel.get('content');\n    var asyncTicket = Math.random(); // Do not check whether `trigger` is 'none' here, because `trigger`\n    // only works on cooridinate system. In fact, we have not found case\n    // that requires setting `trigger` nothing on component yet.\n\n    this._showOrMove(subTooltipModel, function () {\n      this._showTooltipContent(subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {}, asyncTicket, e.offsetX, e.offsetY, e.position, el);\n    }); // If not dispatch showTip, tip may be hide triggered by axis.\n\n\n    dispatchAction({\n      type: 'showTip',\n      from: this.uid\n    });\n  },\n  _showTooltipContent: function (tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el) {\n    // Reset ticket\n    this._ticket = '';\n\n    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n      return;\n    }\n\n    var tooltipContent = this._tooltipContent;\n    var formatter = tooltipModel.get('formatter');\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var html = defaultHtml;\n\n    if (formatter && typeof formatter === 'string') {\n      html = formatUtil.formatTpl(formatter, params, true);\n    } else if (typeof formatter === 'function') {\n      var callback = bind(function (cbTicket, html) {\n        if (cbTicket === this._ticket) {\n          tooltipContent.setContent(html);\n\n          this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n        }\n      }, this);\n      this._ticket = asyncTicket;\n      html = formatter(params, asyncTicket, callback);\n    }\n\n    tooltipContent.setContent(html);\n    tooltipContent.show(tooltipModel);\n\n    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n  },\n\n  /**\n   * @param  {string|Function|Array.<number>|Object} positionExpr\n   * @param  {number} x Mouse x\n   * @param  {number} y Mouse y\n   * @param  {boolean} confine Whether confine tooltip content in view rect.\n   * @param  {Object|<Array.<Object>} params\n   * @param  {module:zrender/Element} el target element\n   * @param  {module:echarts/ExtensionAPI} api\n   * @return {Array.<number>}\n   */\n  _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n    var viewWidth = this._api.getWidth();\n\n    var viewHeight = this._api.getHeight();\n\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var contentSize = content.getSize();\n    var align = tooltipModel.get('align');\n    var vAlign = tooltipModel.get('verticalAlign');\n    var rect = el && el.getBoundingRect().clone();\n    el && rect.applyTransform(el.transform);\n\n    if (typeof positionExpr === 'function') {\n      // Callback of position can be an array or a string specify the position\n      positionExpr = positionExpr([x, y], params, content.el, rect, {\n        viewSize: [viewWidth, viewHeight],\n        contentSize: contentSize.slice()\n      });\n    }\n\n    if (zrUtil.isArray(positionExpr)) {\n      x = parsePercent(positionExpr[0], viewWidth);\n      y = parsePercent(positionExpr[1], viewHeight);\n    } else if (zrUtil.isObject(positionExpr)) {\n      positionExpr.width = contentSize[0];\n      positionExpr.height = contentSize[1];\n      var layoutRect = layoutUtil.getLayoutRect(positionExpr, {\n        width: viewWidth,\n        height: viewHeight\n      });\n      x = layoutRect.x;\n      y = layoutRect.y;\n      align = null; // When positionExpr is left/top/right/bottom,\n      // align and verticalAlign will not work.\n\n      vAlign = null;\n    } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n    else if (typeof positionExpr === 'string' && el) {\n        var pos = calcTooltipPosition(positionExpr, rect, contentSize);\n        x = pos[0];\n        y = pos[1];\n      } else {\n        var pos = refixTooltipPosition(x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\n        x = pos[0];\n        y = pos[1];\n      }\n\n    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n    if (tooltipModel.get('confine')) {\n      var pos = confineTooltipPosition(x, y, content.el, viewWidth, viewHeight);\n      x = pos[0];\n      y = pos[1];\n    }\n\n    content.moveTo(x, y);\n  },\n  // FIXME\n  // Should we remove this but leave this to user?\n  _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n    var lastCoordSys = this._lastDataByCoordSys;\n    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\n    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n      var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n      contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n        var thisItem = thisDataByAxis[indexAxis] || {};\n        var lastIndices = lastItem.seriesDataIndices || [];\n        var newIndices = thisItem.seriesDataIndices || [];\n        contentNotChanged &= lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\n        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n          var newIdxItem = newIndices[j];\n          contentNotChanged &= lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n        });\n      });\n    });\n    this._lastDataByCoordSys = dataByCoordSys;\n    return !!contentNotChanged;\n  },\n  _hide: function (dispatchAction) {\n    // Do not directly hideLater here, because this behavior may be prevented\n    // in dispatchAction when showTip is dispatched.\n    // FIXME\n    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n    this._lastDataByCoordSys = null;\n    dispatchAction({\n      type: 'hideTip',\n      from: this.uid\n    });\n  },\n  dispose: function (ecModel, api) {\n    if (env.node || env.wxa) {\n      return;\n    }\n\n    this._tooltipContent.hide();\n\n    globalListener.unregister('itemTooltip', api);\n  }\n});\n/**\n * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n * From top to bottom. (the last one should be globalTooltipModel);\n */\n\n\nfunction buildTooltipModel(modelCascade) {\n  var resultModel = modelCascade.pop();\n\n  while (modelCascade.length) {\n    var tooltipOpt = modelCascade.pop();\n\n    if (tooltipOpt) {\n      if (Model.isInstance(tooltipOpt)) {\n        tooltipOpt = tooltipOpt.get('tooltip', true);\n      } // In each data item tooltip can be simply write:\n      // {\n      //  value: 10,\n      //  tooltip: 'Something you need to know'\n      // }\n\n\n      if (typeof tooltipOpt === 'string') {\n        tooltipOpt = {\n          formatter: tooltipOpt\n        };\n      }\n\n      resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n    }\n  }\n\n  return resultModel;\n}\n\nfunction makeDispatchAction(payload, api) {\n  return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n}\n\nfunction refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n\n  if (gapH != null) {\n    if (x + width + gapH > viewWidth) {\n      x -= width + gapH;\n    } else {\n      x += gapH;\n    }\n  }\n\n  if (gapV != null) {\n    if (y + height + gapV > viewHeight) {\n      y -= height + gapV;\n    } else {\n      y += gapV;\n    }\n  }\n\n  return [x, y];\n}\n\nfunction confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n  x = Math.min(x + width, viewWidth) - width;\n  y = Math.min(y + height, viewHeight) - height;\n  x = Math.max(x, 0);\n  y = Math.max(y, 0);\n  return [x, y];\n}\n\nfunction getOuterSize(el) {\n  var width = el.clientWidth;\n  var height = el.clientHeight; // Consider browser compatibility.\n  // IE8 does not support getComputedStyle.\n\n  if (document.defaultView && document.defaultView.getComputedStyle) {\n    var stl = document.defaultView.getComputedStyle(el);\n\n    if (stl) {\n      width += parseInt(stl.paddingLeft, 10) + parseInt(stl.paddingRight, 10) + parseInt(stl.borderLeftWidth, 10) + parseInt(stl.borderRightWidth, 10);\n      height += parseInt(stl.paddingTop, 10) + parseInt(stl.paddingBottom, 10) + parseInt(stl.borderTopWidth, 10) + parseInt(stl.borderBottomWidth, 10);\n    }\n  }\n\n  return {\n    width: width,\n    height: height\n  };\n}\n\nfunction calcTooltipPosition(position, rect, contentSize) {\n  var domWidth = contentSize[0];\n  var domHeight = contentSize[1];\n  var gap = 5;\n  var x = 0;\n  var y = 0;\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n\n  switch (position) {\n    case 'inside':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'top':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y - domHeight - gap;\n      break;\n\n    case 'bottom':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight + gap;\n      break;\n\n    case 'left':\n      x = rect.x - domWidth - gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'right':\n      x = rect.x + rectWidth + gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n  }\n\n  return [x, y];\n}\n\nfunction isCenterAlign(align) {\n  return align === 'center' || align === 'middle';\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar _model = require(\"../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar _clazz = require(\"../util/clazz\");\n\nvar enableClassExtend = _clazz.enableClassExtend;\nvar enableClassCheck = _clazz.enableClassCheck;\n\nvar lineStyleMixin = require(\"./mixin/lineStyle\");\n\nvar areaStyleMixin = require(\"./mixin/areaStyle\");\n\nvar textStyleMixin = require(\"./mixin/textStyle\");\n\nvar itemStyleMixin = require(\"./mixin/itemStyle\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/model/Model\n */\nvar mixin = zrUtil.mixin;\nvar inner = makeInner();\n/**\n * @alias module:echarts/model/Model\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} [parentModel]\n * @param {module:echarts/model/Global} [ecModel]\n */\n\nfunction Model(option, parentModel, ecModel) {\n  /**\n   * @type {module:echarts/model/Model}\n   * @readOnly\n   */\n  this.parentModel = parentModel;\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n\n  this.ecModel = ecModel;\n  /**\n   * @type {Object}\n   * @protected\n   */\n\n  this.option = option; // Simple optimization\n  // if (this.init) {\n  //     if (arguments.length <= 4) {\n  //         this.init(option, parentModel, ecModel, extraOpt);\n  //     }\n  //     else {\n  //         this.init.apply(this, arguments);\n  //     }\n  // }\n}\n\nModel.prototype = {\n  constructor: Model,\n\n  /**\n   * Model 的初始化函数\n   * @param {Object} option\n   */\n  init: null,\n\n  /**\n   * 从新的 Option merge\n   */\n  mergeOption: function (option) {\n    zrUtil.merge(this.option, option, true);\n  },\n\n  /**\n   * @param {string|Array.<string>} path\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  get: function (path, ignoreParent) {\n    if (path == null) {\n      return this.option;\n    }\n\n    return doGet(this.option, this.parsePath(path), !ignoreParent && getParent(this, path));\n  },\n\n  /**\n   * @param {string} key\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  getShallow: function (key, ignoreParent) {\n    var option = this.option;\n    var val = option == null ? option : option[key];\n    var parentModel = !ignoreParent && getParent(this, key);\n\n    if (val == null && parentModel) {\n      val = parentModel.getShallow(key);\n    }\n\n    return val;\n  },\n\n  /**\n   * @param {string|Array.<string>} [path]\n   * @param {module:echarts/model/Model} [parentModel]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path, parentModel) {\n    var obj = path == null ? this.option : doGet(this.option, path = this.parsePath(path));\n    var thisParentModel;\n    parentModel = parentModel || (thisParentModel = getParent(this, path)) && thisParentModel.getModel(path);\n    return new Model(obj, parentModel, this.ecModel);\n  },\n\n  /**\n   * If model has option\n   */\n  isEmpty: function () {\n    return this.option == null;\n  },\n  restoreData: function () {},\n  // Pending\n  clone: function () {\n    var Ctor = this.constructor;\n    return new Ctor(zrUtil.clone(this.option));\n  },\n  setReadOnly: function (properties) {// clazzUtil.setReadOnly(this, properties);\n  },\n  // If path is null/undefined, return null/undefined.\n  parsePath: function (path) {\n    if (typeof path === 'string') {\n      path = path.split('.');\n    }\n\n    return path;\n  },\n\n  /**\n   * @param {Function} getParentMethod\n   *        param {Array.<string>|string} path\n   *        return {module:echarts/model/Model}\n   */\n  customizeGetParent: function (getParentMethod) {\n    inner(this).getParent = getParentMethod;\n  },\n  isAnimationEnabled: function () {\n    if (!env.node) {\n      if (this.option.animation != null) {\n        return !!this.option.animation;\n      } else if (this.parentModel) {\n        return this.parentModel.isAnimationEnabled();\n      }\n    }\n  }\n};\n\nfunction doGet(obj, pathArr, parentModel) {\n  for (var i = 0; i < pathArr.length; i++) {\n    // Ignore empty\n    if (!pathArr[i]) {\n      continue;\n    } // obj could be number/string/... (like 0)\n\n\n    obj = obj && typeof obj === 'object' ? obj[pathArr[i]] : null;\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  if (obj == null && parentModel) {\n    obj = parentModel.get(pathArr);\n  }\n\n  return obj;\n} // `path` can be null/undefined\n\n\nfunction getParent(model, path) {\n  var getParentMethod = inner(model).getParent;\n  return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n} // Enable Model.extend.\n\n\nenableClassExtend(Model);\nenableClassCheck(Model);\nmixin(Model, lineStyleMixin);\nmixin(Model, areaStyleMixin);\nmixin(Model, textStyleMixin);\nmixin(Model, itemStyleMixin);\nvar _default = Model;\nmodule.exports = _default;","var easingFuncs = require(\"./easing\");\n\n/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\nfunction Clip(options) {\n  this._target = options.target; // 生命周期\n\n  this._life = options.life || 1000; // 延时\n\n  this._delay = options.delay || 0; // 开始时间\n  // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n\n  this._initialized = false; // 是否循环\n\n  this.loop = options.loop == null ? false : options.loop;\n  this.gap = options.gap || 0;\n  this.easing = options.easing || 'Linear';\n  this.onframe = options.onframe;\n  this.ondestroy = options.ondestroy;\n  this.onrestart = options.onrestart;\n  this._pausedTime = 0;\n  this._paused = false;\n}\n\nClip.prototype = {\n  constructor: Clip,\n  step: function (globalTime, deltaTime) {\n    // Set startTime on first step, or _startTime may has milleseconds different between clips\n    // PENDING\n    if (!this._initialized) {\n      this._startTime = globalTime + this._delay;\n      this._initialized = true;\n    }\n\n    if (this._paused) {\n      this._pausedTime += deltaTime;\n      return;\n    }\n\n    var percent = (globalTime - this._startTime - this._pausedTime) / this._life; // 还没开始\n\n    if (percent < 0) {\n      return;\n    }\n\n    percent = Math.min(percent, 1);\n    var easing = this.easing;\n    var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n    var schedule = typeof easingFunc === 'function' ? easingFunc(percent) : percent;\n    this.fire('frame', schedule); // 结束\n\n    if (percent == 1) {\n      if (this.loop) {\n        this.restart(globalTime); // 重新开始周期\n        // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n\n        return 'restart';\n      } // 动画完成将这个控制器标识为待删除\n      // 在Animation.update中进行批量删除\n\n\n      this._needsRemove = true;\n      return 'destroy';\n    }\n\n    return null;\n  },\n  restart: function (globalTime) {\n    var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n    this._startTime = globalTime - remainder + this.gap;\n    this._pausedTime = 0;\n    this._needsRemove = false;\n  },\n  fire: function (eventType, arg) {\n    eventType = 'on' + eventType;\n\n    if (this[eventType]) {\n      this[eventType](this._target, arg);\n    }\n  },\n  pause: function () {\n    this._paused = true;\n  },\n  resume: function () {\n    this._paused = false;\n  }\n};\nvar _default = Clip;\nmodule.exports = _default;","var Path = require(\"../Path\");\n\n/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\nvar _default = Path.extend({\n  type: 'ring',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    r0: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var PI2 = Math.PI * 2;\n    ctx.moveTo(x + shape.r, y);\n    ctx.arc(x, y, shape.r, 0, PI2, false);\n    ctx.moveTo(x + shape.r0, y);\n    ctx.arc(x, y, shape.r0, 0, PI2, true);\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"../core/util\");\n\nvar Gradient = require(\"./Gradient\");\n\n/**\n * x, y, x2, y2 are all percent from 0 to 1\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @param {number} [x2=1]\n * @param {number} [y2=0]\n * @param {Array.<Object>} colorStops\n * @param {boolean} [globalCoord=false]\n */\nvar LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'linear', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0 : x;\n  this.y = y == null ? 0 : y;\n  this.x2 = x2 == null ? 1 : x2;\n  this.y2 = y2 == null ? 0 : y2; // Can be cloned\n\n  this.type = 'linear'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nLinearGradient.prototype = {\n  constructor: LinearGradient\n};\nzrUtil.inherits(LinearGradient, Gradient);\nvar _default = LinearGradient;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AxisPointerModel = echarts.extendComponentModel({\n  type: 'axisPointer',\n  coordSysAxesInfo: null,\n  defaultOption: {\n    // 'auto' means that show when triggered by tooltip or handle.\n    show: 'auto',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: null,\n    // set default in AxisPonterView.js\n    zlevel: 0,\n    z: 50,\n    type: 'line',\n    // axispointer triggered by tootip determine snap automatically,\n    // see `modelHelper`.\n    snap: false,\n    triggerTooltip: true,\n    value: null,\n    status: null,\n    // Init value depends on whether handle is used.\n    // [group0, group1, ...]\n    // Each group can be: {\n    //      mapper: function () {},\n    //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n    //      xAxisId: ...,\n    //      yAxisName: ...,\n    //      angleAxisIndex: ...\n    // }\n    // mapper: can be ignored.\n    //      input: {axisInfo, value}\n    //      output: {axisInfo, value}\n    link: [],\n    // Do not set 'auto' here, otherwise global animation: false\n    // will not effect at this axispointer.\n    animation: null,\n    animationDurationUpdate: 200,\n    lineStyle: {\n      color: '#aaa',\n      width: 1,\n      type: 'solid'\n    },\n    shadowStyle: {\n      color: 'rgba(150,150,150,0.3)'\n    },\n    label: {\n      show: true,\n      formatter: null,\n      // string | Function\n      precision: 'auto',\n      // Or a number like 0, 1, 2 ...\n      margin: 3,\n      color: '#fff',\n      padding: [5, 7, 5, 7],\n      backgroundColor: 'auto',\n      // default: axis line color\n      borderColor: null,\n      borderWidth: 0,\n      shadowBlur: 3,\n      shadowColor: '#aaa' // Considering applicability, common style should\n      // better not have shadowOffset.\n      // shadowOffsetX: 0,\n      // shadowOffsetY: 2\n\n    },\n    handle: {\n      show: false,\n      icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z',\n      // jshint ignore:line\n      size: 45,\n      // handle margin is from symbol center to axis, which is stable when circular move.\n      margin: 50,\n      // color: '#1b8bbd'\n      // color: '#2f4554'\n      color: '#333',\n      shadowBlur: 3,\n      shadowColor: '#aaa',\n      shadowOffsetX: 0,\n      shadowOffsetY: 2,\n      // For mobile performance\n      throttle: 40\n    }\n  }\n});\nvar _default = AxisPointerModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AxisModel = ComponentModel.extend({\n  type: 'cartesian2dAxis',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Axis2D}\n   */\n  axis: null,\n\n  /**\n   * @override\n   */\n  init: function () {\n    AxisModel.superApply(this, 'init', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function () {\n    AxisModel.superApply(this, 'mergeOption', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  restoreData: function () {\n    AxisModel.superApply(this, 'restoreData', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   * @return {module:echarts/model/Component}\n   */\n  getCoordSysModel: function () {\n    return this.ecModel.queryComponents({\n      mainType: 'grid',\n      index: this.option.gridIndex,\n      id: this.option.gridId\n    })[0];\n  }\n});\n\nfunction getAxisType(axisDim, option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}\n\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\nvar extraOption = {\n  // gridIndex: 0,\n  // gridId: '',\n  // Offset is for multiple axis on the same position\n  offset: 0\n};\naxisModelCreator('x', AxisModel, getAxisType, extraOption);\naxisModelCreator('y', AxisModel, getAxisType, extraOption);\nvar _default = AxisModel;\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar debugMode = _config.debugMode;\n\nvar log = function () {};\n\nif (debugMode === 1) {\n  log = function () {\n    for (var k in arguments) {\n      throw new Error(arguments[k]);\n    }\n  };\n} else if (debugMode > 1) {\n  log = function () {\n    for (var k in arguments) {\n      console.log(arguments[k]);\n    }\n  };\n}\n\nvar _default = log;\nmodule.exports = _default;","var _vector = require(\"./vector\");\n\nvar v2Create = _vector.create;\nvar v2DistSquare = _vector.distSquare;\n\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\nvar mathPow = Math.pow;\nvar mathSqrt = Math.sqrt;\nvar EPSILON = 1e-8;\nvar EPSILON_NUMERIC = 1e-4;\nvar THREE_SQRT = mathSqrt(3);\nvar ONE_THIRD = 1 / 3; // 临时变量\n\nvar _v0 = v2Create();\n\nvar _v1 = v2Create();\n\nvar _v2 = v2Create();\n\nfunction isAroundZero(val) {\n  return val > -EPSILON && val < EPSILON;\n}\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * 计算三次贝塞尔值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return onet * onet * (onet * p0 + 3 * t * p1) + t * t * (t * p3 + 3 * onet * p2);\n}\n/**\n * 计算三次贝塞尔导数值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicDerivativeAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return 3 * (((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet + (p3 - p2) * t * t);\n}\n/**\n * 计算三次贝塞尔方程根，使用盛金公式\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} val\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction cubicRootAt(p0, p1, p2, p3, val, roots) {\n  // Evaluate roots of cubic functions\n  var a = p3 + 3 * (p1 - p2) - p0;\n  var b = 3 * (p2 - p1 * 2 + p0);\n  var c = 3 * (p1 - p0);\n  var d = p0 - val;\n  var A = b * b - 3 * a * c;\n  var B = b * c - 9 * a * d;\n  var C = c * c - 3 * b * d;\n  var n = 0;\n\n  if (isAroundZero(A) && isAroundZero(B)) {\n    if (isAroundZero(b)) {\n      roots[0] = 0;\n    } else {\n      var t1 = -c / b; //t1, t2, t3, b is not zero\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = B * B - 4 * A * C;\n\n    if (isAroundZero(disc)) {\n      var K = B / A;\n      var t1 = -b / a + K; // t1, a is not zero\n\n      var t2 = -K / 2; // t2, t3\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n      var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n\n      if (Y1 < 0) {\n        Y1 = -mathPow(-Y1, ONE_THIRD);\n      } else {\n        Y1 = mathPow(Y1, ONE_THIRD);\n      }\n\n      if (Y2 < 0) {\n        Y2 = -mathPow(-Y2, ONE_THIRD);\n      } else {\n        Y2 = mathPow(Y2, ONE_THIRD);\n      }\n\n      var t1 = (-b - (Y1 + Y2)) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else {\n      var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n      var theta = Math.acos(T) / 3;\n      var ASqrt = mathSqrt(A);\n      var tmp = Math.cos(theta);\n      var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n      var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n      var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n\n      if (t3 >= 0 && t3 <= 1) {\n        roots[n++] = t3;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算三次贝塞尔方程极限值的位置\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {Array.<number>} extrema\n * @return {number} 有效数目\n */\n\n\nfunction cubicExtrema(p0, p1, p2, p3, extrema) {\n  var b = 6 * p2 - 12 * p1 + 6 * p0;\n  var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n  var c = 3 * p1 - 3 * p0;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      extrema[0] = -b / (2 * a);\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        extrema[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 细分三次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction cubicSubdivide(p0, p1, p2, p3, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p23 = (p3 - p2) * t + p2;\n  var p012 = (p12 - p01) * t + p01;\n  var p123 = (p23 - p12) * t + p12;\n  var p0123 = (p123 - p012) * t + p012; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012;\n  out[3] = p0123; // Seg1\n\n  out[4] = p0123;\n  out[5] = p123;\n  out[6] = p23;\n  out[7] = p3;\n}\n/**\n * 投射点到三次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} [out] 投射点\n * @return {number}\n */\n\n\nfunction cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  var prev;\n  var next;\n  var d1;\n  var d2;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n    _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n    d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    prev = t - interval;\n    next = t + interval; // t - interval\n\n    _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n    _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n    d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = cubicAt(x0, x1, x2, x3, next);\n      _v2[1] = cubicAt(y0, y1, y2, y3, next);\n      d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = cubicAt(x0, x1, x2, x3, t);\n    out[1] = cubicAt(y0, y1, y2, y3, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n/**\n * 计算二次方贝塞尔值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticAt(p0, p1, p2, t) {\n  var onet = 1 - t;\n  return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n}\n/**\n * 计算二次方贝塞尔导数值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticDerivativeAt(p0, p1, p2, t) {\n  return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n}\n/**\n * 计算二次方贝塞尔方程根\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction quadraticRootAt(p0, p1, p2, val, roots) {\n  var a = p0 - 2 * p1 + p2;\n  var b = 2 * (p1 - p0);\n  var c = p0 - val;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      var t1 = -b / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算二次贝塞尔方程极限值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @return {number}\n */\n\n\nfunction quadraticExtremum(p0, p1, p2) {\n  var divider = p0 + p2 - 2 * p1;\n\n  if (divider === 0) {\n    // p1 is center of p0 and p2\n    return 0.5;\n  } else {\n    return (p0 - p1) / divider;\n  }\n}\n/**\n * 细分二次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction quadraticSubdivide(p0, p1, p2, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p012 = (p12 - p01) * t + p01; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012; // Seg1\n\n  out[3] = p012;\n  out[4] = p12;\n  out[5] = p2;\n}\n/**\n * 投射点到二次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} out 投射点\n * @return {number}\n */\n\n\nfunction quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = quadraticAt(x0, x1, x2, _t);\n    _v1[1] = quadraticAt(y0, y1, y2, _t);\n    var d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    var prev = t - interval;\n    var next = t + interval; // t - interval\n\n    _v1[0] = quadraticAt(x0, x1, x2, prev);\n    _v1[1] = quadraticAt(y0, y1, y2, prev);\n    var d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = quadraticAt(x0, x1, x2, next);\n      _v2[1] = quadraticAt(y0, y1, y2, next);\n      var d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = quadraticAt(x0, x1, x2, t);\n    out[1] = quadraticAt(y0, y1, y2, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n\nexports.cubicAt = cubicAt;\nexports.cubicDerivativeAt = cubicDerivativeAt;\nexports.cubicRootAt = cubicRootAt;\nexports.cubicExtrema = cubicExtrema;\nexports.cubicSubdivide = cubicSubdivide;\nexports.cubicProjectPoint = cubicProjectPoint;\nexports.quadraticAt = quadraticAt;\nexports.quadraticDerivativeAt = quadraticDerivativeAt;\nexports.quadraticRootAt = quadraticRootAt;\nexports.quadraticExtremum = quadraticExtremum;\nexports.quadraticSubdivide = quadraticSubdivide;\nexports.quadraticProjectPoint = quadraticProjectPoint;","var graphic = require(\"../../util/graphic\");\n\nvar BaseAxisPointer = require(\"./BaseAxisPointer\");\n\nvar viewHelper = require(\"./viewHelper\");\n\nvar cartesianAxisHelper = require(\"../../coord/cartesian/cartesianAxisHelper\");\n\nvar AxisView = require(\"../axis/AxisView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar CartesianAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisPointerType = axisPointerModel.get('type');\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  },\n\n  /**\n   * @override\n   */\n  getHandleTransform: function (value, axisModel, axisPointerModel) {\n    var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n      labelInside: false\n    });\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n    return {\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  },\n\n  /**\n   * @override\n   */\n  updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisExtent = axis.getGlobalExtent(true);\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var dimIndex = axis.dim === 'x' ? 0 : 1;\n    var currPosition = transform.position;\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex]; // Make tooltip do not overlap axisPointer and in the middle of the grid.\n\n    var tooltipOptions = [{\n      verticalAlign: 'middle'\n    }, {\n      align: 'center'\n    }];\n    return {\n      position: currPosition,\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: tooltipOptions[dimIndex]\n    };\n  }\n});\n\nfunction getCartesian(grid, axis) {\n  var opt = {};\n  opt[axis.dim + 'AxisIndex'] = axis.index;\n  return grid.getCartesian(opt);\n}\n\nvar pointerShapeBuilder = {\n  line: function (axis, pixelValue, otherExtent, elStyle) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getAxisDimIndex(axis));\n    graphic.subPixelOptimizeLine({\n      shape: targetShape,\n      style: elStyle\n    });\n    return {\n      type: 'Line',\n      shape: targetShape\n    };\n  },\n  shadow: function (axis, pixelValue, otherExtent, elStyle) {\n    var bandWidth = Math.max(1, axis.getBandWidth());\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getAxisDimIndex(axis))\n    };\n  }\n};\n\nfunction getAxisDimIndex(axis) {\n  return axis.dim === 'x' ? 0 : 1;\n}\n\nAxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\nvar _default = CartesianAxisPointer;\nmodule.exports = _default;","var Path = require(\"../Path\");\n\nvar fixClipWithShadow = require(\"../helper/fixClipWithShadow\");\n\n/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\nvar _default = Path.extend({\n  type: 'sector',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r0: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r0 = Math.max(shape.r0 || 0, 0);\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n    ctx.lineTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n    ctx.lineTo(Math.cos(endAngle) * r0 + x, Math.sin(endAngle) * r0 + y);\n\n    if (r0 !== 0) {\n      ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n    }\n\n    ctx.closePath();\n  }\n});\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// (1) The code `if (__DEV__) ...` can be removed by build tool.\n// (2) If intend to use `__DEV__`, this module should be imported. Use a global\n// variable `__DEV__` may cause that miss the declaration (see #6535), or the\n// declaration is behind of the using position (for example in `Model.extent`,\n// And tools like rollup can not analysis the dependency if not import).\nvar dev; // In browser\n\nif (typeof window !== 'undefined') {\n  dev = window.__DEV__;\n} // In node\nelse if (typeof global !== 'undefined') {\n    dev = global.__DEV__;\n  }\n\nif (typeof dev === 'undefined') {\n  dev = true;\n}\n\nvar __DEV__ = dev;\nexports.__DEV__ = __DEV__;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar _format = require(\"../util/format\");\n\nvar formatTime = _format.formatTime;\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\nvar getTooltipMarker = _format.getTooltipMarker;\n\nvar modelUtil = require(\"../util/model\");\n\nvar ComponentModel = require(\"./Component\");\n\nvar colorPaletteMixin = require(\"./mixin/colorPalette\");\n\nvar dataFormatMixin = require(\"../model/mixin/dataFormat\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n\nvar _task = require(\"../stream/task\");\n\nvar createTask = _task.createTask;\n\nvar _sourceHelper = require(\"../data/helper/sourceHelper\");\n\nvar prepareSource = _sourceHelper.prepareSource;\nvar getSource = _sourceHelper.getSource;\n\nvar _dataProvider = require(\"../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = modelUtil.makeInner();\nvar SeriesModel = ComponentModel.extend({\n  type: 'series.__base__',\n\n  /**\n   * @readOnly\n   */\n  seriesIndex: 0,\n  // coodinateSystem will be injected in the echarts/CoordinateSystem\n  coordinateSystem: null,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * Data provided for legend\n   * @type {Function}\n   */\n  // PENDING\n  legendDataProvider: null,\n\n  /**\n   * Access path of color for visual\n   */\n  visualColorAccessPath: 'itemStyle.color',\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  init: function (option, parentModel, ecModel, extraOpt) {\n    /**\n     * @type {number}\n     * @readOnly\n     */\n    this.seriesIndex = this.componentIndex;\n    this.dataTask = createTask({\n      count: dataTaskCount,\n      reset: dataTaskReset\n    });\n    this.dataTask.context = {\n      model: this\n    };\n    this.mergeDefaultAndTheme(option, ecModel);\n    prepareSource(this);\n    var data = this.getInitialData(option, ecModel);\n    wrapData(data, this);\n    this.dataTask.context.data = data;\n\n    /**\n     * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n     * @private\n     */\n    inner(this).dataBeforeProcessed = data; // If we reverse the order (make data firstly, and then make\n    // dataBeforeProcessed by cloneShallow), cloneShallow will\n    // cause data.graph.data !== data when using\n    // module:echarts/data/Graph or module:echarts/data/Tree.\n    // See module:echarts/data/helper/linkList\n    // Theoretically, it is unreasonable to call `seriesModel.getData()` in the model\n    // init or merge stage, because the data can be restored. So we do not `restoreData`\n    // and `setData` here, which forbids calling `seriesModel.getData()` in this stage.\n    // Call `seriesModel.getRawData()` instead.\n    // this.restoreData();\n\n    autoSeriesName(this);\n  },\n\n  /**\n   * Util for merge default and theme to option\n   * @param  {Object} option\n   * @param  {module:echarts/model/Global} ecModel\n   */\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? getLayoutParams(option) : {}; // Backward compat: using subType on theme.\n    // But if name duplicate between series subType\n    // (for example: parallel) add component mainType,\n    // add suffix 'Series'.\n\n    var themeSubType = this.subType;\n\n    if (ComponentModel.hasClass(themeSubType)) {\n      themeSubType += 'Series';\n    }\n\n    zrUtil.merge(option, ecModel.getTheme().get(this.subType));\n    zrUtil.merge(option, this.getDefaultOption()); // Default label emphasis `show`\n\n    modelUtil.defaultEmphasis(option, 'label', ['show']);\n    this.fillDataTextStyle(option.data);\n\n    if (layoutMode) {\n      mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (newSeriesOption, ecModel) {\n    // this.settingTask.dirty();\n    newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n    this.fillDataTextStyle(newSeriesOption.data);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n    }\n\n    prepareSource(this);\n    var data = this.getInitialData(newSeriesOption, ecModel);\n    wrapData(data, this);\n    this.dataTask.dirty();\n    this.dataTask.context.data = data;\n    inner(this).dataBeforeProcessed = data;\n    autoSeriesName(this);\n  },\n  fillDataTextStyle: function (data) {\n    // Default data label emphasis `show`\n    // FIXME Tree structure data ?\n    // FIXME Performance ?\n    if (data && !zrUtil.isTypedArray(data)) {\n      var props = ['show'];\n\n      for (var i = 0; i < data.length; i++) {\n        if (data[i] && data[i].label) {\n          modelUtil.defaultEmphasis(data[i], 'label', props);\n        }\n      }\n    }\n  },\n\n  /**\n   * Init a data structure from data related option in series\n   * Must be overwritten\n   */\n  getInitialData: function () {},\n\n  /**\n   * Append data to list\n   * @param {Object} params\n   * @param {Array|TypedArray} params.data\n   */\n  appendData: function (params) {\n    // FIXME ???\n    // (1) If data from dataset, forbidden append.\n    // (2) support append data of dataset.\n    var data = this.getRawData();\n    data.appendData(params.data);\n  },\n\n  /**\n   * Consider some method like `filter`, `map` need make new data,\n   * We should make sure that `seriesModel.getData()` get correct\n   * data in the stream procedure. So we fetch data from upstream\n   * each time `task.perform` called.\n   * @param {string} [dataType]\n   * @return {module:echarts/data/List}\n   */\n  getData: function (dataType) {\n    var task = getCurrentTask(this);\n\n    if (task) {\n      var data = task.context.data;\n      return dataType == null ? data : data.getLinkedData(dataType);\n    } else {\n      // When series is not alive (that may happen when click toolbox\n      // restore or setOption with not merge mode), series data may\n      // be still need to judge animation or something when graphic\n      // elements want to know whether fade out.\n      return inner(this).data;\n    }\n  },\n\n  /**\n   * @param {module:echarts/data/List} data\n   */\n  setData: function (data) {\n    var task = getCurrentTask(this);\n\n    if (task) {\n      var context = task.context; // Consider case: filter, data sample.\n\n      if (context.data !== data && task.modifyOutputEnd) {\n        task.setOutputEnd(data.count());\n      }\n\n      context.outputData = data; // Caution: setData should update context.data,\n      // Because getData may be called multiply in a\n      // single stage and expect to get the data just\n      // set. (For example, AxisProxy, x y both call\n      // getData and setDate sequentially).\n      // So the context.data should be fetched from\n      // upstream each time when a stage starts to be\n      // performed.\n\n      if (task !== this.dataTask) {\n        context.data = data;\n      }\n    }\n\n    inner(this).data = data;\n  },\n\n  /**\n   * @see {module:echarts/data/helper/sourceHelper#getSource}\n   * @return {module:echarts/data/Source} source\n   */\n  getSource: function () {\n    return getSource(this);\n  },\n\n  /**\n   * Get data before processed\n   * @return {module:echarts/data/List}\n   */\n  getRawData: function () {\n    return inner(this).dataBeforeProcessed;\n  },\n\n  /**\n   * Get base axis if has coordinate system and has axis.\n   * By default use coordSys.getBaseAxis();\n   * Can be overrided for some chart.\n   * @return {type} description\n   */\n  getBaseAxis: function () {\n    var coordSys = this.coordinateSystem;\n    return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n  },\n  // FIXME\n\n  /**\n   * Default tooltip formatter\n   *\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    function formatArrayValue(value) {\n      // ??? TODO refactor these logic.\n      // check: category-no-encode-has-axis-data in dataset.html\n      var vertially = zrUtil.reduce(value, function (vertially, val, idx) {\n        var dimItem = data.getDimensionInfo(idx);\n        return vertially |= dimItem && dimItem.tooltip !== false && dimItem.displayName != null;\n      }, 0);\n      var result = [];\n      tooltipDims.length ? zrUtil.each(tooltipDims, function (dim) {\n        setEachItem(retrieveRawValue(data, dataIndex, dim), dim);\n      }) // By default, all dims is used on tooltip.\n      : zrUtil.each(value, setEachItem);\n\n      function setEachItem(val, dim) {\n        var dimInfo = data.getDimensionInfo(dim); // If `dimInfo.tooltip` is not set, show tooltip.\n\n        if (!dimInfo || dimInfo.otherDims.tooltip === false) {\n          return;\n        }\n\n        var dimType = dimInfo.type;\n        var dimHead = getTooltipMarker({\n          color: color,\n          type: 'subItem'\n        });\n        var valStr = (vertially ? dimHead + encodeHTML(dimInfo.displayName || '-') + ': ' : '') + // FIXME should not format time for raw data?\n        encodeHTML(dimType === 'ordinal' ? val + '' : dimType === 'time' ? multipleSeries ? '' : formatTime('yyyy/MM/dd hh:mm:ss', val) : addCommas(val));\n        valStr && result.push(valStr);\n      }\n\n      return (vertially ? '<br/>' : '') + result.join(vertially ? '<br/>' : ', ');\n    }\n\n    function formatSingleValue(val) {\n      return encodeHTML(addCommas(val));\n    }\n\n    var data = this.getData();\n    var tooltipDims = data.mapDimension('defaultedTooltip', true);\n    var tooltipDimLen = tooltipDims.length;\n    var value = this.getRawValue(dataIndex);\n    var isValueArr = zrUtil.isArray(value);\n    var color = data.getItemVisual(dataIndex, 'color');\n\n    if (zrUtil.isObject(color) && color.colorStops) {\n      color = (color.colorStops[0] || {}).color;\n    }\n\n    color = color || 'transparent'; // Complicated rule for pretty tooltip.\n\n    var formattedValue = tooltipDimLen > 1 || isValueArr && !tooltipDimLen ? formatArrayValue(value) : tooltipDimLen ? formatSingleValue(retrieveRawValue(data, dataIndex, tooltipDims[0])) : formatSingleValue(isValueArr ? value[0] : value);\n    var colorEl = getTooltipMarker(color);\n    var name = data.getName(dataIndex);\n    var seriesName = this.name;\n\n    if (!modelUtil.isNameSpecified(this)) {\n      seriesName = '';\n    }\n\n    seriesName = seriesName ? encodeHTML(seriesName) + (!multipleSeries ? '<br/>' : ': ') : '';\n    return !multipleSeries ? seriesName + colorEl + (name ? encodeHTML(name) + ': ' + formattedValue : formattedValue) : colorEl + seriesName + formattedValue;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isAnimationEnabled: function () {\n    if (env.node) {\n      return false;\n    }\n\n    var animationEnabled = this.getShallow('animation');\n\n    if (animationEnabled) {\n      if (this.getData().count() > this.getShallow('animationThreshold')) {\n        animationEnabled = false;\n      }\n    }\n\n    return animationEnabled;\n  },\n  restoreData: function () {\n    this.dataTask.dirty();\n  },\n  getColorFromPalette: function (name, scope, requestColorNum) {\n    var ecModel = this.ecModel; // PENDING\n\n    var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope, requestColorNum);\n\n    if (!color) {\n      color = ecModel.getColorFromPalette(name, scope, requestColorNum);\n    }\n\n    return color;\n  },\n\n  /**\n   * Use `data.mapDimension(coordDim, true)` instead.\n   * @deprecated\n   */\n  coordDimToDataDim: function (coordDim) {\n    return this.getRawData().mapDimension(coordDim, true);\n  },\n\n  /**\n   * Get progressive rendering count each step\n   * @return {number}\n   */\n  getProgressive: function () {\n    return this.get('progressive');\n  },\n\n  /**\n   * Get progressive rendering count each step\n   * @return {number}\n   */\n  getProgressiveThreshold: function () {\n    return this.get('progressiveThreshold');\n  },\n\n  /**\n   * Get data indices for show tooltip content. See tooltip.\n   * @abstract\n   * @param {Array.<string>|string} dim\n   * @param {Array.<number>} value\n   * @param {module:echarts/coord/single/SingleAxis} baseAxis\n   * @return {Object} {dataIndices, nestestValue}.\n   */\n  getAxisTooltipData: null,\n\n  /**\n   * See tooltip.\n   * @abstract\n   * @param {number} dataIndex\n   * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n   */\n  getTooltipPosition: null,\n\n  /**\n   * @see {module:echarts/stream/Scheduler}\n   */\n  pipeTask: null,\n\n  /**\n   * Convinient for override in extended class.\n   * @protected\n   * @type {Function}\n   */\n  preventIncremental: null,\n\n  /**\n   * @public\n   * @readOnly\n   * @type {Object}\n   */\n  pipelineContext: null\n});\nzrUtil.mixin(SeriesModel, dataFormatMixin);\nzrUtil.mixin(SeriesModel, colorPaletteMixin);\n/**\n * MUST be called after `prepareSource` called\n * Here we need to make auto series, especially for auto legend. But we\n * do not modify series.name in option to avoid side effects.\n */\n\nfunction autoSeriesName(seriesModel) {\n  // User specified name has higher priority, otherwise it may cause\n  // series can not be queried unexpectedly.\n  var name = seriesModel.name;\n\n  if (!modelUtil.isNameSpecified(seriesModel)) {\n    seriesModel.name = getSeriesAutoName(seriesModel) || name;\n  }\n}\n\nfunction getSeriesAutoName(seriesModel) {\n  var data = seriesModel.getRawData();\n  var dataDims = data.mapDimension('seriesName', true);\n  var nameArr = [];\n  zrUtil.each(dataDims, function (dataDim) {\n    var dimInfo = data.getDimensionInfo(dataDim);\n    dimInfo.displayName && nameArr.push(dimInfo.displayName);\n  });\n  return nameArr.join(' ');\n}\n\nfunction dataTaskCount(context) {\n  return context.model.getRawData().count();\n}\n\nfunction dataTaskReset(context) {\n  var seriesModel = context.model;\n  seriesModel.setData(seriesModel.getRawData().cloneShallow());\n  return dataTaskProgress;\n}\n\nfunction dataTaskProgress(param, context) {\n  // Avoid repead cloneShallow when data just created in reset.\n  if (param.end > context.outputData.count()) {\n    context.model.getRawData().cloneShallow(context.outputData);\n  }\n} // TODO refactor\n\n\nfunction wrapData(data, seriesModel) {\n  zrUtil.each(data.CHANGABLE_METHODS, function (methodName) {\n    data.wrapMethod(methodName, zrUtil.curry(onDataSelfChange, seriesModel));\n  });\n}\n\nfunction onDataSelfChange(seriesModel) {\n  var task = getCurrentTask(seriesModel);\n\n  if (task) {\n    // Consider case: filter, selectRange\n    task.setOutputEnd(this.count());\n  }\n}\n\nfunction getCurrentTask(seriesModel) {\n  var scheduler = (seriesModel.ecModel || {}).scheduler;\n  var pipeline = scheduler && scheduler.getPipeline(seriesModel.uid);\n\n  if (pipeline) {\n    // When pipline finished, the currrentTask keep the last\n    // task (renderTask).\n    var task = pipeline.currentTask;\n\n    if (task) {\n      var agentStubMap = task.agentStubMap;\n\n      if (agentStubMap) {\n        task = agentStubMap.get(seriesModel.uid);\n      }\n    }\n\n    return task;\n  }\n}\n\nvar _default = SeriesModel;\nmodule.exports = _default;","var smoothSpline = require(\"./smoothSpline\");\n\nvar smoothBezier = require(\"./smoothBezier\");\n\nfunction buildPath(ctx, shape, closePath) {\n  var points = shape.points;\n  var smooth = shape.smooth;\n\n  if (points && points.length >= 2) {\n    if (smooth && smooth !== 'spline') {\n      var controlPoints = smoothBezier(points, smooth, closePath, shape.smoothConstraint);\n      ctx.moveTo(points[0][0], points[0][1]);\n      var len = points.length;\n\n      for (var i = 0; i < (closePath ? len : len - 1); i++) {\n        var cp1 = controlPoints[i * 2];\n        var cp2 = controlPoints[i * 2 + 1];\n        var p = points[(i + 1) % len];\n        ctx.bezierCurveTo(cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]);\n      }\n    } else {\n      if (smooth === 'spline') {\n        points = smoothSpline(points, closePath);\n      }\n\n      ctx.moveTo(points[0][0], points[0][1]);\n\n      for (var i = 1, l = points.length; i < l; i++) {\n        ctx.lineTo(points[i][0], points[i][1]);\n      }\n    }\n\n    closePath && ctx.closePath();\n  }\n}\n\nexports.buildPath = buildPath;","var makeStyleMapper = require(\"./makeStyleMapper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar getItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor'], ['textPosition'], ['textAlign']]);\nvar _default = {\n  getItemStyle: function (excludes, includes) {\n    var style = getItemStyle(this, excludes, includes);\n    var lineDash = this.getBorderLineDash();\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getBorderLineDash: function () {\n    var lineType = this.get('borderType');\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [5, 5] : [1, 1];\n  }\n};\nmodule.exports = _default;","function buildPath(ctx, shape) {\n  var x = shape.x;\n  var y = shape.y;\n  var width = shape.width;\n  var height = shape.height;\n  var r = shape.r;\n  var r1;\n  var r2;\n  var r3;\n  var r4; // Convert width and height to positive for better borderRadius\n\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n\n  if (typeof r === 'number') {\n    r1 = r2 = r3 = r4 = r;\n  } else if (r instanceof Array) {\n    if (r.length === 1) {\n      r1 = r2 = r3 = r4 = r[0];\n    } else if (r.length === 2) {\n      r1 = r3 = r[0];\n      r2 = r4 = r[1];\n    } else if (r.length === 3) {\n      r1 = r[0];\n      r2 = r4 = r[1];\n      r3 = r[2];\n    } else {\n      r1 = r[0];\n      r2 = r[1];\n      r3 = r[2];\n      r4 = r[3];\n    }\n  } else {\n    r1 = r2 = r3 = r4 = 0;\n  }\n\n  var total;\n\n  if (r1 + r2 > width) {\n    total = r1 + r2;\n    r1 *= width / total;\n    r2 *= width / total;\n  }\n\n  if (r3 + r4 > width) {\n    total = r3 + r4;\n    r3 *= width / total;\n    r4 *= width / total;\n  }\n\n  if (r2 + r3 > height) {\n    total = r2 + r3;\n    r2 *= height / total;\n    r3 *= height / total;\n  }\n\n  if (r1 + r4 > height) {\n    total = r1 + r4;\n    r1 *= height / total;\n    r4 *= height / total;\n  }\n\n  ctx.moveTo(x + r1, y);\n  ctx.lineTo(x + width - r2, y);\n  r2 !== 0 && ctx.arc(x + width - r2, y + r2, r2, -Math.PI / 2, 0);\n  ctx.lineTo(x + width, y + height - r3);\n  r3 !== 0 && ctx.arc(x + width - r3, y + height - r3, r3, 0, Math.PI / 2);\n  ctx.lineTo(x + r4, y + height);\n  r4 !== 0 && ctx.arc(x + r4, y + height - r4, r4, Math.PI / 2, Math.PI);\n  ctx.lineTo(x, y + r1);\n  r1 !== 0 && ctx.arc(x + r1, y + r1, r1, Math.PI, Math.PI * 1.5);\n}\n\nexports.buildPath = buildPath;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar isObject = _util.isObject;\nvar each = _util.each;\nvar map = _util.map;\nvar indexOf = _util.indexOf;\nvar retrieve = _util.retrieve;\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar _axisHelper = require(\"../../coord/axisHelper\");\n\nvar createScaleByModel = _axisHelper.createScaleByModel;\nvar ifAxisCrossZero = _axisHelper.ifAxisCrossZero;\nvar niceScaleExtent = _axisHelper.niceScaleExtent;\nvar estimateLabelUnionRect = _axisHelper.estimateLabelUnionRect;\n\nvar Cartesian2D = require(\"./Cartesian2D\");\n\nvar Axis2D = require(\"./Axis2D\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar getStackedDimension = _dataStackHelper.getStackedDimension;\n\nrequire(\"./GridModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\n// Depends on GridModel, AxisModel, which performs preprocess.\n\n/**\n * Check if the axis is used in the specified grid\n * @inner\n */\nfunction isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n  return axisModel.getCoordSysModel() === gridModel;\n}\n\nfunction Grid(gridModel, ecModel, api) {\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n   * @private\n   */\n  this._coordsMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n   * @private\n   */\n\n  this._coordsList = [];\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesList = [];\n\n  this._initCartesian(gridModel, ecModel, api);\n\n  this.model = gridModel;\n}\n\nvar gridProto = Grid.prototype;\ngridProto.type = 'grid';\ngridProto.axisPointerEnabled = true;\n\ngridProto.getRect = function () {\n  return this._rect;\n};\n\ngridProto.update = function (ecModel, api) {\n  var axesMap = this._axesMap;\n\n  this._updateScale(ecModel, this.model);\n\n  each(axesMap.x, function (xAxis) {\n    niceScaleExtent(xAxis.scale, xAxis.model);\n  });\n  each(axesMap.y, function (yAxis) {\n    niceScaleExtent(yAxis.scale, yAxis.model);\n  });\n  each(axesMap.x, function (xAxis) {\n    fixAxisOnZero(axesMap, 'y', xAxis);\n  });\n  each(axesMap.y, function (yAxis) {\n    fixAxisOnZero(axesMap, 'x', yAxis);\n  }); // Resize again if containLabel is enabled\n  // FIXME It may cause getting wrong grid size in data processing stage\n\n  this.resize(this.model, api);\n};\n\nfunction fixAxisOnZero(axesMap, otherAxisDim, axis) {\n  axis.getAxesOnZeroOf = function () {\n    // TODO: onZero of multiple axes.\n    return otherAxis ? [otherAxis] : [];\n  }; // onZero can not be enabled in these two situations:\n  // 1. When any other axis is a category axis.\n  // 2. When no axis is cross 0 point.\n\n\n  var otherAxes = axesMap[otherAxisDim];\n  var otherAxis;\n  var axisModel = axis.model;\n  var onZero = axisModel.get('axisLine.onZero');\n  var onZeroAxisIndex = axisModel.get('axisLine.onZeroAxisIndex');\n\n  if (!onZero) {\n    return;\n  } // If target axis is specified.\n\n\n  if (onZeroAxisIndex != null) {\n    if (canOnZeroToAxis(otherAxes[onZeroAxisIndex])) {\n      otherAxis = otherAxes[onZeroAxisIndex];\n    }\n\n    return;\n  } // Find the first available other axis.\n\n\n  for (var idx in otherAxes) {\n    if (otherAxes.hasOwnProperty(idx) && canOnZeroToAxis(otherAxes[idx])) {\n      otherAxis = otherAxes[idx];\n      break;\n    }\n  }\n}\n\nfunction canOnZeroToAxis(axis) {\n  return axis && axis.type !== 'category' && axis.type !== 'time' && ifAxisCrossZero(axis);\n}\n/**\n * Resize the grid\n * @param {module:echarts/coord/cartesian/GridModel} gridModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\ngridProto.resize = function (gridModel, api, ignoreContainLabel) {\n  var gridRect = getLayoutRect(gridModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n  this._rect = gridRect;\n  var axesList = this._axesList;\n  adjustAxes(); // Minus label size\n\n  if (!ignoreContainLabel && gridModel.get('containLabel')) {\n    each(axesList, function (axis) {\n      if (!axis.model.get('axisLabel.inside')) {\n        var labelUnionRect = estimateLabelUnionRect(axis);\n\n        if (labelUnionRect) {\n          var dim = axis.isHorizontal() ? 'height' : 'width';\n          var margin = axis.model.get('axisLabel.margin');\n          gridRect[dim] -= labelUnionRect[dim] + margin;\n\n          if (axis.position === 'top') {\n            gridRect.y += labelUnionRect.height + margin;\n          } else if (axis.position === 'left') {\n            gridRect.x += labelUnionRect.width + margin;\n          }\n        }\n      }\n    });\n    adjustAxes();\n  }\n\n  function adjustAxes() {\n    each(axesList, function (axis) {\n      var isHorizontal = axis.isHorizontal();\n      var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n      var idx = axis.inverse ? 1 : 0;\n      axis.setExtent(extent[idx], extent[1 - idx]);\n      updateAxisTransform(axis, isHorizontal ? gridRect.x : gridRect.y);\n    });\n  }\n};\n/**\n * @param {string} axisType\n * @param {number} [axisIndex]\n */\n\n\ngridProto.getAxis = function (axisType, axisIndex) {\n  var axesMapOnDim = this._axesMap[axisType];\n\n  if (axesMapOnDim != null) {\n    if (axisIndex == null) {\n      // Find first axis\n      for (var name in axesMapOnDim) {\n        if (axesMapOnDim.hasOwnProperty(name)) {\n          return axesMapOnDim[name];\n        }\n      }\n    }\n\n    return axesMapOnDim[axisIndex];\n  }\n};\n/**\n * @return {Array.<module:echarts/coord/Axis>}\n */\n\n\ngridProto.getAxes = function () {\n  return this._axesList.slice();\n};\n/**\n * Usage:\n *      grid.getCartesian(xAxisIndex, yAxisIndex);\n *      grid.getCartesian(xAxisIndex);\n *      grid.getCartesian(null, yAxisIndex);\n *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n *\n * @param {number|Object} [xAxisIndex]\n * @param {number} [yAxisIndex]\n */\n\n\ngridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n  if (xAxisIndex != null && yAxisIndex != null) {\n    var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n    return this._coordsMap[key];\n  }\n\n  if (isObject(xAxisIndex)) {\n    yAxisIndex = xAxisIndex.yAxisIndex;\n    xAxisIndex = xAxisIndex.xAxisIndex;\n  } // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n\n\n  for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n    if (coordList[i].getAxis('x').index === xAxisIndex || coordList[i].getAxis('y').index === yAxisIndex) {\n      return coordList[i];\n    }\n  }\n};\n\ngridProto.getCartesians = function () {\n  return this._coordsList.slice();\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertToPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.dataToPoint(value) : target.axis ? target.axis.toGlobalCoord(target.axis.dataToCoord(value)) : null;\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertFromPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.pointToData(value) : target.axis ? target.axis.coordToData(target.axis.toLocalCoord(value)) : null;\n};\n/**\n * @inner\n */\n\n\ngridProto._findConvertTarget = function (ecModel, finder) {\n  var seriesModel = finder.seriesModel;\n  var xAxisModel = finder.xAxisModel || seriesModel && seriesModel.getReferringComponents('xAxis')[0];\n  var yAxisModel = finder.yAxisModel || seriesModel && seriesModel.getReferringComponents('yAxis')[0];\n  var gridModel = finder.gridModel;\n  var coordsList = this._coordsList;\n  var cartesian;\n  var axis;\n\n  if (seriesModel) {\n    cartesian = seriesModel.coordinateSystem;\n    indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n  } else if (xAxisModel && yAxisModel) {\n    cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  } else if (xAxisModel) {\n    axis = this.getAxis('x', xAxisModel.componentIndex);\n  } else if (yAxisModel) {\n    axis = this.getAxis('y', yAxisModel.componentIndex);\n  } // Lowest priority.\n  else if (gridModel) {\n      var grid = gridModel.coordinateSystem;\n\n      if (grid === this) {\n        cartesian = this._coordsList[0];\n      }\n    }\n\n  return {\n    cartesian: cartesian,\n    axis: axis\n  };\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.containPoint = function (point) {\n  var coord = this._coordsList[0];\n\n  if (coord) {\n    return coord.containPoint(point);\n  }\n};\n/**\n * Initialize cartesian coordinate systems\n * @private\n */\n\n\ngridProto._initCartesian = function (gridModel, ecModel, api) {\n  var axisPositionUsed = {\n    left: false,\n    right: false,\n    top: false,\n    bottom: false\n  };\n  var axesMap = {\n    x: {},\n    y: {}\n  };\n  var axesCount = {\n    x: 0,\n    y: 0\n  }; /// Create axis\n\n  ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n  ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n  if (!axesCount.x || !axesCount.y) {\n    // Roll back when there no either x or y axis\n    this._axesMap = {};\n    this._axesList = [];\n    return;\n  }\n\n  this._axesMap = axesMap; /// Create cartesian2d\n\n  each(axesMap.x, function (xAxis, xAxisIndex) {\n    each(axesMap.y, function (yAxis, yAxisIndex) {\n      var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n      var cartesian = new Cartesian2D(key);\n      cartesian.grid = this;\n      cartesian.model = gridModel;\n      this._coordsMap[key] = cartesian;\n\n      this._coordsList.push(cartesian);\n\n      cartesian.addAxis(xAxis);\n      cartesian.addAxis(yAxis);\n    }, this);\n  }, this);\n\n  function createAxisCreator(axisType) {\n    return function (axisModel, idx) {\n      if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var axisPosition = axisModel.get('position');\n\n      if (axisType === 'x') {\n        // Fix position\n        if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n          // Default bottom of X\n          axisPosition = 'bottom';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n          }\n        }\n      } else {\n        // Fix position\n        if (axisPosition !== 'left' && axisPosition !== 'right') {\n          // Default left of Y\n          axisPosition = 'left';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n          }\n        }\n      }\n\n      axisPositionUsed[axisPosition] = true;\n      var axis = new Axis2D(axisType, createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisPosition);\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse'); // Inject axis into axisModel\n\n      axisModel.axis = axis; // Inject axisModel into axis\n\n      axis.model = axisModel; // Inject grid info axis\n\n      axis.grid = this; // Index of axis, can be used as key\n\n      axis.index = idx;\n\n      this._axesList.push(axis);\n\n      axesMap[axisType][idx] = axis;\n      axesCount[axisType]++;\n    };\n  }\n};\n/**\n * Update cartesian properties from series\n * @param  {module:echarts/model/Option} option\n * @private\n */\n\n\ngridProto._updateScale = function (ecModel, gridModel) {\n  // Reset scale\n  each(this._axesList, function (axis) {\n    axis.scale.setExtent(Infinity, -Infinity);\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (isCartesian2D(seriesModel)) {\n      var axesModels = findAxesModels(seriesModel, ecModel);\n      var xAxisModel = axesModels[0];\n      var yAxisModel = axesModels[1];\n\n      if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel) || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n      var data = seriesModel.getData();\n      var xAxis = cartesian.getAxis('x');\n      var yAxis = cartesian.getAxis('y');\n\n      if (data.type === 'list') {\n        unionExtent(data, xAxis, seriesModel);\n        unionExtent(data, yAxis, seriesModel);\n      }\n    }\n  }, this);\n\n  function unionExtent(data, axis, seriesModel) {\n    each(data.mapDimension(axis.dim, true), function (dim) {\n      axis.scale.unionExtentFromData( // For example, the extent of the orginal dimension\n      // is [0.1, 0.5], the extent of the `stackResultDimension`\n      // is [7, 9], the final extent should not include [0.1, 0.5].\n      data, getStackedDimension(data, dim));\n    });\n  }\n};\n/**\n * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n * @return {Object} {baseAxes: [], otherAxes: []}\n */\n\n\ngridProto.getTooltipAxes = function (dim) {\n  var baseAxes = [];\n  var otherAxes = [];\n  each(this.getCartesians(), function (cartesian) {\n    var baseAxis = dim != null && dim !== 'auto' ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n    var otherAxis = cartesian.getOtherAxis(baseAxis);\n    indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n    indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n  });\n  return {\n    baseAxes: baseAxes,\n    otherAxes: otherAxes\n  };\n};\n/**\n * @inner\n */\n\n\nfunction updateAxisTransform(axis, coordBase) {\n  var axisExtent = axis.getExtent();\n  var axisExtentSum = axisExtent[0] + axisExtent[1]; // Fast transform\n\n  axis.toGlobalCoord = axis.dim === 'x' ? function (coord) {\n    return coord + coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n  axis.toLocalCoord = axis.dim === 'x' ? function (coord) {\n    return coord - coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n}\n\nvar axesTypes = ['xAxis', 'yAxis'];\n/**\n * @inner\n */\n\nfunction findAxesModels(seriesModel, ecModel) {\n  return map(axesTypes, function (axisType) {\n    var axisModel = seriesModel.getReferringComponents(axisType)[0];\n    return axisModel;\n  });\n}\n/**\n * @inner\n */\n\n\nfunction isCartesian2D(seriesModel) {\n  return seriesModel.get('coordinateSystem') === 'cartesian2d';\n}\n\nGrid.create = function (ecModel, api) {\n  var grids = [];\n  ecModel.eachComponent('grid', function (gridModel, idx) {\n    var grid = new Grid(gridModel, ecModel, api);\n    grid.name = 'grid_' + idx; // dataSampling requires axis extent, so resize\n    // should be performed in create stage.\n\n    grid.resize(gridModel, api, true);\n    gridModel.coordinateSystem = grid;\n    grids.push(grid);\n  }); // Inject the coordinateSystems into seriesModel\n\n  ecModel.eachSeries(function (seriesModel) {\n    if (!isCartesian2D(seriesModel)) {\n      return;\n    }\n\n    var axesModels = findAxesModels(seriesModel, ecModel);\n    var xAxisModel = axesModels[0];\n    var yAxisModel = axesModels[1];\n    var gridModel = xAxisModel.getCoordSysModel();\n    var grid = gridModel.coordinateSystem;\n    seriesModel.coordinateSystem = grid.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  });\n  return grids;\n}; // For deciding which dimensions to use when creating list data\n\n\nGrid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\nCoordinateSystem.register('cartesian2d', Grid);\nvar _default = Grid;\nmodule.exports = _default;","var util = require(\"./core/util\");\n\nvar _config = require(\"./config\");\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar Style = require(\"./graphic/Style\");\n\nvar Pattern = require(\"./graphic/Pattern\");\n\n/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\nfunction returnFalse() {\n  return false;\n}\n/**\n * 创建dom\n *\n * @inner\n * @param {string} id dom id 待用\n * @param {Painter} painter painter instance\n * @param {number} number\n */\n\n\nfunction createDom(id, painter, dpr) {\n  var newDom = util.createCanvas();\n  var width = painter.getWidth();\n  var height = painter.getHeight();\n  var newDomStyle = newDom.style;\n\n  if (newDomStyle) {\n    // In node or some other non-browser environment\n    newDomStyle.position = 'absolute';\n    newDomStyle.left = 0;\n    newDomStyle.top = 0;\n    newDomStyle.width = width + 'px';\n    newDomStyle.height = height + 'px';\n    newDom.setAttribute('data-zr-dom-id', id);\n  }\n\n  newDom.width = width * dpr;\n  newDom.height = height * dpr;\n  return newDom;\n}\n/**\n * @alias module:zrender/Layer\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @param {string} id\n * @param {module:zrender/Painter} painter\n * @param {number} [dpr]\n */\n\n\nvar Layer = function (id, painter, dpr) {\n  var dom;\n  dpr = dpr || devicePixelRatio;\n\n  if (typeof id === 'string') {\n    dom = createDom(id, painter, dpr);\n  } // Not using isDom because in node it will return false\n  else if (util.isObject(id)) {\n      dom = id;\n      id = dom.id;\n    }\n\n  this.id = id;\n  this.dom = dom;\n  var domStyle = dom.style;\n\n  if (domStyle) {\n    // Not in node\n    dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n    domStyle['-webkit-user-select'] = 'none';\n    domStyle['user-select'] = 'none';\n    domStyle['-webkit-touch-callout'] = 'none';\n    domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n    domStyle['padding'] = 0;\n    domStyle['margin'] = 0;\n    domStyle['border-width'] = 0;\n  }\n\n  this.domBack = null;\n  this.ctxBack = null;\n  this.painter = painter;\n  this.config = null; // Configs\n\n  /**\n   * 每次清空画布的颜色\n   * @type {string}\n   * @default 0\n   */\n\n  this.clearColor = 0;\n  /**\n   * 是否开启动态模糊\n   * @type {boolean}\n   * @default false\n   */\n\n  this.motionBlur = false;\n  /**\n   * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   * @type {number}\n   * @default 0.7\n   */\n\n  this.lastFrameAlpha = 0.7;\n  /**\n   * Layer dpr\n   * @type {number}\n   */\n\n  this.dpr = dpr;\n};\n\nLayer.prototype = {\n  constructor: Layer,\n  __dirty: true,\n  __used: false,\n  __drawIndex: 0,\n  __startIndex: 0,\n  __endIndex: 0,\n  incremental: false,\n  getElementCount: function () {\n    return this.__endIndex - this.__startIndex;\n  },\n  initContext: function () {\n    this.ctx = this.dom.getContext('2d');\n    this.ctx.dpr = this.dpr;\n  },\n  createBackBuffer: function () {\n    var dpr = this.dpr;\n    this.domBack = createDom('back-' + this.id, this.painter, dpr);\n    this.ctxBack = this.domBack.getContext('2d');\n\n    if (dpr != 1) {\n      this.ctxBack.scale(dpr, dpr);\n    }\n  },\n\n  /**\n   * @param  {number} width\n   * @param  {number} height\n   */\n  resize: function (width, height) {\n    var dpr = this.dpr;\n    var dom = this.dom;\n    var domStyle = dom.style;\n    var domBack = this.domBack;\n\n    if (domStyle) {\n      domStyle.width = width + 'px';\n      domStyle.height = height + 'px';\n    }\n\n    dom.width = width * dpr;\n    dom.height = height * dpr;\n\n    if (domBack) {\n      domBack.width = width * dpr;\n      domBack.height = height * dpr;\n\n      if (dpr != 1) {\n        this.ctxBack.scale(dpr, dpr);\n      }\n    }\n  },\n\n  /**\n   * 清空该层画布\n   * @param {boolean} [clearAll]=false Clear all with out motion blur\n   * @param {Color} [clearColor]\n   */\n  clear: function (clearAll, clearColor) {\n    var dom = this.dom;\n    var ctx = this.ctx;\n    var width = dom.width;\n    var height = dom.height;\n    var clearColor = clearColor || this.clearColor;\n    var haveMotionBLur = this.motionBlur && !clearAll;\n    var lastFrameAlpha = this.lastFrameAlpha;\n    var dpr = this.dpr;\n\n    if (haveMotionBLur) {\n      if (!this.domBack) {\n        this.createBackBuffer();\n      }\n\n      this.ctxBack.globalCompositeOperation = 'copy';\n      this.ctxBack.drawImage(dom, 0, 0, width / dpr, height / dpr);\n    }\n\n    ctx.clearRect(0, 0, width, height);\n\n    if (clearColor && clearColor !== 'transparent') {\n      var clearColorGradientOrPattern; // Gradient\n\n      if (clearColor.colorStops) {\n        // Cache canvas gradient\n        clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n          x: 0,\n          y: 0,\n          width: width,\n          height: height\n        });\n        clearColor.__canvasGradient = clearColorGradientOrPattern;\n      } // Pattern\n      else if (clearColor.image) {\n          clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n        }\n\n      ctx.save();\n      ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    if (haveMotionBLur) {\n      var domBack = this.domBack;\n      ctx.save();\n      ctx.globalAlpha = lastFrameAlpha;\n      ctx.drawImage(domBack, 0, 0, width, height);\n      ctx.restore();\n    }\n  }\n};\nvar _default = Layer;\nmodule.exports = _default;","var LRU = require(\"../../core/LRU\");\n\nvar globalImageCache = new LRU(50);\n/**\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\nfunction findExistImage(newImageOrSrc) {\n  if (typeof newImageOrSrc === 'string') {\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    return cachedImgObj && cachedImgObj.image;\n  } else {\n    return newImageOrSrc;\n  }\n}\n/**\n * Caution: User should cache loaded images, but not just count on LRU.\n * Consider if required images more than LRU size, will dead loop occur?\n *\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @param {HTMLImageElement|HTMLCanvasElement|Canvas} image Existent image.\n * @param {module:zrender/Element} [hostEl] For calling `dirty`.\n * @param {Function} [cb] params: (image, cbPayload)\n * @param {Object} [cbPayload] Payload on cb calling.\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\n\nfunction createOrUpdateImage(newImageOrSrc, image, hostEl, cb, cbPayload) {\n  if (!newImageOrSrc) {\n    return image;\n  } else if (typeof newImageOrSrc === 'string') {\n    // Image should not be loaded repeatly.\n    if (image && image.__zrImageSrc === newImageOrSrc || !hostEl) {\n      return image;\n    } // Only when there is no existent image or existent image src\n    // is different, this method is responsible for load.\n\n\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    var pendingWrap = {\n      hostEl: hostEl,\n      cb: cb,\n      cbPayload: cbPayload\n    };\n\n    if (cachedImgObj) {\n      image = cachedImgObj.image;\n      !isImageReady(image) && cachedImgObj.pending.push(pendingWrap);\n    } else {\n      !image && (image = new Image());\n      image.onload = imageOnLoad;\n      globalImageCache.put(newImageOrSrc, image.__cachedImgObj = {\n        image: image,\n        pending: [pendingWrap]\n      });\n      image.src = image.__zrImageSrc = newImageOrSrc;\n    }\n\n    return image;\n  } // newImageOrSrc is an HTMLImageElement or HTMLCanvasElement or Canvas\n  else {\n      return newImageOrSrc;\n    }\n}\n\nfunction imageOnLoad() {\n  var cachedImgObj = this.__cachedImgObj;\n  this.onload = this.__cachedImgObj = null;\n\n  for (var i = 0; i < cachedImgObj.pending.length; i++) {\n    var pendingWrap = cachedImgObj.pending[i];\n    var cb = pendingWrap.cb;\n    cb && cb(this, pendingWrap.cbPayload);\n    pendingWrap.hostEl.dirty();\n  }\n\n  cachedImgObj.pending.length = 0;\n}\n\nfunction isImageReady(image) {\n  return image && image.width && image.height;\n}\n\nexports.findExistImage = findExistImage;\nexports.createOrUpdateImage = createOrUpdateImage;\nexports.isImageReady = isImageReady;","var Eventful = require(\"../mixin/Eventful\");\n\nexports.Dispatcher = Eventful;\n\nvar env = require(\"./env\");\n\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\nvar isDomLevel2 = typeof window !== 'undefined' && !!window.addEventListener;\nvar MOUSE_EVENT_REG = /^(?:mouse|pointer|contextmenu|drag|drop)|click/;\n\nfunction getBoundingClientRect(el) {\n  // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n  return el.getBoundingClientRect ? el.getBoundingClientRect() : {\n    left: 0,\n    top: 0\n  };\n} // `calculate` is optional, default false\n\n\nfunction clientToLocal(el, e, out, calculate) {\n  out = out || {}; // According to the W3C Working Draft, offsetX and offsetY should be relative\n  // to the padding edge of the target element. The only browser using this convention\n  // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n  // not support the properties.\n  // (see http://www.jacklmoore.com/notes/mouse-position/)\n  // In zr painter.dom, padding edge equals to border edge.\n  // FIXME\n  // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n  // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n  // is too complex. So css-transfrom dont support in this case temporarily.\n\n  if (calculate || !env.canvasSupported) {\n    defaultGetZrXY(el, e, out);\n  } // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n  // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n  // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n  // zoom-factor, overflow / opacity layers, transforms ...)\n  // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n  // <https://bugs.jquery.com/ticket/8523#comment:14>\n  // BTW3, In ff, offsetX/offsetY is always 0.\n  else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n      out.zrX = e.layerX;\n      out.zrY = e.layerY;\n    } // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n    else if (e.offsetX != null) {\n        out.zrX = e.offsetX;\n        out.zrY = e.offsetY;\n      } // For some other device, e.g., IOS safari.\n      else {\n          defaultGetZrXY(el, e, out);\n        }\n\n  return out;\n}\n\nfunction defaultGetZrXY(el, e, out) {\n  // This well-known method below does not support css transform.\n  var box = getBoundingClientRect(el);\n  out.zrX = e.clientX - box.left;\n  out.zrY = e.clientY - box.top;\n}\n/**\n * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n * `calculate` is optional, default false.\n */\n\n\nfunction normalizeEvent(el, e, calculate) {\n  e = e || window.event;\n\n  if (e.zrX != null) {\n    return e;\n  }\n\n  var eventType = e.type;\n  var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n  if (!isTouch) {\n    clientToLocal(el, e, e, calculate);\n    e.zrDelta = e.wheelDelta ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n  } else {\n    var touch = eventType != 'touchend' ? e.targetTouches[0] : e.changedTouches[0];\n    touch && clientToLocal(el, touch, e, calculate);\n  } // Add which for click: 1 === left; 2 === middle; 3 === right; otherwise: 0;\n  // See jQuery: https://github.com/jquery/jquery/blob/master/src/event.js\n  // If e.which has been defined, if may be readonly,\n  // see: https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/which\n\n\n  var button = e.button;\n\n  if (e.which == null && button !== undefined && MOUSE_EVENT_REG.test(e.type)) {\n    e.which = button & 1 ? 1 : button & 2 ? 3 : button & 4 ? 2 : 0;\n  }\n\n  return e;\n}\n/**\n * @param {HTMLElement} el\n * @param {string} name\n * @param {Function} handler\n */\n\n\nfunction addEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    // Reproduct the console warning:\n    // [Violation] Added non-passive event listener to a scroll-blocking <some> event.\n    // Consider marking event handler as 'passive' to make the page more responsive.\n    // Just set console log level: verbose in chrome dev tool.\n    // then the warning log will be printed when addEventListener called.\n    // See https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n    // We have not yet found a neat way to using passive. Because in zrender the dom event\n    // listener delegate all of the upper events of element. Some of those events need\n    // to prevent default. For example, the feature `preventDefaultMouseMove` of echarts.\n    // Before passive can be adopted, these issues should be considered:\n    // (1) Whether and how a zrender user specifies an event listener passive. And by default,\n    // passive or not.\n    // (2) How to tread that some zrender event listener is passive, and some is not. If\n    // we use other way but not preventDefault of mousewheel and touchmove, browser\n    // compatibility should be handled.\n    // var opts = (env.passiveSupported && name === 'mousewheel')\n    //     ? {passive: true}\n    //     // By default, the third param of el.addEventListener is `capture: false`.\n    //     : void 0;\n    // el.addEventListener(name, handler /* , opts */);\n    el.addEventListener(name, handler);\n  } else {\n    el.attachEvent('on' + name, handler);\n  }\n}\n\nfunction removeEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    el.removeEventListener(name, handler);\n  } else {\n    el.detachEvent('on' + name, handler);\n  }\n}\n/**\n * preventDefault and stopPropagation.\n * Notice: do not do that in zrender. Upper application\n * do that if necessary.\n *\n * @memberOf module:zrender/core/event\n * @method\n * @param {Event} e : event对象\n */\n\n\nvar stop = isDomLevel2 ? function (e) {\n  e.preventDefault();\n  e.stopPropagation();\n  e.cancelBubble = true;\n} : function (e) {\n  e.returnValue = false;\n  e.cancelBubble = true;\n};\n\nfunction notLeftMouse(e) {\n  // If e.which is undefined, considered as left mouse event.\n  return e.which > 1;\n} // 做向上兼容\n\n\nexports.clientToLocal = clientToLocal;\nexports.normalizeEvent = normalizeEvent;\nexports.addEventListener = addEventListener;\nexports.removeEventListener = removeEventListener;\nexports.stop = stop;\nexports.notLeftMouse = notLeftMouse;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../model/Model\");\n\nvar DataDiffer = require(\"./DataDiffer\");\n\nvar Source = require(\"./Source\");\n\nvar _dataProvider = require(\"./helper/dataProvider\");\n\nvar defaultDimValueGetters = _dataProvider.defaultDimValueGetters;\nvar DefaultDataProvider = _dataProvider.DefaultDataProvider;\n\nvar _dimensionHelper = require(\"./helper/dimensionHelper\");\n\nvar summarizeDimensions = _dimensionHelper.summarizeDimensions;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * List for data storage\n * @module echarts/data/List\n */\nvar isObject = zrUtil.isObject;\nvar UNDEFINED = 'undefined'; // Use prefix to avoid index to be the same as otherIdList[idx],\n// which will cause weird udpate animation.\n\nvar ID_PREFIX = 'e\\0\\0';\nvar dataCtors = {\n  'float': typeof Float64Array === UNDEFINED ? Array : Float64Array,\n  'int': typeof Int32Array === UNDEFINED ? Array : Int32Array,\n  // Ordinal data type can be string or int\n  'ordinal': Array,\n  'number': Array,\n  'time': Array\n}; // Caution: MUST not use `new CtorUint32Array(arr, 0, len)`, because the Ctor of array is\n// different from the Ctor of typed array.\n\nvar CtorUint32Array = typeof Uint32Array === UNDEFINED ? Array : Uint32Array;\nvar CtorUint16Array = typeof Uint16Array === UNDEFINED ? Array : Uint16Array;\n\nfunction getIndicesCtor(list) {\n  // The possible max value in this._indicies is always this._rawCount despite of filtering.\n  return list._rawCount > 65535 ? CtorUint32Array : CtorUint16Array;\n}\n\nfunction cloneChunk(originalChunk) {\n  var Ctor = originalChunk.constructor; // Only shallow clone is enough when Array.\n\n  return Ctor === Array ? originalChunk.slice() : new Ctor(originalChunk);\n}\n\nvar TRANSFERABLE_PROPERTIES = ['hasItemOption', '_nameList', '_idList', '_invertedIndicesMap', '_rawData', '_chunkSize', '_chunkCount', '_dimValueGetter', '_count', '_rawCount', '_nameDimIdx', '_idDimIdx'];\nvar CLONE_PROPERTIES = ['_extent', '_approximateExtent', '_rawExtent'];\n\nfunction transferProperties(target, source) {\n  zrUtil.each(TRANSFERABLE_PROPERTIES.concat(source.__wrappedMethods || []), function (propName) {\n    if (source.hasOwnProperty(propName)) {\n      target[propName] = source[propName];\n    }\n  });\n  target.__wrappedMethods = source.__wrappedMethods;\n  zrUtil.each(CLONE_PROPERTIES, function (propName) {\n    target[propName] = zrUtil.clone(source[propName]);\n  });\n  target._calculationInfo = zrUtil.extend(source._calculationInfo);\n}\n/**\n * @constructor\n * @alias module:echarts/data/List\n *\n * @param {Array.<string|Object>} dimensions\n *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n *      Spetial fields: {\n *          ordinalMeta: <module:echarts/data/OrdinalMeta>\n *          createInvertedIndices: <boolean>\n *      }\n * @param {module:echarts/model/Model} hostModel\n */\n\n\nvar List = function (dimensions, hostModel) {\n  dimensions = dimensions || ['x', 'y'];\n  var dimensionInfos = {};\n  var dimensionNames = [];\n  var invertedIndicesMap = {};\n\n  for (var i = 0; i < dimensions.length; i++) {\n    // Use the original dimensions[i], where other flag props may exists.\n    var dimensionInfo = dimensions[i];\n\n    if (zrUtil.isString(dimensionInfo)) {\n      dimensionInfo = {\n        name: dimensionInfo\n      };\n    }\n\n    var dimensionName = dimensionInfo.name;\n    dimensionInfo.type = dimensionInfo.type || 'float';\n\n    if (!dimensionInfo.coordDim) {\n      dimensionInfo.coordDim = dimensionName;\n      dimensionInfo.coordDimIndex = 0;\n    }\n\n    dimensionInfo.otherDims = dimensionInfo.otherDims || {};\n    dimensionNames.push(dimensionName);\n    dimensionInfos[dimensionName] = dimensionInfo;\n    dimensionInfo.index = i;\n\n    if (dimensionInfo.createInvertedIndices) {\n      invertedIndicesMap[dimensionName] = [];\n    }\n  }\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n\n\n  this.dimensions = dimensionNames;\n  /**\n   * Infomation of each data dimension, like data type.\n   * @type {Object}\n   */\n\n  this._dimensionInfos = dimensionInfos;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.hostModel = hostModel;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.dataType;\n  /**\n   * Indices stores the indices of data subset after filtered.\n   * This data subset will be used in chart.\n   * @type {Array.<number>}\n   * @readOnly\n   */\n\n  this._indices = null;\n  this._count = 0;\n  this._rawCount = 0;\n  /**\n   * Data storage\n   * @type {Object.<key, Array.<TypedArray|Array>>}\n   * @private\n   */\n\n  this._storage = {};\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._nameList = [];\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._idList = [];\n  /**\n   * Models of data option is stored sparse for optimizing memory cost\n   * @type {Array.<module:echarts/model/Model>}\n   * @private\n   */\n\n  this._optionModels = [];\n  /**\n   * Global visual properties after visual coding\n   * @type {Object}\n   * @private\n   */\n\n  this._visual = {};\n  /**\n   * Globel layout properties.\n   * @type {Object}\n   * @private\n   */\n\n  this._layout = {};\n  /**\n   * Item visual properties after visual coding\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemVisuals = [];\n  /**\n   * Key: visual type, Value: boolean\n   * @type {Object}\n   * @readOnly\n   */\n\n  this.hasItemVisual = {};\n  /**\n   * Item layout properties after layout\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemLayouts = [];\n  /**\n   * Graphic elemnents\n   * @type {Array.<module:zrender/Element>}\n   * @private\n   */\n\n  this._graphicEls = [];\n  /**\n   * Max size of each chunk.\n   * @type {number}\n   * @private\n   */\n\n  this._chunkSize = 1e5;\n  /**\n   * @type {number}\n   * @private\n   */\n\n  this._chunkCount = 0;\n  /**\n   * @type {Array.<Array|Object>}\n   * @private\n   */\n\n  this._rawData;\n  /**\n   * Raw extent will not be cloned, but only transfered.\n   * It will not be calculated util needed.\n   * key: dim,\n   * value: {end: number, extent: Array.<number>}\n   * @type {Object}\n   * @private\n   */\n\n  this._rawExtent = {};\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._extent = {};\n  /**\n   * key: dim\n   * value: extent\n   * @type {Object}\n   * @private\n   */\n\n  this._approximateExtent = {};\n  /**\n   * Cache summary info for fast visit. See \"dimensionHelper\".\n   * @type {Object}\n   * @private\n   */\n\n  this._dimensionsSummary = summarizeDimensions(this);\n  /**\n   * @type {Object.<Array|TypedArray>}\n   * @private\n   */\n\n  this._invertedIndicesMap = invertedIndicesMap;\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._calculationInfo = {};\n};\n\nvar listProto = List.prototype;\nlistProto.type = 'list';\n/**\n * If each data item has it's own option\n * @type {boolean}\n */\n\nlistProto.hasItemOption = true;\n/**\n * Get dimension name\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n * @return {string} Concrete dim name.\n */\n\nlistProto.getDimension = function (dim) {\n  if (!isNaN(dim)) {\n    dim = this.dimensions[dim] || dim;\n  }\n\n  return dim;\n};\n/**\n * Get type and calculation info of particular dimension\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n */\n\n\nlistProto.getDimensionInfo = function (dim) {\n  // Do not clone, because there may be categories in dimInfo.\n  return this._dimensionInfos[this.getDimension(dim)];\n};\n/**\n * @return {Array.<string>} concrete dimension name list on coord.\n */\n\n\nlistProto.getDimensionsOnCoord = function () {\n  return this._dimensionsSummary.dataDimsOnCoord.slice();\n};\n/**\n * @param {string} coordDim\n * @param {number} [idx] A coordDim may map to more than one data dim.\n *        If idx is `true`, return a array of all mapped dims.\n *        If idx is not specified, return the first dim not extra.\n * @return {string|Array.<string>} concrete data dim.\n *        If idx is number, and not found, return null/undefined.\n *        If idx is `true`, and not found, return empty array (always return array).\n */\n\n\nlistProto.mapDimension = function (coordDim, idx) {\n  var dimensionsSummary = this._dimensionsSummary;\n\n  if (idx == null) {\n    return dimensionsSummary.encodeFirstDimNotExtra[coordDim];\n  }\n\n  var dims = dimensionsSummary.encode[coordDim];\n  return idx === true // always return array if idx is `true`\n  ? (dims || []).slice() : dims && dims[idx];\n};\n/**\n * Initialize from data\n * @param {Array.<Object|number|Array>} data source or data or data provider.\n * @param {Array.<string>} [nameLIst] The name of a datum is used on data diff and\n *        defualt label/tooltip.\n *        A name can be specified in encode.itemName,\n *        or dataItem.name (only for series option data),\n *        or provided in nameList from outside.\n * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n */\n\n\nlistProto.initData = function (data, nameList, dimValueGetter) {\n  var notProvider = Source.isInstance(data) || zrUtil.isArrayLike(data);\n\n  if (notProvider) {\n    data = new DefaultDataProvider(data, this.dimensions.length);\n  }\n\n  this._rawData = data; // Clear\n\n  this._storage = {};\n  this._indices = null;\n  this._nameList = nameList || [];\n  this._idList = [];\n  this._nameRepeatCount = {};\n\n  if (!dimValueGetter) {\n    this.hasItemOption = false;\n  }\n  /**\n   * @readOnly\n   */\n\n\n  this.defaultDimValueGetter = defaultDimValueGetters[this._rawData.getSource().sourceFormat]; // Default dim value getter\n\n  this._dimValueGetter = dimValueGetter = dimValueGetter || this.defaultDimValueGetter; // Reset raw extent.\n\n  this._rawExtent = {};\n\n  this._initDataFromProvider(0, data.count()); // If data has no item option.\n\n\n  if (data.pure) {\n    this.hasItemOption = false;\n  }\n};\n\nlistProto.getProvider = function () {\n  return this._rawData;\n};\n\nlistProto.appendData = function (data) {\n  var rawData = this._rawData;\n  var start = this.count();\n  rawData.appendData(data);\n  var end = rawData.count();\n\n  if (!rawData.persistent) {\n    end += start;\n  }\n\n  this._initDataFromProvider(start, end);\n};\n\nlistProto._initDataFromProvider = function (start, end) {\n  // Optimize.\n  if (start >= end) {\n    return;\n  }\n\n  var chunkSize = this._chunkSize;\n  var rawData = this._rawData;\n  var storage = this._storage;\n  var dimensions = this.dimensions;\n  var dimLen = dimensions.length;\n  var dimensionInfoMap = this._dimensionInfos;\n  var nameList = this._nameList;\n  var idList = this._idList;\n  var rawExtent = this._rawExtent;\n  var nameRepeatCount = this._nameRepeatCount = {};\n  var nameDimIdx;\n  var chunkCount = this._chunkCount;\n  var lastChunkIndex = chunkCount - 1;\n\n  for (var i = 0; i < dimLen; i++) {\n    var dim = dimensions[i];\n\n    if (!rawExtent[dim]) {\n      rawExtent[dim] = getInitialExtent();\n    }\n\n    var dimInfo = dimensionInfoMap[dim];\n\n    if (dimInfo.otherDims.itemName === 0) {\n      nameDimIdx = this._nameDimIdx = i;\n    }\n\n    if (dimInfo.otherDims.itemId === 0) {\n      this._idDimIdx = i;\n    }\n\n    var DataCtor = dataCtors[dimInfo.type];\n\n    if (!storage[dim]) {\n      storage[dim] = [];\n    }\n\n    var resizeChunkArray = storage[dim][lastChunkIndex];\n\n    if (resizeChunkArray && resizeChunkArray.length < chunkSize) {\n      var newStore = new DataCtor(Math.min(end - lastChunkIndex * chunkSize, chunkSize)); // The cost of the copy is probably inconsiderable\n      // within the initial chunkSize.\n\n      for (var j = 0; j < resizeChunkArray.length; j++) {\n        newStore[j] = resizeChunkArray[j];\n      }\n\n      storage[dim][lastChunkIndex] = newStore;\n    } // Create new chunks.\n\n\n    for (var k = chunkCount * chunkSize; k < end; k += chunkSize) {\n      storage[dim].push(new DataCtor(Math.min(end - k, chunkSize)));\n    }\n\n    this._chunkCount = storage[dim].length;\n  }\n\n  var dataItem = new Array(dimLen);\n\n  for (var idx = start; idx < end; idx++) {\n    // NOTICE: Try not to write things into dataItem\n    dataItem = rawData.getItem(idx, dataItem); // Each data item is value\n    // [1, 2]\n    // 2\n    // Bar chart, line chart which uses category axis\n    // only gives the 'y' value. 'x' value is the indices of category\n    // Use a tempValue to normalize the value to be a (x, y) value\n\n    var chunkIndex = Math.floor(idx / chunkSize);\n    var chunkOffset = idx % chunkSize; // Store the data by dimensions\n\n    for (var k = 0; k < dimLen; k++) {\n      var dim = dimensions[k];\n      var dimStorage = storage[dim][chunkIndex]; // PENDING NULL is empty or zero\n\n      var val = this._dimValueGetter(dataItem, dim, idx, k);\n\n      dimStorage[chunkOffset] = val;\n      var dimRawExtent = rawExtent[dim];\n\n      if (val < dimRawExtent[0]) {\n        dimRawExtent[0] = val;\n      }\n\n      if (val > dimRawExtent[1]) {\n        dimRawExtent[1] = val;\n      }\n    } // ??? FIXME not check by pure but sourceFormat?\n    // TODO refactor these logic.\n\n\n    if (!rawData.pure) {\n      var name = nameList[idx];\n\n      if (dataItem && name == null) {\n        // If dataItem is {name: ...}, it has highest priority.\n        // That is appropriate for many common cases.\n        if (dataItem.name != null) {\n          // There is no other place to persistent dataItem.name,\n          // so save it to nameList.\n          nameList[idx] = name = dataItem.name;\n        } else if (nameDimIdx != null) {\n          var nameDim = dimensions[nameDimIdx];\n          var nameDimChunk = storage[nameDim][chunkIndex];\n\n          if (nameDimChunk) {\n            name = nameDimChunk[chunkOffset];\n            var ordinalMeta = dimensionInfoMap[nameDim].ordinalMeta;\n\n            if (ordinalMeta && ordinalMeta.categories.length) {\n              name = ordinalMeta.categories[name];\n            }\n          }\n        }\n      } // Try using the id in option\n      // id or name is used on dynamical data, mapping old and new items.\n\n\n      var id = dataItem == null ? null : dataItem.id;\n\n      if (id == null && name != null) {\n        // Use name as id and add counter to avoid same name\n        nameRepeatCount[name] = nameRepeatCount[name] || 0;\n        id = name;\n\n        if (nameRepeatCount[name] > 0) {\n          id += '__ec__' + nameRepeatCount[name];\n        }\n\n        nameRepeatCount[name]++;\n      }\n\n      id != null && (idList[idx] = id);\n    }\n  }\n\n  if (!rawData.persistent && rawData.clean) {\n    // Clean unused data if data source is typed array.\n    rawData.clean();\n  }\n\n  this._rawCount = this._count = end; // Reset data extent\n\n  this._extent = {};\n  prepareInvertedIndex(this);\n};\n\nfunction prepareInvertedIndex(list) {\n  var invertedIndicesMap = list._invertedIndicesMap;\n  zrUtil.each(invertedIndicesMap, function (invertedIndices, dim) {\n    var dimInfo = list._dimensionInfos[dim]; // Currently, only dimensions that has ordinalMeta can create inverted indices.\n\n    var ordinalMeta = dimInfo.ordinalMeta;\n\n    if (ordinalMeta) {\n      invertedIndices = invertedIndicesMap[dim] = new CtorUint32Array(ordinalMeta.categories.length); // The default value of TypedArray is 0. To avoid miss\n      // mapping to 0, we should set it as NaN.\n\n      for (var i = 0; i < invertedIndices.length; i++) {\n        invertedIndices[i] = NaN;\n      }\n\n      for (var i = 0; i < list._count; i++) {\n        // Only support the case that all values are distinct.\n        invertedIndices[list.get(dim, i)] = i;\n      }\n    }\n  });\n}\n\nfunction getRawValueFromStore(list, dimIndex, rawIndex) {\n  var val;\n\n  if (dimIndex != null) {\n    var chunkSize = list._chunkSize;\n    var chunkIndex = Math.floor(rawIndex / chunkSize);\n    var chunkOffset = rawIndex % chunkSize;\n    var dim = list.dimensions[dimIndex];\n    var chunk = list._storage[dim][chunkIndex];\n\n    if (chunk) {\n      val = chunk[chunkOffset];\n      var ordinalMeta = list._dimensionInfos[dim].ordinalMeta;\n\n      if (ordinalMeta && ordinalMeta.categories.length) {\n        val = ordinalMeta.categories[val];\n      }\n    }\n  }\n\n  return val;\n}\n/**\n * @return {number}\n */\n\n\nlistProto.count = function () {\n  return this._count;\n};\n\nlistProto.getIndices = function () {\n  var newIndices;\n  var indices = this._indices;\n\n  if (indices) {\n    var Ctor = indices.constructor;\n    var thisCount = this._count; // `new Array(a, b, c)` is different from `new Uint32Array(a, b, c)`.\n\n    if (Ctor === Array) {\n      newIndices = new Ctor(thisCount);\n\n      for (var i = 0; i < thisCount; i++) {\n        newIndices[i] = indices[i];\n      }\n    } else {\n      newIndices = new Ctor(indices.buffer, 0, thisCount);\n    }\n  } else {\n    var Ctor = getIndicesCtor(this);\n    var newIndices = new Ctor(this.count());\n\n    for (var i = 0; i < newIndices.length; i++) {\n      newIndices[i] = i;\n    }\n  }\n\n  return newIndices;\n};\n/**\n * Get value. Return NaN if idx is out of range.\n * @param {string} dim Dim must be concrete name.\n * @param {number} idx\n * @param {boolean} stack\n * @return {number}\n */\n\n\nlistProto.get = function (dim, idx\n/*, stack */\n) {\n  if (!(idx >= 0 && idx < this._count)) {\n    return NaN;\n  }\n\n  var storage = this._storage;\n\n  if (!storage[dim]) {\n    // TODO Warn ?\n    return NaN;\n  }\n\n  idx = this.getRawIndex(idx);\n  var chunkIndex = Math.floor(idx / this._chunkSize);\n  var chunkOffset = idx % this._chunkSize;\n  var chunkStore = storage[dim][chunkIndex];\n  var value = chunkStore[chunkOffset]; // FIXME ordinal data type is not stackable\n  // if (stack) {\n  //     var dimensionInfo = this._dimensionInfos[dim];\n  //     if (dimensionInfo && dimensionInfo.stackable) {\n  //         var stackedOn = this.stackedOn;\n  //         while (stackedOn) {\n  //             // Get no stacked data of stacked on\n  //             var stackedValue = stackedOn.get(dim, idx);\n  //             // Considering positive stack, negative stack and empty data\n  //             if ((value >= 0 && stackedValue > 0)  // Positive stack\n  //                 || (value <= 0 && stackedValue < 0) // Negative stack\n  //             ) {\n  //                 value += stackedValue;\n  //             }\n  //             stackedOn = stackedOn.stackedOn;\n  //         }\n  //     }\n  // }\n\n  return value;\n};\n/**\n * @param {string} dim concrete dim\n * @param {number} rawIndex\n * @return {number|string}\n */\n\n\nlistProto.getByRawIndex = function (dim, rawIdx) {\n  if (!(rawIdx >= 0 && rawIdx < this._rawCount)) {\n    return NaN;\n  }\n\n  var dimStore = this._storage[dim];\n\n  if (!dimStore) {\n    // TODO Warn ?\n    return NaN;\n  }\n\n  var chunkIndex = Math.floor(rawIdx / this._chunkSize);\n  var chunkOffset = rawIdx % this._chunkSize;\n  var chunkStore = dimStore[chunkIndex];\n  return chunkStore[chunkOffset];\n};\n/**\n * FIXME Use `get` on chrome maybe slow(in filterSelf and selectRange).\n * Hack a much simpler _getFast\n * @private\n */\n\n\nlistProto._getFast = function (dim, rawIdx) {\n  var chunkIndex = Math.floor(rawIdx / this._chunkSize);\n  var chunkOffset = rawIdx % this._chunkSize;\n  var chunkStore = this._storage[dim][chunkIndex];\n  return chunkStore[chunkOffset];\n};\n/**\n * Get value for multi dimensions.\n * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getValues = function (dimensions, idx\n/*, stack */\n) {\n  var values = [];\n\n  if (!zrUtil.isArray(dimensions)) {\n    // stack = idx;\n    idx = dimensions;\n    dimensions = this.dimensions;\n  }\n\n  for (var i = 0, len = dimensions.length; i < len; i++) {\n    values.push(this.get(dimensions[i], idx\n    /*, stack */\n    ));\n  }\n\n  return values;\n};\n/**\n * If value is NaN. Inlcuding '-'\n * Only check the coord dimensions.\n * @param {string} dim\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.hasValue = function (idx) {\n  var dataDimsOnCoord = this._dimensionsSummary.dataDimsOnCoord;\n  var dimensionInfos = this._dimensionInfos;\n\n  for (var i = 0, len = dataDimsOnCoord.length; i < len; i++) {\n    if ( // Ordinal type can be string or number\n    dimensionInfos[dataDimsOnCoord[i]].type !== 'ordinal' // FIXME check ordinal when using index?\n    && isNaN(this.get(dataDimsOnCoord[i], idx))) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Get extent of data in one dimension\n * @param {string} dim\n * @param {boolean} stack\n */\n\n\nlistProto.getDataExtent = function (dim\n/*, stack */\n) {\n  // Make sure use concrete dim as cache name.\n  dim = this.getDimension(dim);\n  var dimData = this._storage[dim];\n  var initialExtent = getInitialExtent(); // stack = !!((stack || false) && this.getCalculationInfo(dim));\n\n  if (!dimData) {\n    return initialExtent;\n  } // Make more strict checkings to ensure hitting cache.\n\n\n  var currEnd = this.count(); // var cacheName = [dim, !!stack].join('_');\n  // var cacheName = dim;\n  // Consider the most cases when using data zoom, `getDataExtent`\n  // happened before filtering. We cache raw extent, which is not\n  // necessary to be cleared and recalculated when restore data.\n\n  var useRaw = !this._indices; // && !stack;\n\n  var dimExtent;\n\n  if (useRaw) {\n    return this._rawExtent[dim].slice();\n  }\n\n  dimExtent = this._extent[dim];\n\n  if (dimExtent) {\n    return dimExtent.slice();\n  }\n\n  dimExtent = initialExtent;\n  var min = dimExtent[0];\n  var max = dimExtent[1];\n\n  for (var i = 0; i < currEnd; i++) {\n    // var value = stack ? this.get(dim, i, true) : this._getFast(dim, this.getRawIndex(i));\n    var value = this._getFast(dim, this.getRawIndex(i));\n\n    value < min && (min = value);\n    value > max && (max = value);\n  }\n\n  dimExtent = [min, max];\n  this._extent[dim] = dimExtent;\n  return dimExtent;\n};\n/**\n * Optimize for the scenario that data is filtered by a given extent.\n * Consider that if data amount is more than hundreds of thousand,\n * extent calculation will cost more than 10ms and the cache will\n * be erased because of the filtering.\n */\n\n\nlistProto.getApproximateExtent = function (dim\n/*, stack */\n) {\n  dim = this.getDimension(dim);\n  return this._approximateExtent[dim] || this.getDataExtent(dim\n  /*, stack */\n  );\n};\n\nlistProto.setApproximateExtent = function (extent, dim\n/*, stack */\n) {\n  dim = this.getDimension(dim);\n  this._approximateExtent[dim] = extent.slice();\n};\n/**\n * @param {string} key\n * @return {*}\n */\n\n\nlistProto.getCalculationInfo = function (key) {\n  return this._calculationInfo[key];\n};\n/**\n * @param {string|Object} key or k-v object\n * @param {*} [value]\n */\n\n\nlistProto.setCalculationInfo = function (key, value) {\n  isObject(key) ? zrUtil.extend(this._calculationInfo, key) : this._calculationInfo[key] = value;\n};\n/**\n * Get sum of data in one dimension\n * @param {string} dim\n */\n\n\nlistProto.getSum = function (dim\n/*, stack */\n) {\n  var dimData = this._storage[dim];\n  var sum = 0;\n\n  if (dimData) {\n    for (var i = 0, len = this.count(); i < len; i++) {\n      var value = this.get(dim, i\n      /*, stack */\n      );\n\n      if (!isNaN(value)) {\n        sum += value;\n      }\n    }\n  }\n\n  return sum;\n};\n/**\n * Get median of data in one dimension\n * @param {string} dim\n */\n\n\nlistProto.getMedian = function (dim\n/*, stack */\n) {\n  var dimDataArray = []; // map all data of one dimension\n\n  this.each(dim, function (val, idx) {\n    if (!isNaN(val)) {\n      dimDataArray.push(val);\n    }\n  }); // TODO\n  // Use quick select?\n  // immutability & sort\n\n  var sortedDimDataArray = [].concat(dimDataArray).sort(function (a, b) {\n    return a - b;\n  });\n  var len = this.count(); // calculate median\n\n  return len === 0 ? 0 : len % 2 === 1 ? sortedDimDataArray[(len - 1) / 2] : (sortedDimDataArray[len / 2] + sortedDimDataArray[len / 2 - 1]) / 2;\n}; // /**\n//  * Retreive the index with given value\n//  * @param {string} dim Concrete dimension.\n//  * @param {number} value\n//  * @return {number}\n//  */\n// Currently incorrect: should return dataIndex but not rawIndex.\n// Do not fix it until this method is to be used somewhere.\n// FIXME Precision of float value\n// listProto.indexOf = function (dim, value) {\n//     var storage = this._storage;\n//     var dimData = storage[dim];\n//     var chunkSize = this._chunkSize;\n//     if (dimData) {\n//         for (var i = 0, len = this.count(); i < len; i++) {\n//             var chunkIndex = Math.floor(i / chunkSize);\n//             var chunkOffset = i % chunkSize;\n//             if (dimData[chunkIndex][chunkOffset] === value) {\n//                 return i;\n//             }\n//         }\n//     }\n//     return -1;\n// };\n\n/**\n * Only support the dimension which inverted index created.\n * Do not support other cases until required.\n * @param {string} concrete dim\n * @param {number|string} value\n * @return {number} rawIndex\n */\n\n\nlistProto.rawIndexOf = function (dim, value) {\n  var invertedIndices = dim && this._invertedIndicesMap[dim];\n  var rawIndex = invertedIndices[value];\n\n  if (rawIndex == null || isNaN(rawIndex)) {\n    return -1;\n  }\n\n  return rawIndex;\n};\n/**\n * Retreive the index with given name\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfName = function (name) {\n  for (var i = 0, len = this.count(); i < len; i++) {\n    if (this.getName(i) === name) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index with given raw data index\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfRawIndex = function (rawIndex) {\n  if (!this._indices) {\n    return rawIndex;\n  }\n\n  if (rawIndex >= this._rawCount || rawIndex < 0) {\n    return -1;\n  } // Indices are ascending\n\n\n  var indices = this._indices; // If rawIndex === dataIndex\n\n  var rawDataIndex = indices[rawIndex];\n\n  if (rawDataIndex != null && rawDataIndex < this._count && rawDataIndex === rawIndex) {\n    return rawIndex;\n  }\n\n  var left = 0;\n  var right = this._count - 1;\n\n  while (left <= right) {\n    var mid = (left + right) / 2 | 0;\n\n    if (indices[mid] < rawIndex) {\n      left = mid + 1;\n    } else if (indices[mid] > rawIndex) {\n      right = mid - 1;\n    } else {\n      return mid;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index of nearest value\n * @param {string} dim\n * @param {number} value\n * @param {number} [maxDistance=Infinity]\n * @return {Array.<number>} Considere multiple points has the same value.\n */\n\n\nlistProto.indicesOfNearest = function (dim, value, maxDistance) {\n  var storage = this._storage;\n  var dimData = storage[dim];\n  var nearestIndices = [];\n\n  if (!dimData) {\n    return nearestIndices;\n  }\n\n  if (maxDistance == null) {\n    maxDistance = Infinity;\n  }\n\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n\n  for (var i = 0, len = this.count(); i < len; i++) {\n    var diff = value - this.get(dim, i\n    /*, stack */\n    );\n    var dist = Math.abs(diff);\n\n    if (diff <= maxDistance && dist <= minDist) {\n      // For the case of two data are same on xAxis, which has sequence data.\n      // Show the nearest index\n      // https://github.com/ecomfe/echarts/issues/2869\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        nearestIndices.length = 0;\n      }\n\n      nearestIndices.push(i);\n    }\n  }\n\n  return nearestIndices;\n};\n/**\n * Get raw data index\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawIndex = getRawIndexWithoutIndices;\n\nfunction getRawIndexWithoutIndices(idx) {\n  return idx;\n}\n\nfunction getRawIndexWithIndices(idx) {\n  if (idx < this._count && idx >= 0) {\n    return this._indices[idx];\n  }\n\n  return -1;\n}\n/**\n * Get raw data item\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawDataItem = function (idx) {\n  if (!this._rawData.persistent) {\n    var val = [];\n\n    for (var i = 0; i < this.dimensions.length; i++) {\n      var dim = this.dimensions[i];\n      val.push(this.get(dim, idx));\n    }\n\n    return val;\n  } else {\n    return this._rawData.getItem(this.getRawIndex(idx));\n  }\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getName = function (idx) {\n  var rawIndex = this.getRawIndex(idx);\n  return this._nameList[rawIndex] || getRawValueFromStore(this, this._nameDimIdx, rawIndex) || '';\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getId = function (idx) {\n  return getId(this, this.getRawIndex(idx));\n};\n\nfunction getId(list, rawIndex) {\n  var id = list._idList[rawIndex];\n\n  if (id == null) {\n    id = getRawValueFromStore(list, list._idDimIdx, rawIndex);\n  }\n\n  if (id == null) {\n    // FIXME Check the usage in graph, should not use prefix.\n    id = ID_PREFIX + rawIndex;\n  }\n\n  return id;\n}\n\nfunction normalizeDimensions(dimensions) {\n  if (!zrUtil.isArray(dimensions)) {\n    dimensions = [dimensions];\n  }\n\n  return dimensions;\n}\n\nfunction validateDimensions(list, dims) {\n  for (var i = 0; i < dims.length; i++) {\n    // stroage may be empty when no data, so use\n    // dimensionInfos to check.\n    if (!list._dimensionInfos[dims[i]]) {\n      console.error('Unkown dimension ' + dims[i]);\n    }\n  }\n}\n/**\n * Data iteration\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {*} [context=this]\n *\n * @example\n *  list.each('x', function (x, idx) {});\n *  list.each(['x', 'y'], function (x, y, idx) {});\n *  list.each(function (idx) {})\n */\n\n\nlistProto.each = function (dims, cb, context, contextCompat) {\n  'use strict';\n\n  if (!this._count) {\n    return;\n  }\n\n  if (typeof dims === 'function') {\n    contextCompat = context;\n    context = cb;\n    cb = dims;\n    dims = [];\n  } // contextCompat just for compat echarts3\n\n\n  context = context || contextCompat || this;\n  dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n  var dimSize = dims.length;\n\n  for (var i = 0; i < this.count(); i++) {\n    // Simple optimization\n    switch (dimSize) {\n      case 0:\n        cb.call(context, i);\n        break;\n\n      case 1:\n        cb.call(context, this.get(dims[0], i), i);\n        break;\n\n      case 2:\n        cb.call(context, this.get(dims[0], i), this.get(dims[1], i), i);\n        break;\n\n      default:\n        var k = 0;\n        var value = [];\n\n        for (; k < dimSize; k++) {\n          value[k] = this.get(dims[k], i);\n        } // Index\n\n\n        value[k] = i;\n        cb.apply(context, value);\n    }\n  }\n};\n/**\n * Data filter\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {*} [context=this]\n */\n\n\nlistProto.filterSelf = function (dimensions, cb, context, contextCompat) {\n  'use strict';\n\n  if (!this._count) {\n    return;\n  }\n\n  if (typeof dimensions === 'function') {\n    contextCompat = context;\n    context = cb;\n    cb = dimensions;\n    dimensions = [];\n  } // contextCompat just for compat echarts3\n\n\n  context = context || contextCompat || this;\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var count = this.count();\n  var Ctor = getIndicesCtor(this);\n  var newIndices = new Ctor(count);\n  var value = [];\n  var dimSize = dimensions.length;\n  var offset = 0;\n  var dim0 = dimensions[0];\n\n  for (var i = 0; i < count; i++) {\n    var keep;\n    var rawIdx = this.getRawIndex(i); // Simple optimization\n\n    if (dimSize === 0) {\n      keep = cb.call(context, i);\n    } else if (dimSize === 1) {\n      var val = this._getFast(dim0, rawIdx);\n\n      keep = cb.call(context, val, i);\n    } else {\n      for (var k = 0; k < dimSize; k++) {\n        value[k] = this._getFast(dim0, rawIdx);\n      }\n\n      value[k] = i;\n      keep = cb.apply(context, value);\n    }\n\n    if (keep) {\n      newIndices[offset++] = rawIdx;\n    }\n  } // Set indices after filtered.\n\n\n  if (offset < count) {\n    this._indices = newIndices;\n  }\n\n  this._count = offset; // Reset data extent\n\n  this._extent = {};\n  this.getRawIndex = this._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  return this;\n};\n/**\n * Select data in range. (For optimization of filter)\n * (Manually inline code, support 5 million data filtering in data zoom.)\n */\n\n\nlistProto.selectRange = function (range) {\n  'use strict';\n\n  if (!this._count) {\n    return;\n  }\n\n  var dimensions = [];\n\n  for (var dim in range) {\n    if (range.hasOwnProperty(dim)) {\n      dimensions.push(dim);\n    }\n  }\n\n  var dimSize = dimensions.length;\n\n  if (!dimSize) {\n    return;\n  }\n\n  var originalCount = this.count();\n  var Ctor = getIndicesCtor(this);\n  var newIndices = new Ctor(originalCount);\n  var offset = 0;\n  var dim0 = dimensions[0];\n  var min = range[dim0][0];\n  var max = range[dim0][1];\n  var quickFinished = false;\n\n  if (!this._indices) {\n    // Extreme optimization for common case. About 2x faster in chrome.\n    var idx = 0;\n\n    if (dimSize === 1) {\n      var dimStorage = this._storage[dimensions[0]];\n\n      for (var k = 0; k < this._chunkCount; k++) {\n        var chunkStorage = dimStorage[k];\n        var len = Math.min(this._count - k * this._chunkSize, this._chunkSize);\n\n        for (var i = 0; i < len; i++) {\n          var val = chunkStorage[i]; // NaN will not be filtered. Consider the case, in line chart, empty\n          // value indicates the line should be broken. But for the case like\n          // scatter plot, a data item with empty value will not be rendered,\n          // but the axis extent may be effected if some other dim of the data\n          // item has value. Fortunately it is not a significant negative effect.\n\n          if (val >= min && val <= max || isNaN(val)) {\n            newIndices[offset++] = idx;\n          }\n\n          idx++;\n        }\n      }\n\n      quickFinished = true;\n    } else if (dimSize === 2) {\n      var dimStorage = this._storage[dim0];\n      var dimStorage2 = this._storage[dimensions[1]];\n      var min2 = range[dimensions[1]][0];\n      var max2 = range[dimensions[1]][1];\n\n      for (var k = 0; k < this._chunkCount; k++) {\n        var chunkStorage = dimStorage[k];\n        var chunkStorage2 = dimStorage2[k];\n        var len = Math.min(this._count - k * this._chunkSize, this._chunkSize);\n\n        for (var i = 0; i < len; i++) {\n          var val = chunkStorage[i];\n          var val2 = chunkStorage2[i]; // Do not filter NaN, see comment above.\n\n          if ((val >= min && val <= max || isNaN(val)) && (val2 >= min2 && val2 <= max2 || isNaN(val2))) {\n            newIndices[offset++] = idx;\n          }\n\n          idx++;\n        }\n      }\n\n      quickFinished = true;\n    }\n  }\n\n  if (!quickFinished) {\n    if (dimSize === 1) {\n      for (var i = 0; i < originalCount; i++) {\n        var rawIndex = this.getRawIndex(i);\n\n        var val = this._getFast(dim0, rawIndex); // Do not filter NaN, see comment above.\n\n\n        if (val >= min && val <= max || isNaN(val)) {\n          newIndices[offset++] = rawIndex;\n        }\n      }\n    } else {\n      for (var i = 0; i < originalCount; i++) {\n        var keep = true;\n        var rawIndex = this.getRawIndex(i);\n\n        for (var k = 0; k < dimSize; k++) {\n          var dimk = dimensions[k];\n\n          var val = this._getFast(dim, rawIndex); // Do not filter NaN, see comment above.\n\n\n          if (val < range[dimk][0] || val > range[dimk][1]) {\n            keep = false;\n          }\n        }\n\n        if (keep) {\n          newIndices[offset++] = this.getRawIndex(i);\n        }\n      }\n    }\n  } // Set indices after filtered.\n\n\n  if (offset < originalCount) {\n    this._indices = newIndices;\n  }\n\n  this._count = offset; // Reset data extent\n\n  this._extent = {};\n  this.getRawIndex = this._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  return this;\n};\n/**\n * Data mapping to a plain array\n * @param {string|Array.<string>} [dimensions]\n * @param {Function} cb\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.mapArray = function (dimensions, cb, context, contextCompat) {\n  'use strict';\n\n  if (typeof dimensions === 'function') {\n    contextCompat = context;\n    context = cb;\n    cb = dimensions;\n    dimensions = [];\n  } // contextCompat just for compat echarts3\n\n\n  context = context || contextCompat || this;\n  var result = [];\n  this.each(dimensions, function () {\n    result.push(cb && cb.apply(this, arguments));\n  }, context);\n  return result;\n}; // Data in excludeDimensions is copied, otherwise transfered.\n\n\nfunction cloneListForMapAndSample(original, excludeDimensions) {\n  var allDimensions = original.dimensions;\n  var list = new List(zrUtil.map(allDimensions, original.getDimensionInfo, original), original.hostModel); // FIXME If needs stackedOn, value may already been stacked\n\n  transferProperties(list, original);\n  var storage = list._storage = {};\n  var originalStorage = original._storage; // Init storage\n\n  for (var i = 0; i < allDimensions.length; i++) {\n    var dim = allDimensions[i];\n\n    if (originalStorage[dim]) {\n      // Notice that we do not reset invertedIndicesMap here, becuase\n      // there is no scenario of mapping or sampling ordinal dimension.\n      if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n        storage[dim] = cloneDimStore(originalStorage[dim]);\n        list._rawExtent[dim] = getInitialExtent();\n        list._extent[dim] = null;\n      } else {\n        // Direct reference for other dimensions\n        storage[dim] = originalStorage[dim];\n      }\n    }\n  }\n\n  return list;\n}\n\nfunction cloneDimStore(originalDimStore) {\n  var newDimStore = new Array(originalDimStore.length);\n\n  for (var j = 0; j < originalDimStore.length; j++) {\n    newDimStore[j] = cloneChunk(originalDimStore[j]);\n  }\n\n  return newDimStore;\n}\n\nfunction getInitialExtent() {\n  return [Infinity, -Infinity];\n}\n/**\n * Data mapping to a new List with given dimensions\n * @param {string|Array.<string>} dimensions\n * @param {Function} cb\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.map = function (dimensions, cb, context, contextCompat) {\n  'use strict'; // contextCompat just for compat echarts3\n\n  context = context || contextCompat || this;\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var list = cloneListForMapAndSample(this, dimensions); // Following properties are all immutable.\n  // So we can reference to the same value\n\n  list._indices = this._indices;\n  list.getRawIndex = list._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  var storage = list._storage;\n  var tmpRetValue = [];\n  var chunkSize = this._chunkSize;\n  var dimSize = dimensions.length;\n  var dataCount = this.count();\n  var values = [];\n  var rawExtent = list._rawExtent;\n\n  for (var dataIndex = 0; dataIndex < dataCount; dataIndex++) {\n    for (var dimIndex = 0; dimIndex < dimSize; dimIndex++) {\n      values[dimIndex] = this.get(dimensions[dimIndex], dataIndex\n      /*, stack */\n      );\n    }\n\n    values[dimSize] = dataIndex;\n    var retValue = cb && cb.apply(context, values);\n\n    if (retValue != null) {\n      // a number or string (in oridinal dimension)?\n      if (typeof retValue !== 'object') {\n        tmpRetValue[0] = retValue;\n        retValue = tmpRetValue;\n      }\n\n      var rawIndex = this.getRawIndex(dataIndex);\n      var chunkIndex = Math.floor(rawIndex / chunkSize);\n      var chunkOffset = rawIndex % chunkSize;\n\n      for (var i = 0; i < retValue.length; i++) {\n        var dim = dimensions[i];\n        var val = retValue[i];\n        var rawExtentOnDim = rawExtent[dim];\n        var dimStore = storage[dim];\n\n        if (dimStore) {\n          dimStore[chunkIndex][chunkOffset] = val;\n        }\n\n        if (val < rawExtentOnDim[0]) {\n          rawExtentOnDim[0] = val;\n        }\n\n        if (val > rawExtentOnDim[1]) {\n          rawExtentOnDim[1] = val;\n        }\n      }\n    }\n  }\n\n  return list;\n};\n/**\n * Large data down sampling on given dimension\n * @param {string} dimension\n * @param {number} rate\n * @param {Function} sampleValue\n * @param {Function} sampleIndex Sample index for name and id\n */\n\n\nlistProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n  var list = cloneListForMapAndSample(this, [dimension]);\n  var targetStorage = list._storage;\n  var frameValues = [];\n  var frameSize = Math.floor(1 / rate);\n  var dimStore = targetStorage[dimension];\n  var len = this.count();\n  var chunkSize = this._chunkSize;\n  var rawExtentOnDim = list._rawExtent[dimension];\n  var newIndices = new (getIndicesCtor(this))(len);\n  var offset = 0;\n\n  for (var i = 0; i < len; i += frameSize) {\n    // Last frame\n    if (frameSize > len - i) {\n      frameSize = len - i;\n      frameValues.length = frameSize;\n    }\n\n    for (var k = 0; k < frameSize; k++) {\n      var dataIdx = this.getRawIndex(i + k);\n      var originalChunkIndex = Math.floor(dataIdx / chunkSize);\n      var originalChunkOffset = dataIdx % chunkSize;\n      frameValues[k] = dimStore[originalChunkIndex][originalChunkOffset];\n    }\n\n    var value = sampleValue(frameValues);\n    var sampleFrameIdx = this.getRawIndex(Math.min(i + sampleIndex(frameValues, value) || 0, len - 1));\n    var sampleChunkIndex = Math.floor(sampleFrameIdx / chunkSize);\n    var sampleChunkOffset = sampleFrameIdx % chunkSize; // Only write value on the filtered data\n\n    dimStore[sampleChunkIndex][sampleChunkOffset] = value;\n\n    if (value < rawExtentOnDim[0]) {\n      rawExtentOnDim[0] = value;\n    }\n\n    if (value > rawExtentOnDim[1]) {\n      rawExtentOnDim[1] = value;\n    }\n\n    newIndices[offset++] = sampleFrameIdx;\n  }\n\n  list._count = offset;\n  list._indices = newIndices;\n  list.getRawIndex = getRawIndexWithIndices;\n  return list;\n};\n/**\n * Get model of one data item.\n *\n * @param {number} idx\n */\n// FIXME Model proxy ?\n\n\nlistProto.getItemModel = function (idx) {\n  var hostModel = this.hostModel;\n  return new Model(this.getRawDataItem(idx), hostModel, hostModel && hostModel.ecModel);\n};\n/**\n * Create a data differ\n * @param {module:echarts/data/List} otherList\n * @return {module:echarts/data/DataDiffer}\n */\n\n\nlistProto.diff = function (otherList) {\n  var thisList = this;\n  return new DataDiffer(otherList ? otherList.getIndices() : [], this.getIndices(), function (idx) {\n    return getId(otherList, idx);\n  }, function (idx) {\n    return getId(thisList, idx);\n  });\n};\n/**\n * Get visual property.\n * @param {string} key\n */\n\n\nlistProto.getVisual = function (key) {\n  var visual = this._visual;\n  return visual && visual[key];\n};\n/**\n * Set visual property\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setVisual('color', color);\n *  setVisual({\n *      'color': color\n *  });\n */\n\n\nlistProto.setVisual = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setVisual(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._visual = this._visual || {};\n  this._visual[key] = val;\n};\n/**\n * Set layout property.\n * @param {string|Object} key\n * @param {*} [val]\n */\n\n\nlistProto.setLayout = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setLayout(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._layout[key] = val;\n};\n/**\n * Get layout property.\n * @param  {string} key.\n * @return {*}\n */\n\n\nlistProto.getLayout = function (key) {\n  return this._layout[key];\n};\n/**\n * Get layout of single data item\n * @param {number} idx\n */\n\n\nlistProto.getItemLayout = function (idx) {\n  return this._itemLayouts[idx];\n};\n/**\n * Set layout of single data item\n * @param {number} idx\n * @param {Object} layout\n * @param {boolean=} [merge=false]\n */\n\n\nlistProto.setItemLayout = function (idx, layout, merge) {\n  this._itemLayouts[idx] = merge ? zrUtil.extend(this._itemLayouts[idx] || {}, layout) : layout;\n};\n/**\n * Clear all layout of single data item\n */\n\n\nlistProto.clearItemLayouts = function () {\n  this._itemLayouts.length = 0;\n};\n/**\n * Get visual property of single data item\n * @param {number} idx\n * @param {string} key\n * @param {boolean} [ignoreParent=false]\n */\n\n\nlistProto.getItemVisual = function (idx, key, ignoreParent) {\n  var itemVisual = this._itemVisuals[idx];\n  var val = itemVisual && itemVisual[key];\n\n  if (val == null && !ignoreParent) {\n    // Use global visual property\n    return this.getVisual(key);\n  }\n\n  return val;\n};\n/**\n * Set visual property of single data item\n *\n * @param {number} idx\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setItemVisual(0, 'color', color);\n *  setItemVisual(0, {\n *      'color': color\n *  });\n */\n\n\nlistProto.setItemVisual = function (idx, key, value) {\n  var itemVisual = this._itemVisuals[idx] || {};\n  var hasItemVisual = this.hasItemVisual;\n  this._itemVisuals[idx] = itemVisual;\n\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        itemVisual[name] = key[name];\n        hasItemVisual[name] = true;\n      }\n    }\n\n    return;\n  }\n\n  itemVisual[key] = value;\n  hasItemVisual[key] = true;\n};\n/**\n * Clear itemVisuals and list visual.\n */\n\n\nlistProto.clearAllVisual = function () {\n  this._visual = {};\n  this._itemVisuals = [];\n  this.hasItemVisual = {};\n};\n\nvar setItemDataAndSeriesIndex = function (child) {\n  child.seriesIndex = this.seriesIndex;\n  child.dataIndex = this.dataIndex;\n  child.dataType = this.dataType;\n};\n/**\n * Set graphic element relative to data. It can be set as null\n * @param {number} idx\n * @param {module:zrender/Element} [el]\n */\n\n\nlistProto.setItemGraphicEl = function (idx, el) {\n  var hostModel = this.hostModel;\n\n  if (el) {\n    // Add data index and series index for indexing the data by element\n    // Useful in tooltip\n    el.dataIndex = idx;\n    el.dataType = this.dataType;\n    el.seriesIndex = hostModel && hostModel.seriesIndex;\n\n    if (el.type === 'group') {\n      el.traverse(setItemDataAndSeriesIndex, el);\n    }\n  }\n\n  this._graphicEls[idx] = el;\n};\n/**\n * @param {number} idx\n * @return {module:zrender/Element}\n */\n\n\nlistProto.getItemGraphicEl = function (idx) {\n  return this._graphicEls[idx];\n};\n/**\n * @param {Function} cb\n * @param {*} context\n */\n\n\nlistProto.eachItemGraphicEl = function (cb, context) {\n  zrUtil.each(this._graphicEls, function (el, idx) {\n    if (el) {\n      cb && cb.call(context, el, idx);\n    }\n  });\n};\n/**\n * Shallow clone a new list except visual and layout properties, and graph elements.\n * New list only change the indices.\n */\n\n\nlistProto.cloneShallow = function (list) {\n  if (!list) {\n    var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n    list = new List(dimensionInfoList, this.hostModel);\n  } // FIXME\n\n\n  list._storage = this._storage;\n  transferProperties(list, this); // Clone will not change the data extent and indices\n\n  if (this._indices) {\n    var Ctor = this._indices.constructor;\n    list._indices = new Ctor(this._indices);\n  } else {\n    list._indices = null;\n  }\n\n  list.getRawIndex = list._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  return list;\n};\n/**\n * Wrap some method to add more feature\n * @param {string} methodName\n * @param {Function} injectFunction\n */\n\n\nlistProto.wrapMethod = function (methodName, injectFunction) {\n  var originalMethod = this[methodName];\n\n  if (typeof originalMethod !== 'function') {\n    return;\n  }\n\n  this.__wrappedMethods = this.__wrappedMethods || [];\n\n  this.__wrappedMethods.push(methodName);\n\n  this[methodName] = function () {\n    var res = originalMethod.apply(this, arguments);\n    return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n  };\n}; // Methods that create a new list based on this list should be listed here.\n// Notice that those method should `RETURN` the new list.\n\n\nlistProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map']; // Methods that change indices of this list should be listed here.\n\nlistProto.CHANGABLE_METHODS = ['filterSelf', 'selectRange'];\nvar _default = List;\nmodule.exports = _default;","var _vector = require(\"../../core/vector\");\n\nvar v2Distance = _vector.distance;\n\n/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * @inner\n */\nfunction interpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n/**\n * @alias module:zrender/shape/util/smoothSpline\n * @param {Array} points 线段顶点数组\n * @param {boolean} isLoop\n * @return {Array}\n */\n\n\nfunction _default(points, isLoop) {\n  var len = points.length;\n  var ret = [];\n  var distance = 0;\n\n  for (var i = 1; i < len; i++) {\n    distance += v2Distance(points[i - 1], points[i]);\n  }\n\n  var segs = distance / 2;\n  segs = segs < len ? len : segs;\n\n  for (var i = 0; i < segs; i++) {\n    var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n    var idx = Math.floor(pos);\n    var w = pos - idx;\n    var p0;\n    var p1 = points[idx % len];\n    var p2;\n    var p3;\n\n    if (!isLoop) {\n      p0 = points[idx === 0 ? idx : idx - 1];\n      p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n      p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n    } else {\n      p0 = points[(idx - 1 + len) % len];\n      p2 = points[(idx + 1) % len];\n      p3 = points[(idx + 2) % len];\n    }\n\n    var w2 = w * w;\n    var w3 = w * w2;\n    ret.push([interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3), interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)]);\n  }\n\n  return ret;\n}\n\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar TYPE_DELIMITER = '.';\nvar IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\n/**\n * Notice, parseClassType('') should returns {main: '', sub: ''}\n * @public\n */\n\nfunction parseClassType(componentType) {\n  var ret = {\n    main: '',\n    sub: ''\n  };\n\n  if (componentType) {\n    componentType = componentType.split(TYPE_DELIMITER);\n    ret.main = componentType[0] || '';\n    ret.sub = componentType[1] || '';\n  }\n\n  return ret;\n}\n/**\n * @public\n */\n\n\nfunction checkClassType(componentType) {\n  zrUtil.assert(/^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType), 'componentType \"' + componentType + '\" illegal');\n}\n/**\n * @public\n */\n\n\nfunction enableClassExtend(RootClass, mandatoryMethods) {\n  RootClass.$constructor = RootClass;\n\n  RootClass.extend = function (proto) {\n    var superClass = this;\n\n    var ExtendedClass = function () {\n      if (!proto.$constructor) {\n        superClass.apply(this, arguments);\n      } else {\n        proto.$constructor.apply(this, arguments);\n      }\n    };\n\n    zrUtil.extend(ExtendedClass.prototype, proto);\n    ExtendedClass.extend = this.extend;\n    ExtendedClass.superCall = superCall;\n    ExtendedClass.superApply = superApply;\n    zrUtil.inherits(ExtendedClass, this);\n    ExtendedClass.superClass = superClass;\n    return ExtendedClass;\n  };\n}\n\nvar classBase = 0;\n/**\n * Can not use instanceof, consider different scope by\n * cross domain or es module import in ec extensions.\n * Mount a method \"isInstance()\" to Clz.\n */\n\nfunction enableClassCheck(Clz) {\n  var classAttr = ['__\\0is_clz', classBase++, Math.random().toFixed(3)].join('_');\n  Clz.prototype[classAttr] = true;\n\n  Clz.isInstance = function (obj) {\n    return !!(obj && obj[classAttr]);\n  };\n} // superCall should have class info, which can not be fetch from 'this'.\n// Consider this case:\n// class A has method f,\n// class B inherits class A, overrides method f, f call superApply('f'),\n// class C inherits class B, do not overrides method f,\n// then when method of class C is called, dead loop occured.\n\n\nfunction superCall(context, methodName) {\n  var args = zrUtil.slice(arguments, 2);\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n\nfunction superApply(context, methodName, args) {\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n/**\n * @param {Object} entity\n * @param {Object} options\n * @param {boolean} [options.registerWhenExtend]\n * @public\n */\n\n\nfunction enableClassManagement(entity, options) {\n  options = options || {};\n  /**\n   * Component model classes\n   * key: componentType,\n   * value:\n   *     componentClass, when componentType is 'xxx'\n   *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n   * @type {Object}\n   */\n\n  var storage = {};\n\n  entity.registerClass = function (Clazz, componentType) {\n    if (componentType) {\n      checkClassType(componentType);\n      componentType = parseClassType(componentType);\n\n      if (!componentType.sub) {\n        storage[componentType.main] = Clazz;\n      } else if (componentType.sub !== IS_CONTAINER) {\n        var container = makeContainer(componentType);\n        container[componentType.sub] = Clazz;\n      }\n    }\n\n    return Clazz;\n  };\n\n  entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n    var Clazz = storage[componentMainType];\n\n    if (Clazz && Clazz[IS_CONTAINER]) {\n      Clazz = subType ? Clazz[subType] : null;\n    }\n\n    if (throwWhenNotFound && !Clazz) {\n      throw new Error(!subType ? componentMainType + '.' + 'type should be specified.' : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.');\n    }\n\n    return Clazz;\n  };\n\n  entity.getClassesByMainType = function (componentType) {\n    componentType = parseClassType(componentType);\n    var result = [];\n    var obj = storage[componentType.main];\n\n    if (obj && obj[IS_CONTAINER]) {\n      zrUtil.each(obj, function (o, type) {\n        type !== IS_CONTAINER && result.push(o);\n      });\n    } else {\n      result.push(obj);\n    }\n\n    return result;\n  };\n\n  entity.hasClass = function (componentType) {\n    // Just consider componentType.main.\n    componentType = parseClassType(componentType);\n    return !!storage[componentType.main];\n  };\n  /**\n   * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n   */\n\n\n  entity.getAllClassMainTypes = function () {\n    var types = [];\n    zrUtil.each(storage, function (obj, type) {\n      types.push(type);\n    });\n    return types;\n  };\n  /**\n   * If a main type is container and has sub types\n   * @param  {string}  mainType\n   * @return {boolean}\n   */\n\n\n  entity.hasSubTypes = function (componentType) {\n    componentType = parseClassType(componentType);\n    var obj = storage[componentType.main];\n    return obj && obj[IS_CONTAINER];\n  };\n\n  entity.parseClassType = parseClassType;\n\n  function makeContainer(componentType) {\n    var container = storage[componentType.main];\n\n    if (!container || !container[IS_CONTAINER]) {\n      container = storage[componentType.main] = {};\n      container[IS_CONTAINER] = true;\n    }\n\n    return container;\n  }\n\n  if (options.registerWhenExtend) {\n    var originalExtend = entity.extend;\n\n    if (originalExtend) {\n      entity.extend = function (proto) {\n        var ExtendedClass = originalExtend.call(this, proto);\n        return entity.registerClass(ExtendedClass, proto.type);\n      };\n    }\n  }\n\n  return entity;\n}\n/**\n * @param {string|Array.<string>} properties\n */\n\n\nfunction setReadOnly(obj, properties) {// FIXME It seems broken in IE8 simulation of IE11\n  // if (!zrUtil.isArray(properties)) {\n  //     properties = properties != null ? [properties] : [];\n  // }\n  // zrUtil.each(properties, function (prop) {\n  //     var value = obj[prop];\n  //     Object.defineProperty\n  //         && Object.defineProperty(obj, prop, {\n  //             value: value, writable: false\n  //         });\n  //     zrUtil.isArray(obj[prop])\n  //         && Object.freeze\n  //         && Object.freeze(obj[prop]);\n  // });\n}\n\nexports.parseClassType = parseClassType;\nexports.enableClassExtend = enableClassExtend;\nexports.enableClassCheck = enableClassCheck;\nexports.enableClassManagement = enableClassManagement;\nexports.setReadOnly = setReadOnly;","var echarts = require(\"../echarts\");\n\nvar graphic = require(\"../util/graphic\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Model\necharts.extendComponentModel({\n  type: 'title',\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 6,\n    show: true,\n    text: '',\n    // 超链接跳转\n    // link: null,\n    // 仅支持self | blank\n    target: 'blank',\n    subtext: '',\n    // 超链接跳转\n    // sublink: null,\n    // 仅支持self | blank\n    subtarget: 'blank',\n    // 'center' ¦ 'left' ¦ 'right'\n    // ¦ {number}（x坐标，单位px）\n    left: 0,\n    // 'top' ¦ 'bottom' ¦ 'center'\n    // ¦ {number}（y坐标，单位px）\n    top: 0,\n    // 水平对齐\n    // 'auto' | 'left' | 'right' | 'center'\n    // 默认根据 left 的位置判断是左对齐还是右对齐\n    // textAlign: null\n    //\n    // 垂直对齐\n    // 'auto' | 'top' | 'bottom' | 'middle'\n    // 默认根据 top 位置判断是上对齐还是下对齐\n    // textBaseline: null\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 标题边框颜色\n    borderColor: '#ccc',\n    // 标题边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 标题内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 主副标题纵向间隔，单位px，默认为10，\n    itemGap: 10,\n    textStyle: {\n      fontSize: 18,\n      fontWeight: 'bolder',\n      color: '#333'\n    },\n    subtextStyle: {\n      color: '#aaa'\n    }\n  }\n}); // View\n\necharts.extendComponentView({\n  type: 'title',\n  render: function (titleModel, ecModel, api) {\n    this.group.removeAll();\n\n    if (!titleModel.get('show')) {\n      return;\n    }\n\n    var group = this.group;\n    var textStyleModel = titleModel.getModel('textStyle');\n    var subtextStyleModel = titleModel.getModel('subtextStyle');\n    var textAlign = titleModel.get('textAlign');\n    var textBaseline = titleModel.get('textBaseline');\n    var textEl = new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: titleModel.get('text'),\n        textFill: textStyleModel.getTextColor()\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var textRect = textEl.getBoundingRect();\n    var subText = titleModel.get('subtext');\n    var subTextEl = new graphic.Text({\n      style: graphic.setTextStyle({}, subtextStyleModel, {\n        text: subText,\n        textFill: subtextStyleModel.getTextColor(),\n        y: textRect.height + titleModel.get('itemGap'),\n        textVerticalAlign: 'top'\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var link = titleModel.get('link');\n    var sublink = titleModel.get('sublink');\n    textEl.silent = !link;\n    subTextEl.silent = !sublink;\n\n    if (link) {\n      textEl.on('click', function () {\n        window.open(link, '_' + titleModel.get('target'));\n      });\n    }\n\n    if (sublink) {\n      subTextEl.on('click', function () {\n        window.open(sublink, '_' + titleModel.get('subtarget'));\n      });\n    }\n\n    group.add(textEl);\n    subText && group.add(subTextEl); // If no subText, but add subTextEl, there will be an empty line.\n\n    var groupRect = group.getBoundingRect();\n    var layoutOption = titleModel.getBoxLayoutParams();\n    layoutOption.width = groupRect.width;\n    layoutOption.height = groupRect.height;\n    var layoutRect = getLayoutRect(layoutOption, {\n      width: api.getWidth(),\n      height: api.getHeight()\n    }, titleModel.get('padding')); // Adjust text align based on position\n\n    if (!textAlign) {\n      // Align left if title is on the left. center and right is same\n      textAlign = titleModel.get('left') || titleModel.get('right');\n\n      if (textAlign === 'middle') {\n        textAlign = 'center';\n      } // Adjust layout by text align\n\n\n      if (textAlign === 'right') {\n        layoutRect.x += layoutRect.width;\n      } else if (textAlign === 'center') {\n        layoutRect.x += layoutRect.width / 2;\n      }\n    }\n\n    if (!textBaseline) {\n      textBaseline = titleModel.get('top') || titleModel.get('bottom');\n\n      if (textBaseline === 'center') {\n        textBaseline = 'middle';\n      }\n\n      if (textBaseline === 'bottom') {\n        layoutRect.y += layoutRect.height;\n      } else if (textBaseline === 'middle') {\n        layoutRect.y += layoutRect.height / 2;\n      }\n\n      textBaseline = textBaseline || 'top';\n    }\n\n    group.attr('position', [layoutRect.x, layoutRect.y]);\n    var alignStyle = {\n      textAlign: textAlign,\n      textVerticalAlign: textBaseline\n    };\n    textEl.setStyle(alignStyle);\n    subTextEl.setStyle(alignStyle); // Render background\n    // Get groupRect again because textAlign has been changed\n\n    groupRect = group.getBoundingRect();\n    var padding = layoutRect.margin;\n    var style = titleModel.getItemStyle(['color', 'opacity']);\n    style.fill = titleModel.get('backgroundColor');\n    var rect = new graphic.Rect({\n      shape: {\n        x: groupRect.x - padding[3],\n        y: groupRect.y - padding[0],\n        width: groupRect.width + padding[1] + padding[3],\n        height: groupRect.height + padding[0] + padding[2],\n        r: titleModel.get('borderRadius')\n      },\n      style: style,\n      silent: true\n    });\n    graphic.subPixelOptimizeRect(rect);\n    group.add(rect);\n  }\n});","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar axisPointerModelHelper = require(\"../axisPointer/modelHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Base class of AxisView.\n */\nvar AxisView = echarts.extendComponentView({\n  type: 'axis',\n\n  /**\n   * @private\n   */\n  _axisPointer: null,\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  axisPointerClass: null,\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    // FIXME\n    // This process should proformed after coordinate systems updated\n    // (axis scale updated), and should be performed each time update.\n    // So put it here temporarily, although it is not appropriate to\n    // put a model-writing procedure in `view`.\n    this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n    AxisView.superApply(this, 'render', arguments);\n    updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n  },\n\n  /**\n   * Action handler.\n   * @public\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/model/Global} ecModel\n   * @param {module:echarts/ExtensionAPI} api\n   * @param {Object} payload\n   */\n  updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n    updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    var axisPointer = this._axisPointer;\n    axisPointer && axisPointer.remove(api);\n    AxisView.superApply(this, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    disposeAxisPointer(this, api);\n    AxisView.superApply(this, 'dispose', arguments);\n  }\n});\n\nfunction updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n  var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n\n  if (!Clazz) {\n    return;\n  }\n\n  var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n  axisPointerModel ? (axisView._axisPointer || (axisView._axisPointer = new Clazz())).render(axisModel, axisPointerModel, api, forceRender) : disposeAxisPointer(axisView, api);\n}\n\nfunction disposeAxisPointer(axisView, ecModel, api) {\n  var axisPointer = axisView._axisPointer;\n  axisPointer && axisPointer.dispose(ecModel, api);\n  axisView._axisPointer = null;\n}\n\nvar axisPointerClazz = [];\n\nAxisView.registerAxisPointerClass = function (type, clazz) {\n  axisPointerClazz[type] = clazz;\n};\n\nAxisView.getAxisPointerClass = function (type) {\n  return type && axisPointerClazz[type];\n};\n\nvar _default = AxisView;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _helper = require(\"./helper\");\n\nvar setLabel = _helper.setLabel;\n\nvar Model = require(\"../../model/Model\");\n\nvar barItemStyle = require(\"./barItemStyle\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'barBorderWidth']; // FIXME\n// Just for compatible with ec2.\n\nzrUtil.extend(Model.prototype, barItemStyle);\n\nvar _default = echarts.extendChartView({\n  type: 'bar',\n  render: function (seriesModel, ecModel, api) {\n    this._updateDrawMode(seriesModel);\n\n    var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n    if (coordinateSystemType === 'cartesian2d' || coordinateSystemType === 'polar') {\n      this._isLargeDraw ? this._renderLarge(seriesModel, ecModel, api) : this._renderNormal(seriesModel, ecModel, api);\n    } else {}\n\n    return this.group;\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    this._clear();\n\n    this._updateDrawMode(seriesModel);\n  },\n  incrementalRender: function (params, seriesModel, ecModel, api) {\n    // Do not support progressive in normal mode.\n    this._incrementalRenderLarge(params, seriesModel);\n  },\n  _updateDrawMode: function (seriesModel) {\n    var isLargeDraw = seriesModel.pipelineContext.large;\n\n    if (this._isLargeDraw == null || isLargeDraw ^ this._isLargeDraw) {\n      this._isLargeDraw = isLargeDraw;\n\n      this._clear();\n    }\n  },\n  _renderNormal: function (seriesModel, ecModel, api) {\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coord = seriesModel.coordinateSystem;\n    var baseAxis = coord.getBaseAxis();\n    var isHorizontalOrRadial;\n\n    if (coord.type === 'cartesian2d') {\n      isHorizontalOrRadial = baseAxis.isHorizontal();\n    } else if (coord.type === 'polar') {\n      isHorizontalOrRadial = baseAxis.dim === 'angle';\n    }\n\n    var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n    data.diff(oldData).add(function (dataIndex) {\n      if (!data.hasValue(dataIndex)) {\n        return;\n      }\n\n      var itemModel = data.getItemModel(dataIndex);\n      var layout = getLayout[coord.type](data, dataIndex, itemModel);\n      var el = elementCreator[coord.type](data, dataIndex, itemModel, layout, isHorizontalOrRadial, animationModel);\n      data.setItemGraphicEl(dataIndex, el);\n      group.add(el);\n      updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).update(function (newIndex, oldIndex) {\n      var el = oldData.getItemGraphicEl(oldIndex);\n\n      if (!data.hasValue(newIndex)) {\n        group.remove(el);\n        return;\n      }\n\n      var itemModel = data.getItemModel(newIndex);\n      var layout = getLayout[coord.type](data, newIndex, itemModel);\n\n      if (el) {\n        graphic.updateProps(el, {\n          shape: layout\n        }, animationModel, newIndex);\n      } else {\n        el = elementCreator[coord.type](data, newIndex, itemModel, layout, isHorizontalOrRadial, animationModel, true);\n      }\n\n      data.setItemGraphicEl(newIndex, el); // Add back\n\n      group.add(el);\n      updateStyle(el, data, newIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).remove(function (dataIndex) {\n      var el = oldData.getItemGraphicEl(dataIndex);\n\n      if (coord.type === 'cartesian2d') {\n        el && removeRect(dataIndex, animationModel, el);\n      } else {\n        el && removeSector(dataIndex, animationModel, el);\n      }\n    }).execute();\n    this._data = data;\n  },\n  _renderLarge: function (seriesModel, ecModel, api) {\n    this._clear();\n\n    createLarge(seriesModel, this.group);\n  },\n  _incrementalRenderLarge: function (params, seriesModel) {\n    createLarge(seriesModel, this.group, true);\n  },\n  dispose: zrUtil.noop,\n  remove: function (ecModel) {\n    this._clear(ecModel);\n  },\n  _clear: function (ecModel) {\n    var group = this.group;\n    var data = this._data;\n\n    if (ecModel && ecModel.get('animation') && data && !this._isLargeDraw) {\n      data.eachItemGraphicEl(function (el) {\n        if (el.type === 'sector') {\n          removeSector(el.dataIndex, ecModel, el);\n        } else {\n          removeRect(el.dataIndex, ecModel, el);\n        }\n      });\n    } else {\n      group.removeAll();\n    }\n\n    this._data = null;\n  }\n});\n\nvar elementCreator = {\n  cartesian2d: function (data, dataIndex, itemModel, layout, isHorizontal, animationModel, isUpdate) {\n    var rect = new graphic.Rect({\n      shape: zrUtil.extend({}, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var rectShape = rect.shape;\n      var animateProperty = isHorizontal ? 'height' : 'width';\n      var animateTarget = {};\n      rectShape[animateProperty] = 0;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](rect, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return rect;\n  },\n  polar: function (data, dataIndex, itemModel, layout, isRadial, animationModel, isUpdate) {\n    // Keep the same logic with bar in catesion: use end value to control\n    // direction. Notice that if clockwise is true (by default), the sector\n    // will always draw clockwisely, no matter whether endAngle is greater\n    // or less than startAngle.\n    var clockwise = layout.startAngle < layout.endAngle;\n    var sector = new graphic.Sector({\n      shape: zrUtil.defaults({\n        clockwise: clockwise\n      }, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var sectorShape = sector.shape;\n      var animateProperty = isRadial ? 'r' : 'endAngle';\n      var animateTarget = {};\n      sectorShape[animateProperty] = isRadial ? 0 : layout.startAngle;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](sector, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return sector;\n  }\n};\n\nfunction removeRect(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      width: 0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nfunction removeSector(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      r: el.shape.r0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nvar getLayout = {\n  cartesian2d: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    var fixedLineWidth = getLineWidth(itemModel, layout); // fix layout with lineWidth\n\n    var signX = layout.width > 0 ? 1 : -1;\n    var signY = layout.height > 0 ? 1 : -1;\n    return {\n      x: layout.x + signX * fixedLineWidth / 2,\n      y: layout.y + signY * fixedLineWidth / 2,\n      width: layout.width - signX * fixedLineWidth,\n      height: layout.height - signY * fixedLineWidth\n    };\n  },\n  polar: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    return {\n      cx: layout.cx,\n      cy: layout.cy,\n      r0: layout.r0,\n      r: layout.r,\n      startAngle: layout.startAngle,\n      endAngle: layout.endAngle\n    };\n  }\n};\n\nfunction updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal, isPolar) {\n  var color = data.getItemVisual(dataIndex, 'color');\n  var opacity = data.getItemVisual(dataIndex, 'opacity');\n  var itemStyleModel = itemModel.getModel('itemStyle');\n  var hoverStyle = itemModel.getModel('emphasis.itemStyle').getBarItemStyle();\n\n  if (!isPolar) {\n    el.setShape('r', itemStyleModel.get('barBorderRadius') || 0);\n  }\n\n  el.useStyle(zrUtil.defaults({\n    fill: color,\n    opacity: opacity\n  }, itemStyleModel.getBarItemStyle()));\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && el.attr('cursor', cursorStyle);\n  var labelPositionOutside = isHorizontal ? layout.height > 0 ? 'bottom' : 'top' : layout.width > 0 ? 'left' : 'right';\n\n  if (!isPolar) {\n    setLabel(el.style, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside);\n  }\n\n  graphic.setHoverStyle(el, hoverStyle);\n} // In case width or height are too small.\n\n\nfunction getLineWidth(itemModel, rawLayout) {\n  var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n  return Math.min(lineWidth, Math.abs(rawLayout.width), Math.abs(rawLayout.height));\n}\n\nvar LargePath = Path.extend({\n  type: 'largeBar',\n  shape: {\n    points: []\n  },\n  buildPath: function (ctx, shape) {\n    // Drawing lines is more efficient than drawing\n    // a whole line or drawing rects.\n    var points = shape.points;\n    var startPoint = this.__startPoint;\n    var valueIdx = this.__valueIdx;\n\n    for (var i = 0; i < points.length; i += 2) {\n      startPoint[this.__valueIdx] = points[i + valueIdx];\n      ctx.moveTo(startPoint[0], startPoint[1]);\n      ctx.lineTo(points[i], points[i + 1]);\n    }\n  }\n});\n\nfunction createLarge(seriesModel, group, incremental) {\n  // TODO support polar\n  var data = seriesModel.getData();\n  var startPoint = [];\n  var valueIdx = data.getLayout('valueAxisHorizontal') ? 1 : 0;\n  startPoint[1 - valueIdx] = data.getLayout('valueAxisStart');\n  var el = new LargePath({\n    shape: {\n      points: data.getLayout('largePoints')\n    },\n    incremental: !!incremental,\n    __startPoint: startPoint,\n    __valueIdx: valueIdx\n  });\n  group.add(el);\n  setLargeStyle(el, seriesModel, data);\n}\n\nfunction setLargeStyle(el, seriesModel, data) {\n  var borderColor = data.getVisual('borderColor') || data.getVisual('color');\n  var itemStyle = seriesModel.getModel('itemStyle').getItemStyle(['color', 'borderColor']);\n  el.useStyle(itemStyle);\n  el.style.fill = null;\n  el.style.stroke = borderColor;\n  el.style.lineWidth = data.getLayout('barWidth');\n}\n\nmodule.exports = _default;","var _curve = require(\"../core/curve\");\n\nvar quadraticProjectPoint = _curve.quadraticProjectPoint;\n\n/**\n * 二次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l) {\n    return false;\n  }\n\n  var d = quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar OrdinalScale = require(\"../scale/Ordinal\");\n\nvar IntervalScale = require(\"../scale/Interval\");\n\nvar Scale = require(\"../scale/Scale\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar _barGrid = require(\"../layout/barGrid\");\n\nvar prepareLayoutBarSeries = _barGrid.prepareLayoutBarSeries;\nvar makeColumnLayout = _barGrid.makeColumnLayout;\nvar retrieveColumnLayout = _barGrid.retrieveColumnLayout;\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nrequire(\"../scale/Time\");\n\nrequire(\"../scale/Log\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Get axis scale extent before niced.\n * Item of returned array can only be number (including Infinity and NaN).\n */\nfunction getScaleExtent(scale, model) {\n  var scaleType = scale.type;\n  var min = model.getMin();\n  var max = model.getMax();\n  var fixMin = min != null;\n  var fixMax = max != null;\n  var originalExtent = scale.getExtent();\n  var axisDataLen;\n  var boundaryGap;\n  var span;\n\n  if (scaleType === 'ordinal') {\n    axisDataLen = model.getCategories().length;\n  } else {\n    boundaryGap = model.get('boundaryGap');\n\n    if (!zrUtil.isArray(boundaryGap)) {\n      boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n    }\n\n    if (typeof boundaryGap[0] === 'boolean') {\n      boundaryGap = [0, 0];\n    }\n\n    boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n    boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n    span = originalExtent[1] - originalExtent[0] || Math.abs(originalExtent[0]);\n  } // Notice: When min/max is not set (that is, when there are null/undefined,\n  // which is the most common case), these cases should be ensured:\n  // (1) For 'ordinal', show all axis.data.\n  // (2) For others:\n  //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n  //      disabled).\n  //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n  //      be the result that originalExtent enlarged by boundaryGap.\n  // (3) If no data, it should be ensured that `scale.setBlank` is set.\n  // FIXME\n  // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\n  // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\n  // that the results processed by boundaryGap are positive/negative?\n\n\n  if (min == null) {\n    min = scaleType === 'ordinal' ? axisDataLen ? 0 : NaN : originalExtent[0] - boundaryGap[0] * span;\n  }\n\n  if (max == null) {\n    max = scaleType === 'ordinal' ? axisDataLen ? axisDataLen - 1 : NaN : originalExtent[1] + boundaryGap[1] * span;\n  }\n\n  if (min === 'dataMin') {\n    min = originalExtent[0];\n  } else if (typeof min === 'function') {\n    min = min({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  if (max === 'dataMax') {\n    max = originalExtent[1];\n  } else if (typeof max === 'function') {\n    max = max({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  (min == null || !isFinite(min)) && (min = NaN);\n  (max == null || !isFinite(max)) && (max = NaN);\n  scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max) || scaleType === 'ordinal' && !scale.getOrdinalMeta().categories.length); // Evaluate if axis needs cross zero\n\n  if (model.getNeedCrossZero()) {\n    // Axis is over zero and min is not set\n    if (min > 0 && max > 0 && !fixMin) {\n      min = 0;\n    } // Axis is under zero and max is not set\n\n\n    if (min < 0 && max < 0 && !fixMax) {\n      max = 0;\n    }\n  } // If bars are placed on a base axis of type time or interval account for axis boundary overflow and current axis\n  // is base axis\n  // FIXME\n  // (1) Consider support value axis, where below zero and axis `onZero` should be handled properly.\n  // (2) Refactor the logic with `barGrid`. Is it not need to `makeBarWidthAndOffsetInfo` twice with different extent?\n  //     Should not depend on series type `bar`?\n  // (3) Fix that might overlap when using dataZoom.\n  // (4) Consider other chart types using `barGrid`?\n  // See #6728, #4862, `test/bar-overflow-time-plot.html`\n\n\n  var ecModel = model.ecModel;\n\n  if (ecModel && scaleType === 'time'\n  /*|| scaleType === 'interval' */\n  ) {\n    var barSeriesModels = prepareLayoutBarSeries('bar', ecModel);\n    var isBaseAxisAndHasBarSeries;\n    zrUtil.each(barSeriesModels, function (seriesModel) {\n      isBaseAxisAndHasBarSeries |= seriesModel.getBaseAxis() === model.axis;\n    });\n\n    if (isBaseAxisAndHasBarSeries) {\n      // Calculate placement of bars on axis\n      var barWidthAndOffset = makeColumnLayout(barSeriesModels); // Adjust axis min and max to account for overflow\n\n      var adjustedScale = adjustScaleForOverflow(min, max, model, barWidthAndOffset);\n      min = adjustedScale.min;\n      max = adjustedScale.max;\n    }\n  }\n\n  return [min, max];\n}\n\nfunction adjustScaleForOverflow(min, max, model, barWidthAndOffset) {\n  // Get Axis Length\n  var axisExtent = model.axis.getExtent();\n  var axisLength = axisExtent[1] - axisExtent[0]; // Get bars on current base axis and calculate min and max overflow\n\n  var barsOnCurrentAxis = retrieveColumnLayout(barWidthAndOffset, model.axis);\n\n  if (barsOnCurrentAxis === undefined) {\n    return {\n      min: min,\n      max: max\n    };\n  }\n\n  var minOverflow = Infinity;\n  zrUtil.each(barsOnCurrentAxis, function (item) {\n    minOverflow = Math.min(item.offset, minOverflow);\n  });\n  var maxOverflow = -Infinity;\n  zrUtil.each(barsOnCurrentAxis, function (item) {\n    maxOverflow = Math.max(item.offset + item.width, maxOverflow);\n  });\n  minOverflow = Math.abs(minOverflow);\n  maxOverflow = Math.abs(maxOverflow);\n  var totalOverFlow = minOverflow + maxOverflow; // Calulate required buffer based on old range and overflow\n\n  var oldRange = max - min;\n  var oldRangePercentOfNew = 1 - (minOverflow + maxOverflow) / axisLength;\n  var overflowBuffer = oldRange / oldRangePercentOfNew - oldRange;\n  max += overflowBuffer * (maxOverflow / totalOverFlow);\n  min -= overflowBuffer * (minOverflow / totalOverFlow);\n  return {\n    min: min,\n    max: max\n  };\n}\n\nfunction niceScaleExtent(scale, model) {\n  var extent = getScaleExtent(scale, model);\n  var fixMin = model.getMin() != null;\n  var fixMax = model.getMax() != null;\n  var splitNumber = model.get('splitNumber');\n\n  if (scale.type === 'log') {\n    scale.base = model.get('logBase');\n  }\n\n  var scaleType = scale.type;\n  scale.setExtent(extent[0], extent[1]);\n  scale.niceExtent({\n    splitNumber: splitNumber,\n    fixMin: fixMin,\n    fixMax: fixMax,\n    minInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('minInterval') : null,\n    maxInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('maxInterval') : null\n  }); // If some one specified the min, max. And the default calculated interval\n  // is not good enough. He can specify the interval. It is often appeared\n  // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n  // to be 60.\n  // FIXME\n\n  var interval = model.get('interval');\n\n  if (interval != null) {\n    scale.setInterval && scale.setInterval(interval);\n  }\n}\n/**\n * @param {module:echarts/model/Model} model\n * @param {string} [axisType] Default retrieve from model.type\n * @return {module:echarts/scale/*}\n */\n\n\nfunction createScaleByModel(model, axisType) {\n  axisType = axisType || model.get('type');\n\n  if (axisType) {\n    switch (axisType) {\n      // Buildin scale\n      case 'category':\n        return new OrdinalScale(model.getOrdinalMeta ? model.getOrdinalMeta() : model.getCategories(), [Infinity, -Infinity]);\n\n      case 'value':\n        return new IntervalScale();\n      // Extended scale, like time and log\n\n      default:\n        return (Scale.getClass(axisType) || IntervalScale).create(model);\n    }\n  }\n}\n/**\n * Check if the axis corss 0\n */\n\n\nfunction ifAxisCrossZero(axis) {\n  var dataExtent = axis.scale.getExtent();\n  var min = dataExtent[0];\n  var max = dataExtent[1];\n  return !(min > 0 && max > 0 || min < 0 && max < 0);\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @return {Function} Label formatter function.\n *         param: {number} tickValue,\n *         param: {number} idx, the index in all ticks.\n *                         If category axis, this param is not requied.\n *         return: {string} label string.\n */\n\n\nfunction makeLabelFormatter(axis) {\n  var labelFormatter = axis.getLabelModel().get('formatter');\n  var categoryTickStart = axis.type === 'category' ? axis.scale.getExtent()[0] : null;\n\n  if (typeof labelFormatter === 'string') {\n    labelFormatter = function (tpl) {\n      return function (val) {\n        return tpl.replace('{value}', val != null ? val : '');\n      };\n    }(labelFormatter); // Consider empty array\n\n\n    return labelFormatter;\n  } else if (typeof labelFormatter === 'function') {\n    return function (tickValue, idx) {\n      // The original intention of `idx` is \"the index of the tick in all ticks\".\n      // But the previous implementation of category axis do not consider the\n      // `axisLabel.interval`, which cause that, for example, the `interval` is\n      // `1`, then the ticks \"name5\", \"name7\", \"name9\" are displayed, where the\n      // corresponding `idx` are `0`, `2`, `4`, but not `0`, `1`, `2`. So we keep\n      // the definition here for back compatibility.\n      if (categoryTickStart != null) {\n        idx = tickValue - categoryTickStart;\n      }\n\n      return labelFormatter(getAxisRawValue(axis, tickValue), idx);\n    };\n  } else {\n    return function (tick) {\n      return axis.scale.getLabel(tick);\n    };\n  }\n}\n\nfunction getAxisRawValue(axis, value) {\n  // In category axis with data zoom, tick is not the original\n  // index of axis.data. So tick should not be exposed to user\n  // in category axis.\n  return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @return {module:zrender/core/BoundingRect} Be null/undefined if no labels.\n */\n\n\nfunction estimateLabelUnionRect(axis) {\n  var axisModel = axis.model;\n  var scale = axis.scale;\n\n  if (!axisModel.get('axisLabel.show') || scale.isBlank()) {\n    return;\n  }\n\n  var isCategory = axis.type === 'category';\n  var realNumberScaleTicks;\n  var tickCount;\n  var categoryScaleExtent = scale.getExtent(); // Optimize for large category data, avoid call `getTicks()`.\n\n  if (isCategory) {\n    tickCount = scale.count();\n  } else {\n    realNumberScaleTicks = scale.getTicks();\n    tickCount = realNumberScaleTicks.length;\n  }\n\n  var axisLabelModel = axis.getLabelModel();\n  var labelFormatter = makeLabelFormatter(axis);\n  var rect;\n  var step = 1; // Simple optimization for large amount of labels\n\n  if (tickCount > 40) {\n    step = Math.ceil(tickCount / 40);\n  }\n\n  for (var i = 0; i < tickCount; i += step) {\n    var tickValue = realNumberScaleTicks ? realNumberScaleTicks[i] : categoryScaleExtent[0] + i;\n    var label = labelFormatter(tickValue);\n    var unrotatedSingleRect = axisLabelModel.getTextRect(label);\n    var singleRect = rotateTextRect(unrotatedSingleRect, axisLabelModel.get('rotate') || 0);\n    rect ? rect.union(singleRect) : rect = singleRect;\n  }\n\n  return rect;\n}\n\nfunction rotateTextRect(textRect, rotate) {\n  var rotateRadians = rotate * Math.PI / 180;\n  var boundingBox = textRect.plain();\n  var beforeWidth = boundingBox.width;\n  var beforeHeight = boundingBox.height;\n  var afterWidth = beforeWidth * Math.cos(rotateRadians) + beforeHeight * Math.sin(rotateRadians);\n  var afterHeight = beforeWidth * Math.sin(rotateRadians) + beforeHeight * Math.cos(rotateRadians);\n  var rotatedRect = new BoundingRect(boundingBox.x, boundingBox.y, afterWidth, afterHeight);\n  return rotatedRect;\n}\n\nexports.getScaleExtent = getScaleExtent;\nexports.niceScaleExtent = niceScaleExtent;\nexports.createScaleByModel = createScaleByModel;\nexports.ifAxisCrossZero = ifAxisCrossZero;\nexports.makeLabelFormatter = makeLabelFormatter;\nexports.getAxisRawValue = getAxisRawValue;\nexports.estimateLabelUnionRect = estimateLabelUnionRect;","var guid = require(\"./core/guid\");\n\nvar env = require(\"./core/env\");\n\nvar zrUtil = require(\"./core/util\");\n\nvar Handler = require(\"./Handler\");\n\nvar Storage = require(\"./Storage\");\n\nvar Painter = require(\"./Painter\");\n\nvar Animation = require(\"./animation/Animation\");\n\nvar HandlerProxy = require(\"./dom/HandlerProxy\");\n\n/*!\n* ZRender, a high performance 2d drawing library.\n*\n* Copyright (c) 2013, Baidu Inc.\n* All rights reserved.\n*\n* LICENSE\n* https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n*/\nvar useVML = !env.canvasSupported;\nvar painterCtors = {\n  canvas: Painter\n};\nvar instances = {}; // ZRender实例map索引\n\n/**\n * @type {string}\n */\n\nvar version = '4.0.4';\n/**\n * Initializing a zrender instance\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n * @return {module:zrender/ZRender}\n */\n\nfunction init(dom, opts) {\n  var zr = new ZRender(guid(), dom, opts);\n  instances[zr.id] = zr;\n  return zr;\n}\n/**\n * Dispose zrender instance\n * @param {module:zrender/ZRender} zr\n */\n\n\nfunction dispose(zr) {\n  if (zr) {\n    zr.dispose();\n  } else {\n    for (var key in instances) {\n      if (instances.hasOwnProperty(key)) {\n        instances[key].dispose();\n      }\n    }\n\n    instances = {};\n  }\n\n  return this;\n}\n/**\n * Get zrender instance by id\n * @param {string} id zrender instance id\n * @return {module:zrender/ZRender}\n */\n\n\nfunction getInstance(id) {\n  return instances[id];\n}\n\nfunction registerPainter(name, Ctor) {\n  painterCtors[name] = Ctor;\n}\n\nfunction delInstance(id) {\n  delete instances[id];\n}\n/**\n * @module zrender/ZRender\n */\n\n/**\n * @constructor\n * @alias module:zrender/ZRender\n * @param {string} id\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n */\n\n\nvar ZRender = function (id, dom, opts) {\n  opts = opts || {};\n  /**\n   * @type {HTMLDomElement}\n   */\n\n  this.dom = dom;\n  /**\n   * @type {string}\n   */\n\n  this.id = id;\n  var self = this;\n  var storage = new Storage();\n  var rendererType = opts.renderer; // TODO WebGL\n\n  if (useVML) {\n    if (!painterCtors.vml) {\n      throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n    }\n\n    rendererType = 'vml';\n  } else if (!rendererType || !painterCtors[rendererType]) {\n    rendererType = 'canvas';\n  }\n\n  var painter = new painterCtors[rendererType](dom, storage, opts, id);\n  this.storage = storage;\n  this.painter = painter;\n  var handerProxy = !env.node && !env.worker ? new HandlerProxy(painter.getViewportRoot()) : null;\n  this.handler = new Handler(storage, painter, handerProxy, painter.root);\n  /**\n   * @type {module:zrender/animation/Animation}\n   */\n\n  this.animation = new Animation({\n    stage: {\n      update: zrUtil.bind(this.flush, this)\n    }\n  });\n  this.animation.start();\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._needsRefresh; // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n  // FIXME 有点ugly\n\n  var oldDelFromStorage = storage.delFromStorage;\n  var oldAddToStorage = storage.addToStorage;\n\n  storage.delFromStorage = function (el) {\n    oldDelFromStorage.call(storage, el);\n    el && el.removeSelfFromZr(self);\n  };\n\n  storage.addToStorage = function (el) {\n    oldAddToStorage.call(storage, el);\n    el.addSelfToZr(self);\n  };\n};\n\nZRender.prototype = {\n  constructor: ZRender,\n\n  /**\n   * 获取实例唯一标识\n   * @return {string}\n   */\n  getId: function () {\n    return this.id;\n  },\n\n  /**\n   * 添加元素\n   * @param  {module:zrender/Element} el\n   */\n  add: function (el) {\n    this.storage.addRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * 删除元素\n   * @param  {module:zrender/Element} el\n   */\n  remove: function (el) {\n    this.storage.delRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Change configuration of layer\n   * @param {string} zLevel\n   * @param {Object} config\n   * @param {string} [config.clearColor=0] Clear color\n   * @param {string} [config.motionBlur=false] If enable motion blur\n   * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n  */\n  configLayer: function (zLevel, config) {\n    if (this.painter.configLayer) {\n      this.painter.configLayer(zLevel, config);\n    }\n\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Set background color\n   * @param {string} backgroundColor\n   */\n  setBackgroundColor: function (backgroundColor) {\n    if (this.painter.setBackgroundColor) {\n      this.painter.setBackgroundColor(backgroundColor);\n    }\n\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Repaint the canvas immediately\n   */\n  refreshImmediately: function () {\n    // var start = new Date();\n    // Clear needsRefresh ahead to avoid something wrong happens in refresh\n    // Or it will cause zrender refreshes again and again.\n    this._needsRefresh = false;\n    this.painter.refresh();\n    /**\n     * Avoid trigger zr.refresh in Element#beforeUpdate hook\n     */\n\n    this._needsRefresh = false; // var end = new Date();\n    // var log = document.getElementById('log');\n    // if (log) {\n    //     log.innerHTML = log.innerHTML + '<br>' + (end - start);\n    // }\n  },\n\n  /**\n   * Mark and repaint the canvas in the next frame of browser\n   */\n  refresh: function () {\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Perform all refresh\n   */\n  flush: function () {\n    var triggerRendered;\n\n    if (this._needsRefresh) {\n      triggerRendered = true;\n      this.refreshImmediately();\n    }\n\n    if (this._needsRefreshHover) {\n      triggerRendered = true;\n      this.refreshHoverImmediately();\n    }\n\n    triggerRendered && this.trigger('rendered');\n  },\n\n  /**\n   * Add element to hover layer\n   * @param  {module:zrender/Element} el\n   * @param {Object} style\n   */\n  addHover: function (el, style) {\n    if (this.painter.addHover) {\n      this.painter.addHover(el, style);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Add element from hover layer\n   * @param  {module:zrender/Element} el\n   */\n  removeHover: function (el) {\n    if (this.painter.removeHover) {\n      this.painter.removeHover(el);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Clear all hover elements in hover layer\n   * @param  {module:zrender/Element} el\n   */\n  clearHover: function () {\n    if (this.painter.clearHover) {\n      this.painter.clearHover();\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Refresh hover in next frame\n   */\n  refreshHover: function () {\n    this._needsRefreshHover = true;\n  },\n\n  /**\n   * Refresh hover immediately\n   */\n  refreshHoverImmediately: function () {\n    this._needsRefreshHover = false;\n    this.painter.refreshHover && this.painter.refreshHover();\n  },\n\n  /**\n   * Resize the canvas.\n   * Should be invoked when container size is changed\n   * @param {Object} [opts]\n   * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n   * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n   */\n  resize: function (opts) {\n    opts = opts || {};\n    this.painter.resize(opts.width, opts.height);\n    this.handler.resize();\n  },\n\n  /**\n   * Stop and clear all animation immediately\n   */\n  clearAnimation: function () {\n    this.animation.clear();\n  },\n\n  /**\n   * Get container width\n   */\n  getWidth: function () {\n    return this.painter.getWidth();\n  },\n\n  /**\n   * Get container height\n   */\n  getHeight: function () {\n    return this.painter.getHeight();\n  },\n\n  /**\n   * Export the canvas as Base64 URL\n   * @param {string} type\n   * @param {string} [backgroundColor='#fff']\n   * @return {string} Base64 URL\n   */\n  // toDataURL: function(type, backgroundColor) {\n  //     return this.painter.getRenderedCanvas({\n  //         backgroundColor: backgroundColor\n  //     }).toDataURL(type);\n  // },\n\n  /**\n   * Converting a path to image.\n   * It has much better performance of drawing image rather than drawing a vector path.\n   * @param {module:zrender/graphic/Path} e\n   * @param {number} width\n   * @param {number} height\n   */\n  pathToImage: function (e, dpr) {\n    return this.painter.pathToImage(e, dpr);\n  },\n\n  /**\n   * Set default cursor\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    this.handler.setCursorStyle(cursorStyle);\n  },\n\n  /**\n   * Find hovered element\n   * @param {number} x\n   * @param {number} y\n   * @return {Object} {target, topTarget}\n   */\n  findHover: function (x, y) {\n    return this.handler.findHover(x, y);\n  },\n\n  /**\n   * Bind event\n   *\n   * @param {string} eventName Event name\n   * @param {Function} eventHandler Handler function\n   * @param {Object} [context] Context object\n   */\n  on: function (eventName, eventHandler, context) {\n    this.handler.on(eventName, eventHandler, context);\n  },\n\n  /**\n   * Unbind event\n   * @param {string} eventName Event name\n   * @param {Function} [eventHandler] Handler function\n   */\n  off: function (eventName, eventHandler) {\n    this.handler.off(eventName, eventHandler);\n  },\n\n  /**\n   * Trigger event manually\n   *\n   * @param {string} eventName Event name\n   * @param {event=} event Event object\n   */\n  trigger: function (eventName, event) {\n    this.handler.trigger(eventName, event);\n  },\n\n  /**\n   * Clear all objects and the canvas.\n   */\n  clear: function () {\n    this.storage.delRoot();\n    this.painter.clear();\n  },\n\n  /**\n   * Dispose self.\n   */\n  dispose: function () {\n    this.animation.stop();\n    this.clear();\n    this.storage.dispose();\n    this.painter.dispose();\n    this.handler.dispose();\n    this.animation = this.storage = this.painter = this.handler = null;\n    delInstance(this.id);\n  }\n};\nexports.version = version;\nexports.init = init;\nexports.dispose = dispose;\nexports.getInstance = getInstance;\nexports.registerPainter = registerPainter;","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar map = _util.map;\nvar isArray = _util.isArray;\nvar isFunction = _util.isFunction;\nvar createHashMap = _util.createHashMap;\nvar noop = _util.noop;\n\nvar _task = require(\"./task\");\n\nvar createTask = _task.createTask;\n\nvar _component = require(\"../util/component\");\n\nvar getUID = _component.getUID;\n\nvar GlobalModel = require(\"../model/Global\");\n\nvar ExtensionAPI = require(\"../ExtensionAPI\");\n\nvar _model = require(\"../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/stream/Scheduler\n */\n\n/**\n * @constructor\n */\nfunction Scheduler(ecInstance, api, dataProcessorHandlers, visualHandlers) {\n  this.ecInstance = ecInstance;\n  this.api = api;\n  this.unfinished; // Fix current processors in case that in some rear cases that\n  // processors might be registered after echarts instance created.\n  // Register processors incrementally for a echarts instance is\n  // not supported by this stream architecture.\n\n  var dataProcessorHandlers = this._dataProcessorHandlers = dataProcessorHandlers.slice();\n  var visualHandlers = this._visualHandlers = visualHandlers.slice();\n  this._allHandlers = dataProcessorHandlers.concat(visualHandlers);\n  /**\n   * @private\n   * @type {\n   *     [handlerUID: string]: {\n   *         seriesTaskMap?: {\n   *             [seriesUID: string]: Task\n   *         },\n   *         overallTask?: Task\n   *     }\n   * }\n   */\n\n  this._stageTaskMap = createHashMap();\n}\n\nvar proto = Scheduler.prototype;\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} payload\n */\n\nproto.restoreData = function (ecModel, payload) {\n  // TODO: Only restroe needed series and components, but not all components.\n  // Currently `restoreData` of all of the series and component will be called.\n  // But some independent components like `title`, `legend`, `graphic`, `toolbox`,\n  // `tooltip`, `axisPointer`, etc, do not need series refresh when `setOption`,\n  // and some components like coordinate system, axes, dataZoom, visualMap only\n  // need their target series refresh.\n  // (1) If we are implementing this feature some day, we should consider these cases:\n  // if a data processor depends on a component (e.g., dataZoomProcessor depends\n  // on the settings of `dataZoom`), it should be re-performed if the component\n  // is modified by `setOption`.\n  // (2) If a processor depends on sevral series, speicified by its `getTargetSeries`,\n  // it should be re-performed when the result array of `getTargetSeries` changed.\n  // We use `dependencies` to cover these issues.\n  // (3) How to update target series when coordinate system related components modified.\n  // TODO: simply the dirty mechanism? Check whether only the case here can set tasks dirty,\n  // and this case all of the tasks will be set as dirty.\n  ecModel.restoreData(payload); // Theoretically an overall task not only depends on each of its target series, but also\n  // depends on all of the series.\n  // The overall task is not in pipeline, and `ecModel.restoreData` only set pipeline tasks\n  // dirty. If `getTargetSeries` of an overall task returns nothing, we should also ensure\n  // that the overall task is set as dirty and to be performed, otherwise it probably cause\n  // state chaos. So we have to set dirty of all of the overall tasks manually, otherwise it\n  // probably cause state chaos (consider `dataZoomProcessor`).\n\n  this._stageTaskMap.each(function (taskRecord) {\n    var overallTask = taskRecord.overallTask;\n    overallTask && overallTask.dirty();\n  });\n}; // If seriesModel provided, incremental threshold is check by series data.\n\n\nproto.getPerformArgs = function (task, isBlock) {\n  // For overall task\n  if (!task.__pipeline) {\n    return;\n  }\n\n  var pipeline = this._pipelineMap.get(task.__pipeline.id);\n\n  var pCtx = pipeline.context;\n  var incremental = !isBlock && pipeline.progressiveEnabled && (!pCtx || pCtx.progressiveRender) && task.__idxInPipeline > pipeline.blockIndex;\n  var step = incremental ? pipeline.step : null;\n  var modDataCount = pCtx && pCtx.modDataCount;\n  var modBy = modDataCount != null ? Math.ceil(modDataCount / step) : null;\n  return {\n    step: step,\n    modBy: modBy,\n    modDataCount: modDataCount\n  };\n};\n\nproto.getPipeline = function (pipelineId) {\n  return this._pipelineMap.get(pipelineId);\n};\n/**\n * Current, progressive rendering starts from visual and layout.\n * Always detect render mode in the same stage, avoiding that incorrect\n * detection caused by data filtering.\n * Caution:\n * `updateStreamModes` use `seriesModel.getData()`.\n */\n\n\nproto.updateStreamModes = function (seriesModel, view) {\n  var pipeline = this._pipelineMap.get(seriesModel.uid);\n\n  var data = seriesModel.getData();\n  var dataLen = data.count(); // `progressiveRender` means that can render progressively in each\n  // animation frame. Note that some types of series do not provide\n  // `view.incrementalPrepareRender` but support `chart.appendData`. We\n  // use the term `incremental` but not `progressive` to describe the\n  // case that `chart.appendData`.\n\n  var progressiveRender = pipeline.progressiveEnabled && view.incrementalPrepareRender && dataLen >= pipeline.threshold;\n  var large = seriesModel.get('large') && dataLen >= seriesModel.get('largeThreshold'); // TODO: modDataCount should not updated if `appendData`, otherwise cause whole repaint.\n  // see `test/candlestick-large3.html`\n\n  var modDataCount = seriesModel.get('progressiveChunkMode') === 'mod' ? dataLen : null;\n  seriesModel.pipelineContext = pipeline.context = {\n    progressiveRender: progressiveRender,\n    modDataCount: modDataCount,\n    large: large\n  };\n};\n\nproto.restorePipelines = function (ecModel) {\n  var scheduler = this;\n  var pipelineMap = scheduler._pipelineMap = createHashMap();\n  ecModel.eachSeries(function (seriesModel) {\n    var progressive = seriesModel.getProgressive();\n    var pipelineId = seriesModel.uid;\n    pipelineMap.set(pipelineId, {\n      id: pipelineId,\n      head: null,\n      tail: null,\n      threshold: seriesModel.getProgressiveThreshold(),\n      progressiveEnabled: progressive && !(seriesModel.preventIncremental && seriesModel.preventIncremental()),\n      blockIndex: -1,\n      step: Math.round(progressive || 700),\n      count: 0\n    });\n    pipe(scheduler, seriesModel, seriesModel.dataTask);\n  });\n};\n\nproto.prepareStageTasks = function () {\n  var stageTaskMap = this._stageTaskMap;\n  var ecModel = this.ecInstance.getModel();\n  var api = this.api;\n  each(this._allHandlers, function (handler) {\n    var record = stageTaskMap.get(handler.uid) || stageTaskMap.set(handler.uid, []);\n    handler.reset && createSeriesStageTask(this, handler, record, ecModel, api);\n    handler.overallReset && createOverallStageTask(this, handler, record, ecModel, api);\n  }, this);\n};\n\nproto.prepareView = function (view, model, ecModel, api) {\n  var renderTask = view.renderTask;\n  var context = renderTask.context;\n  context.model = model;\n  context.ecModel = ecModel;\n  context.api = api;\n  renderTask.__block = !view.incrementalPrepareRender;\n  pipe(this, model, renderTask);\n};\n\nproto.performDataProcessorTasks = function (ecModel, payload) {\n  // If we do not use `block` here, it should be considered when to update modes.\n  performStageTasks(this, this._dataProcessorHandlers, ecModel, payload, {\n    block: true\n  });\n}; // opt\n// opt.visualType: 'visual' or 'layout'\n// opt.setDirty\n\n\nproto.performVisualTasks = function (ecModel, payload, opt) {\n  performStageTasks(this, this._visualHandlers, ecModel, payload, opt);\n};\n\nfunction performStageTasks(scheduler, stageHandlers, ecModel, payload, opt) {\n  opt = opt || {};\n  var unfinished;\n  each(stageHandlers, function (stageHandler, idx) {\n    if (opt.visualType && opt.visualType !== stageHandler.visualType) {\n      return;\n    }\n\n    var stageHandlerRecord = scheduler._stageTaskMap.get(stageHandler.uid);\n\n    var seriesTaskMap = stageHandlerRecord.seriesTaskMap;\n    var overallTask = stageHandlerRecord.overallTask;\n\n    if (overallTask) {\n      var overallNeedDirty;\n      var agentStubMap = overallTask.agentStubMap;\n      agentStubMap.each(function (stub) {\n        if (needSetDirty(opt, stub)) {\n          stub.dirty();\n          overallNeedDirty = true;\n        }\n      });\n      overallNeedDirty && overallTask.dirty();\n      updatePayload(overallTask, payload);\n      var performArgs = scheduler.getPerformArgs(overallTask, opt.block); // Execute stubs firstly, which may set the overall task dirty,\n      // then execute the overall task. And stub will call seriesModel.setData,\n      // which ensures that in the overallTask seriesModel.getData() will not\n      // return incorrect data.\n\n      agentStubMap.each(function (stub) {\n        stub.perform(performArgs);\n      });\n      unfinished |= overallTask.perform(performArgs);\n    } else if (seriesTaskMap) {\n      seriesTaskMap.each(function (task, pipelineId) {\n        if (needSetDirty(opt, task)) {\n          task.dirty();\n        }\n\n        var performArgs = scheduler.getPerformArgs(task, opt.block);\n        performArgs.skip = !stageHandler.performRawSeries && ecModel.isSeriesFiltered(task.context.model);\n        updatePayload(task, payload);\n        unfinished |= task.perform(performArgs);\n      });\n    }\n  });\n\n  function needSetDirty(opt, task) {\n    return opt.setDirty && (!opt.dirtyMap || opt.dirtyMap.get(task.__pipeline.id));\n  }\n\n  scheduler.unfinished |= unfinished;\n}\n\nproto.performSeriesTasks = function (ecModel) {\n  var unfinished;\n  ecModel.eachSeries(function (seriesModel) {\n    // Progress to the end for dataInit and dataRestore.\n    unfinished |= seriesModel.dataTask.perform();\n  });\n  this.unfinished |= unfinished;\n};\n\nproto.plan = function () {\n  // Travel pipelines, check block.\n  this._pipelineMap.each(function (pipeline) {\n    var task = pipeline.tail;\n\n    do {\n      if (task.__block) {\n        pipeline.blockIndex = task.__idxInPipeline;\n        break;\n      }\n\n      task = task.getUpstream();\n    } while (task);\n  });\n};\n\nvar updatePayload = proto.updatePayload = function (task, payload) {\n  payload !== 'remain' && (task.context.payload = payload);\n};\n\nfunction createSeriesStageTask(scheduler, stageHandler, stageHandlerRecord, ecModel, api) {\n  var seriesTaskMap = stageHandlerRecord.seriesTaskMap || (stageHandlerRecord.seriesTaskMap = createHashMap());\n  var seriesType = stageHandler.seriesType;\n  var getTargetSeries = stageHandler.getTargetSeries; // If a stageHandler should cover all series, `createOnAllSeries` should be declared mandatorily,\n  // to avoid some typo or abuse. Otherwise if an extension do not specify a `seriesType`,\n  // it works but it may cause other irrelevant charts blocked.\n\n  if (stageHandler.createOnAllSeries) {\n    ecModel.eachRawSeries(create);\n  } else if (seriesType) {\n    ecModel.eachRawSeriesByType(seriesType, create);\n  } else if (getTargetSeries) {\n    getTargetSeries(ecModel, api).each(create);\n  }\n\n  function create(seriesModel) {\n    var pipelineId = seriesModel.uid; // Init tasks for each seriesModel only once.\n    // Reuse original task instance.\n\n    var task = seriesTaskMap.get(pipelineId) || seriesTaskMap.set(pipelineId, createTask({\n      plan: seriesTaskPlan,\n      reset: seriesTaskReset,\n      count: seriesTaskCount\n    }));\n    task.context = {\n      model: seriesModel,\n      ecModel: ecModel,\n      api: api,\n      useClearVisual: stageHandler.isVisual && !stageHandler.isLayout,\n      plan: stageHandler.plan,\n      reset: stageHandler.reset,\n      scheduler: scheduler\n    };\n    pipe(scheduler, seriesModel, task);\n  } // Clear unused series tasks.\n\n\n  var pipelineMap = scheduler._pipelineMap;\n  seriesTaskMap.each(function (task, pipelineId) {\n    if (!pipelineMap.get(pipelineId)) {\n      task.dispose();\n      seriesTaskMap.removeKey(pipelineId);\n    }\n  });\n}\n\nfunction createOverallStageTask(scheduler, stageHandler, stageHandlerRecord, ecModel, api) {\n  var overallTask = stageHandlerRecord.overallTask = stageHandlerRecord.overallTask // For overall task, the function only be called on reset stage.\n  || createTask({\n    reset: overallTaskReset\n  });\n  overallTask.context = {\n    ecModel: ecModel,\n    api: api,\n    overallReset: stageHandler.overallReset,\n    scheduler: scheduler\n  }; // Reuse orignal stubs.\n\n  var agentStubMap = overallTask.agentStubMap = overallTask.agentStubMap || createHashMap();\n  var seriesType = stageHandler.seriesType;\n  var getTargetSeries = stageHandler.getTargetSeries;\n  var overallProgress = true;\n  var modifyOutputEnd = stageHandler.modifyOutputEnd; // An overall task with seriesType detected or has `getTargetSeries`, we add\n  // stub in each pipelines, it will set the overall task dirty when the pipeline\n  // progress. Moreover, to avoid call the overall task each frame (too frequent),\n  // we set the pipeline block.\n\n  if (seriesType) {\n    ecModel.eachRawSeriesByType(seriesType, createStub);\n  } else if (getTargetSeries) {\n    getTargetSeries(ecModel, api).each(createStub);\n  } // Otherwise, (usually it is legancy case), the overall task will only be\n  // executed when upstream dirty. Otherwise the progressive rendering of all\n  // pipelines will be disabled unexpectedly. But it still needs stubs to receive\n  // dirty info from upsteam.\n  else {\n      overallProgress = false;\n      each(ecModel.getSeries(), createStub);\n    }\n\n  function createStub(seriesModel) {\n    var pipelineId = seriesModel.uid;\n    var stub = agentStubMap.get(pipelineId);\n\n    if (!stub) {\n      stub = agentStubMap.set(pipelineId, createTask({\n        reset: stubReset,\n        onDirty: stubOnDirty\n      })); // When the result of `getTargetSeries` changed, the overallTask\n      // should be set as dirty and re-performed.\n\n      overallTask.dirty();\n    }\n\n    stub.context = {\n      model: seriesModel,\n      overallProgress: overallProgress,\n      modifyOutputEnd: modifyOutputEnd\n    };\n    stub.agent = overallTask;\n    stub.__block = overallProgress;\n    pipe(scheduler, seriesModel, stub);\n  } // Clear unused stubs.\n\n\n  var pipelineMap = scheduler._pipelineMap;\n  agentStubMap.each(function (stub, pipelineId) {\n    if (!pipelineMap.get(pipelineId)) {\n      stub.dispose(); // When the result of `getTargetSeries` changed, the overallTask\n      // should be set as dirty and re-performed.\n\n      overallTask.dirty();\n      agentStubMap.removeKey(pipelineId);\n    }\n  });\n}\n\nfunction overallTaskReset(context) {\n  context.overallReset(context.ecModel, context.api, context.payload);\n}\n\nfunction stubReset(context, upstreamContext) {\n  return context.overallProgress && stubProgress;\n}\n\nfunction stubProgress() {\n  this.agent.dirty();\n  this.getDownstream().dirty();\n}\n\nfunction stubOnDirty() {\n  this.agent && this.agent.dirty();\n}\n\nfunction seriesTaskPlan(context) {\n  return context.plan && context.plan(context.model, context.ecModel, context.api, context.payload);\n}\n\nfunction seriesTaskReset(context) {\n  if (context.useClearVisual) {\n    context.data.clearAllVisual();\n  }\n\n  var resetDefines = context.resetDefines = normalizeToArray(context.reset(context.model, context.ecModel, context.api, context.payload));\n  return resetDefines.length > 1 ? map(resetDefines, function (v, idx) {\n    return makeSeriesTaskProgress(idx);\n  }) : singleSeriesTaskProgress;\n}\n\nvar singleSeriesTaskProgress = makeSeriesTaskProgress(0);\n\nfunction makeSeriesTaskProgress(resetDefineIdx) {\n  return function (params, context) {\n    var data = context.data;\n    var resetDefine = context.resetDefines[resetDefineIdx];\n\n    if (resetDefine && resetDefine.dataEach) {\n      for (var i = params.start; i < params.end; i++) {\n        resetDefine.dataEach(data, i);\n      }\n    } else if (resetDefine && resetDefine.progress) {\n      resetDefine.progress(params, data);\n    }\n  };\n}\n\nfunction seriesTaskCount(context) {\n  return context.data.count();\n}\n\nfunction pipe(scheduler, seriesModel, task) {\n  var pipelineId = seriesModel.uid;\n\n  var pipeline = scheduler._pipelineMap.get(pipelineId);\n\n  !pipeline.head && (pipeline.head = task);\n  pipeline.tail && pipeline.tail.pipe(task);\n  pipeline.tail = task;\n  task.__idxInPipeline = pipeline.count++;\n  task.__pipeline = pipeline;\n}\n\nScheduler.wrapStageHandler = function (stageHandler, visualType) {\n  if (isFunction(stageHandler)) {\n    stageHandler = {\n      overallReset: stageHandler,\n      seriesType: detectSeriseType(stageHandler)\n    };\n  }\n\n  stageHandler.uid = getUID('stageHandler');\n  visualType && (stageHandler.visualType = visualType);\n  return stageHandler;\n};\n/**\n * Only some legacy stage handlers (usually in echarts extensions) are pure function.\n * To ensure that they can work normally, they should work in block mode, that is,\n * they should not be started util the previous tasks finished. So they cause the\n * progressive rendering disabled. We try to detect the series type, to narrow down\n * the block range to only the series type they concern, but not all series.\n */\n\n\nfunction detectSeriseType(legacyFunc) {\n  seriesType = null;\n\n  try {\n    // Assume there is no async when calling `eachSeriesByType`.\n    legacyFunc(ecModelMock, apiMock);\n  } catch (e) {}\n\n  return seriesType;\n}\n\nvar ecModelMock = {};\nvar apiMock = {};\nvar seriesType;\nmockMethods(ecModelMock, GlobalModel);\nmockMethods(apiMock, ExtensionAPI);\n\necModelMock.eachSeriesByType = ecModelMock.eachRawSeriesByType = function (type) {\n  seriesType = type;\n};\n\necModelMock.eachComponent = function (cond) {\n  if (cond.mainType === 'series' && cond.subType) {\n    seriesType = cond.subType;\n  }\n};\n\nfunction mockMethods(target, Clz) {\n  for (var name in Clz.prototype) {\n    // Do not use hasOwnProperty\n    target[name] = noop;\n  }\n}\n\nvar _default = Scheduler;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"./Model\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar _clazz = require(\"../util/clazz\");\n\nvar enableClassManagement = _clazz.enableClassManagement;\nvar parseClassType = _clazz.parseClassType;\n\nvar _model = require(\"../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar layout = require(\"../util/layout\");\n\nvar boxLayoutMixin = require(\"./mixin/boxLayout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Component model\n *\n * @module echarts/model/Component\n */\nvar inner = makeInner();\n/**\n * @alias module:echarts/model/Component\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {module:echarts/model/Model} ecModel\n */\n\nvar ComponentModel = Model.extend({\n  type: 'component',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  id: '',\n\n  /**\n   * Because simplified concept is probably better, series.name (or component.name)\n   * has been having too many resposibilities:\n   * (1) Generating id (which requires name in option should not be modified).\n   * (2) As an index to mapping series when merging option or calling API (a name\n   * can refer to more then one components, which is convinient is some case).\n   * (3) Display.\n   * @readOnly\n   */\n  name: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  mainType: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  subType: '',\n\n  /**\n   * @readOnly\n   * @type {number}\n   */\n  componentIndex: 0,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n  ecModel: null,\n\n  /**\n   * key: componentType\n   * value:  Component model list, can not be null.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @readOnly\n   */\n  dependentModels: [],\n\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  uid: null,\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  $constructor: function (option, parentModel, ecModel, extraOpt) {\n    Model.call(this, option, parentModel, ecModel, extraOpt);\n    this.uid = componentUtil.getUID('ec_cpt_model');\n  },\n  init: function (option, parentModel, ecModel, extraOpt) {\n    this.mergeDefaultAndTheme(option, ecModel);\n  },\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? layout.getLayoutParams(option) : {};\n    var themeModel = ecModel.getTheme();\n    zrUtil.merge(option, themeModel.get(this.mainType));\n    zrUtil.merge(option, this.getDefaultOption());\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (option, extraOpt) {\n    zrUtil.merge(this.option, option, true);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(this.option, option, layoutMode);\n    }\n  },\n  // Hooker after init or mergeOption\n  optionUpdated: function (newCptOption, isInit) {},\n  getDefaultOption: function () {\n    var fields = inner(this);\n\n    if (!fields.defaultOption) {\n      var optList = [];\n      var Class = this.constructor;\n\n      while (Class) {\n        var opt = Class.prototype.defaultOption;\n        opt && optList.push(opt);\n        Class = Class.superClass;\n      }\n\n      var defaultOption = {};\n\n      for (var i = optList.length - 1; i >= 0; i--) {\n        defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n      }\n\n      fields.defaultOption = defaultOption;\n    }\n\n    return fields.defaultOption;\n  },\n  getReferringComponents: function (mainType) {\n    return this.ecModel.queryComponents({\n      mainType: mainType,\n      index: this.get(mainType + 'Index', true),\n      id: this.get(mainType + 'Id', true)\n    });\n  }\n}); // Reset ComponentModel.extend, add preConstruct.\n// clazzUtil.enableClassExtend(\n//     ComponentModel,\n//     function (option, parentModel, ecModel, extraOpt) {\n//         // Set dependentModels, componentIndex, name, id, mainType, subType.\n//         zrUtil.extend(this, extraOpt);\n//         this.uid = componentUtil.getUID('componentModel');\n//         // this.setReadOnly([\n//         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n//         //     'dependentModels', 'componentIndex'\n//         // ]);\n//     }\n// );\n// Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nenableClassManagement(ComponentModel, {\n  registerWhenExtend: true\n});\ncomponentUtil.enableSubTypeDefaulter(ComponentModel); // Add capability of ComponentModel.topologicalTravel.\n\ncomponentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\nfunction getDependencies(componentType) {\n  var deps = [];\n  zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n    deps = deps.concat(Clazz.prototype.dependencies || []);\n  }); // Ensure main type.\n\n  deps = zrUtil.map(deps, function (type) {\n    return parseClassType(type).main;\n  }); // Hack dataset for convenience.\n\n  if (componentType !== 'dataset' && zrUtil.indexOf(deps, 'dataset') <= 0) {\n    deps.unshift('dataset');\n  }\n\n  return deps;\n}\n\nzrUtil.mixin(ComponentModel, boxLayoutMixin);\nvar _default = ComponentModel;\nmodule.exports = _default;","/**\n * @module zrender/core/util\n */\n// 用于处理merge时无法遍历Date等对象的问题\nvar BUILTIN_OBJECT = {\n  '[object Function]': 1,\n  '[object RegExp]': 1,\n  '[object Date]': 1,\n  '[object Error]': 1,\n  '[object CanvasGradient]': 1,\n  '[object CanvasPattern]': 1,\n  // For node-canvas\n  '[object Image]': 1,\n  '[object Canvas]': 1\n};\nvar TYPED_ARRAY = {\n  '[object Int8Array]': 1,\n  '[object Uint8Array]': 1,\n  '[object Uint8ClampedArray]': 1,\n  '[object Int16Array]': 1,\n  '[object Uint16Array]': 1,\n  '[object Int32Array]': 1,\n  '[object Uint32Array]': 1,\n  '[object Float32Array]': 1,\n  '[object Float64Array]': 1\n};\nvar objToString = Object.prototype.toString;\nvar arrayProto = Array.prototype;\nvar nativeForEach = arrayProto.forEach;\nvar nativeFilter = arrayProto.filter;\nvar nativeSlice = arrayProto.slice;\nvar nativeMap = arrayProto.map;\nvar nativeReduce = arrayProto.reduce; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  // Clear ctx instance for different environment\n  if (name === 'createCanvas') {\n    _ctx = null;\n  }\n\n  methods[name] = fn;\n}\n/**\n * Those data types can be cloned:\n *     Plain object, Array, TypedArray, number, string, null, undefined.\n * Those data types will be assgined using the orginal data:\n *     BUILTIN_OBJECT\n * Instance of user defined class will be cloned to a plain object, without\n * properties in prototype.\n * Other data types is not supported (not sure what will happen).\n *\n * Caution: do not support clone Date, for performance consideration.\n * (There might be a large number of date in `series.data`).\n * So date should not be modified in and out of echarts.\n *\n * @param {*} source\n * @return {*} new\n */\n\n\nfunction clone(source) {\n  if (source == null || typeof source != 'object') {\n    return source;\n  }\n\n  var result = source;\n  var typeStr = objToString.call(source);\n\n  if (typeStr === '[object Array]') {\n    if (!isPrimitive(source)) {\n      result = [];\n\n      for (var i = 0, len = source.length; i < len; i++) {\n        result[i] = clone(source[i]);\n      }\n    }\n  } else if (TYPED_ARRAY[typeStr]) {\n    if (!isPrimitive(source)) {\n      var Ctor = source.constructor;\n\n      if (source.constructor.from) {\n        result = Ctor.from(source);\n      } else {\n        result = new Ctor(source.length);\n\n        for (var i = 0, len = source.length; i < len; i++) {\n          result[i] = clone(source[i]);\n        }\n      }\n    }\n  } else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n    result = {};\n\n    for (var key in source) {\n      if (source.hasOwnProperty(key)) {\n        result[key] = clone(source[key]);\n      }\n    }\n  }\n\n  return result;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overwrite=false]\n */\n\n\nfunction merge(target, source, overwrite) {\n  // We should escapse that source is string\n  // and enter for ... in ...\n  if (!isObject(source) || !isObject(target)) {\n    return overwrite ? clone(source) : target;\n  }\n\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      var targetProp = target[key];\n      var sourceProp = source[key];\n\n      if (isObject(sourceProp) && isObject(targetProp) && !isArray(sourceProp) && !isArray(targetProp) && !isDom(sourceProp) && !isDom(targetProp) && !isBuiltInObject(sourceProp) && !isBuiltInObject(targetProp) && !isPrimitive(sourceProp) && !isPrimitive(targetProp)) {\n        // 如果需要递归覆盖，就递归调用merge\n        merge(targetProp, sourceProp, overwrite);\n      } else if (overwrite || !(key in target)) {\n        // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n        // NOTE，在 target[key] 不存在的时候也是直接覆盖\n        target[key] = clone(source[key], true);\n      }\n    }\n  }\n\n  return target;\n}\n/**\n * @param {Array} targetAndSources The first item is target, and the rests are source.\n * @param {boolean} [overwrite=false]\n * @return {*} target\n */\n\n\nfunction mergeAll(targetAndSources, overwrite) {\n  var result = targetAndSources[0];\n\n  for (var i = 1, len = targetAndSources.length; i < len; i++) {\n    result = merge(result, targetAndSources[i], overwrite);\n  }\n\n  return result;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @memberOf module:zrender/core/util\n */\n\n\nfunction extend(target, source) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overlay=false]\n * @memberOf module:zrender/core/util\n */\n\n\nfunction defaults(target, source, overlay) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key) && (overlay ? source[key] != null : target[key] == null)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar createCanvas = function () {\n  return methods.createCanvas();\n};\n\nmethods.createCanvas = function () {\n  return document.createElement('canvas');\n}; // FIXME\n\n\nvar _ctx;\n\nfunction getContext() {\n  if (!_ctx) {\n    // Use util.createCanvas instead of createCanvas\n    // because createCanvas may be overwritten in different environment\n    _ctx = createCanvas().getContext('2d');\n  }\n\n  return _ctx;\n}\n/**\n * 查询数组中元素的index\n * @memberOf module:zrender/core/util\n */\n\n\nfunction indexOf(array, value) {\n  if (array) {\n    if (array.indexOf) {\n      return array.indexOf(value);\n    }\n\n    for (var i = 0, len = array.length; i < len; i++) {\n      if (array[i] === value) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n}\n/**\n * 构造类继承关系\n *\n * @memberOf module:zrender/core/util\n * @param {Function} clazz 源类\n * @param {Function} baseClazz 基类\n */\n\n\nfunction inherits(clazz, baseClazz) {\n  var clazzPrototype = clazz.prototype;\n\n  function F() {}\n\n  F.prototype = baseClazz.prototype;\n  clazz.prototype = new F();\n\n  for (var prop in clazzPrototype) {\n    clazz.prototype[prop] = clazzPrototype[prop];\n  }\n\n  clazz.prototype.constructor = clazz;\n  clazz.superClass = baseClazz;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Object|Function} target\n * @param {Object|Function} sorce\n * @param {boolean} overlay\n */\n\n\nfunction mixin(target, source, overlay) {\n  target = 'prototype' in target ? target.prototype : target;\n  source = 'prototype' in source ? source.prototype : source;\n  defaults(target, source, overlay);\n}\n/**\n * Consider typed array.\n * @param {Array|TypedArray} data\n */\n\n\nfunction isArrayLike(data) {\n  if (!data) {\n    return;\n  }\n\n  if (typeof data == 'string') {\n    return false;\n  }\n\n  return typeof data.length == 'number';\n}\n/**\n * 数组或对象遍历\n * @memberOf module:zrender/core/util\n * @param {Object|Array} obj\n * @param {Function} cb\n * @param {*} [context]\n */\n\n\nfunction each(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.forEach && obj.forEach === nativeForEach) {\n    obj.forEach(cb, context);\n  } else if (obj.length === +obj.length) {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      cb.call(context, obj[i], i, obj);\n    }\n  } else {\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        cb.call(context, obj[key], key, obj);\n      }\n    }\n  }\n}\n/**\n * 数组映射\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction map(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.map && obj.map === nativeMap) {\n    return obj.map(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      result.push(cb.call(context, obj[i], i, obj));\n    }\n\n    return result;\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {Object} [memo]\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction reduce(obj, cb, memo, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.reduce && obj.reduce === nativeReduce) {\n    return obj.reduce(cb, memo, context);\n  } else {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      memo = cb.call(context, memo, obj[i], i, obj);\n    }\n\n    return memo;\n  }\n}\n/**\n * 数组过滤\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction filter(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.filter && obj.filter === nativeFilter) {\n    return obj.filter(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      if (cb.call(context, obj[i], i, obj)) {\n        result.push(obj[i]);\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * 数组项查找\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {*}\n */\n\n\nfunction find(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  for (var i = 0, len = obj.length; i < len; i++) {\n    if (cb.call(context, obj[i], i, obj)) {\n      return obj[i];\n    }\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @param {*} context\n * @return {Function}\n */\n\n\nfunction bind(func, context) {\n  var args = nativeSlice.call(arguments, 2);\n  return function () {\n    return func.apply(context, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @return {Function}\n */\n\n\nfunction curry(func) {\n  var args = nativeSlice.call(arguments, 1);\n  return function () {\n    return func.apply(this, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isArray(value) {\n  return objToString.call(value) === '[object Array]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isString(value) {\n  return objToString.call(value) === '[object String]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return type === 'function' || !!value && type == 'object';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isBuiltInObject(value) {\n  return !!BUILTIN_OBJECT[objToString.call(value)];\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isTypedArray(value) {\n  return !!TYPED_ARRAY[objToString.call(value)];\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isDom(value) {\n  return typeof value === 'object' && typeof value.nodeType === 'number' && typeof value.ownerDocument === 'object';\n}\n/**\n * Whether is exactly NaN. Notice isNaN('a') returns true.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction eqNaN(value) {\n  return value !== value;\n}\n/**\n * If value1 is not null, then return value1, otherwise judget rest of values.\n * Low performance.\n * @memberOf module:zrender/core/util\n * @return {*} Final value\n */\n\n\nfunction retrieve(values) {\n  for (var i = 0, len = arguments.length; i < len; i++) {\n    if (arguments[i] != null) {\n      return arguments[i];\n    }\n  }\n}\n\nfunction retrieve2(value0, value1) {\n  return value0 != null ? value0 : value1;\n}\n\nfunction retrieve3(value0, value1, value2) {\n  return value0 != null ? value0 : value1 != null ? value1 : value2;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} arr\n * @param {number} startIndex\n * @param {number} endIndex\n * @return {Array}\n */\n\n\nfunction slice() {\n  return Function.call.apply(nativeSlice, arguments);\n}\n/**\n * Normalize css liked array configuration\n * e.g.\n *  3 => [3, 3, 3, 3]\n *  [4, 2] => [4, 2, 4, 2]\n *  [4, 3, 2] => [4, 3, 2, 3]\n * @param {number|Array.<number>} val\n * @return {Array.<number>}\n */\n\n\nfunction normalizeCssArray(val) {\n  if (typeof val === 'number') {\n    return [val, val, val, val];\n  }\n\n  var len = val.length;\n\n  if (len === 2) {\n    // vertical | horizontal\n    return [val[0], val[1], val[0], val[1]];\n  } else if (len === 3) {\n    // top | horizontal | bottom\n    return [val[0], val[1], val[2], val[1]];\n  }\n\n  return val;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {boolean} condition\n * @param {string} message\n */\n\n\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error(message);\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {string} str string to be trimed\n * @return {string} trimed string\n */\n\n\nfunction trim(str) {\n  if (str == null) {\n    return null;\n  } else if (typeof str.trim === 'function') {\n    return str.trim();\n  } else {\n    return str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n  }\n}\n\nvar primitiveKey = '__ec_primitive__';\n/**\n * Set an object as primitive to be ignored traversing children in clone or merge\n */\n\nfunction setAsPrimitive(obj) {\n  obj[primitiveKey] = true;\n}\n\nfunction isPrimitive(obj) {\n  return obj[primitiveKey];\n}\n/**\n * @constructor\n * @param {Object} obj Only apply `ownProperty`.\n */\n\n\nfunction HashMap(obj) {\n  var isArr = isArray(obj);\n  var thisMap = this;\n  obj instanceof HashMap ? obj.each(visit) : obj && each(obj, visit);\n\n  function visit(value, key) {\n    isArr ? thisMap.set(value, key) : thisMap.set(key, value);\n  }\n} // Add prefix to avoid conflict with Object.prototype.\n\n\nHashMap.prototype = {\n  constructor: HashMap,\n  // Do not provide `has` method to avoid defining what is `has`.\n  // (We usually treat `null` and `undefined` as the same, different\n  // from ES6 Map).\n  get: function (key) {\n    return this.hasOwnProperty(key) ? this[key] : null;\n  },\n  set: function (key, value) {\n    // Comparing with invocation chaining, `return value` is more commonly\n    // used in this case: `var someVal = map.set('a', genVal());`\n    return this[key] = value;\n  },\n  // Although util.each can be performed on this hashMap directly, user\n  // should not use the exposed keys, who are prefixed.\n  each: function (cb, context) {\n    context !== void 0 && (cb = bind(cb, context));\n\n    for (var key in this) {\n      this.hasOwnProperty(key) && cb(this[key], key);\n    }\n  },\n  // Do not use this method if performance sensitive.\n  removeKey: function (key) {\n    delete this[key];\n  }\n};\n\nfunction createHashMap(obj) {\n  return new HashMap(obj);\n}\n\nfunction concatArray(a, b) {\n  var newArray = new a.constructor(a.length + b.length);\n\n  for (var i = 0; i < a.length; i++) {\n    newArray[i] = a[i];\n  }\n\n  var offset = a.length;\n\n  for (i = 0; i < b.length; i++) {\n    newArray[i + offset] = b[i];\n  }\n\n  return newArray;\n}\n\nfunction noop() {}\n\nexports.$override = $override;\nexports.clone = clone;\nexports.merge = merge;\nexports.mergeAll = mergeAll;\nexports.extend = extend;\nexports.defaults = defaults;\nexports.createCanvas = createCanvas;\nexports.getContext = getContext;\nexports.indexOf = indexOf;\nexports.inherits = inherits;\nexports.mixin = mixin;\nexports.isArrayLike = isArrayLike;\nexports.each = each;\nexports.map = map;\nexports.reduce = reduce;\nexports.filter = filter;\nexports.find = find;\nexports.bind = bind;\nexports.curry = curry;\nexports.isArray = isArray;\nexports.isFunction = isFunction;\nexports.isString = isString;\nexports.isObject = isObject;\nexports.isBuiltInObject = isBuiltInObject;\nexports.isTypedArray = isTypedArray;\nexports.isDom = isDom;\nexports.eqNaN = eqNaN;\nexports.retrieve = retrieve;\nexports.retrieve2 = retrieve2;\nexports.retrieve3 = retrieve3;\nexports.slice = slice;\nexports.normalizeCssArray = normalizeCssArray;\nexports.assert = assert;\nexports.trim = trim;\nexports.setAsPrimitive = setAsPrimitive;\nexports.isPrimitive = isPrimitive;\nexports.createHashMap = createHashMap;\nexports.concatArray = concatArray;\nexports.noop = noop;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar defaultOption = {\n  show: true,\n  zlevel: 0,\n  z: 0,\n  // Inverse the axis.\n  inverse: false,\n  // Axis name displayed.\n  name: '',\n  // 'start' | 'middle' | 'end'\n  nameLocation: 'end',\n  // By degree. By defualt auto rotate by nameLocation.\n  nameRotate: null,\n  nameTruncate: {\n    maxWidth: null,\n    ellipsis: '...',\n    placeholder: '.'\n  },\n  // Use global text style by default.\n  nameTextStyle: {},\n  // The gap between axisName and axisLine.\n  nameGap: 15,\n  // Default `false` to support tooltip.\n  silent: false,\n  // Default `false` to avoid legacy user event listener fail.\n  triggerEvent: false,\n  tooltip: {\n    show: false\n  },\n  axisPointer: {},\n  axisLine: {\n    show: true,\n    onZero: true,\n    onZeroAxisIndex: null,\n    lineStyle: {\n      color: '#333',\n      width: 1,\n      type: 'solid'\n    },\n    // The arrow at both ends the the axis.\n    symbol: ['none', 'none'],\n    symbolSize: [10, 15]\n  },\n  axisTick: {\n    show: true,\n    // Whether axisTick is inside the grid or outside the grid.\n    inside: false,\n    // The length of axisTick.\n    length: 5,\n    lineStyle: {\n      width: 1\n    }\n  },\n  axisLabel: {\n    show: true,\n    // Whether axisLabel is inside the grid or outside the grid.\n    inside: false,\n    rotate: 0,\n    // true | false | null/undefined (auto)\n    showMinLabel: null,\n    // true | false | null/undefined (auto)\n    showMaxLabel: null,\n    margin: 8,\n    // formatter: null,\n    fontSize: 12\n  },\n  splitLine: {\n    show: true,\n    lineStyle: {\n      color: ['#ccc'],\n      width: 1,\n      type: 'solid'\n    }\n  },\n  splitArea: {\n    show: false,\n    areaStyle: {\n      color: ['rgba(250,250,250,0.3)', 'rgba(200,200,200,0.3)']\n    }\n  }\n};\nvar axisDefault = {};\naxisDefault.categoryAxis = zrUtil.merge({\n  // The gap at both ends of the axis. For categoryAxis, boolean.\n  boundaryGap: true,\n  // Set false to faster category collection.\n  // Only usefull in the case like: category is\n  // ['2012-01-01', '2012-01-02', ...], where the input\n  // data has been ensured not duplicate and is large data.\n  // null means \"auto\":\n  // if axis.data provided, do not deduplication,\n  // else do deduplication.\n  deduplication: null,\n  // splitArea: {\n  // show: false\n  // },\n  splitLine: {\n    show: false\n  },\n  axisTick: {\n    // If tick is align with label when boundaryGap is true\n    alignWithLabel: false,\n    interval: 'auto'\n  },\n  axisLabel: {\n    interval: 'auto'\n  }\n}, defaultOption);\naxisDefault.valueAxis = zrUtil.merge({\n  // The gap at both ends of the axis. For value axis, [GAP, GAP], where\n  // `GAP` can be an absolute pixel number (like `35`), or percent (like `'30%'`)\n  boundaryGap: [0, 0],\n  // TODO\n  // min/max: [30, datamin, 60] or [20, datamin] or [datamin, 60]\n  // Min value of the axis. can be:\n  // + a number\n  // + 'dataMin': use the min value in data.\n  // + null/undefined: auto decide min value (consider pretty look and boundaryGap).\n  // min: null,\n  // Max value of the axis. can be:\n  // + a number\n  // + 'dataMax': use the max value in data.\n  // + null/undefined: auto decide max value (consider pretty look and boundaryGap).\n  // max: null,\n  // Readonly prop, specifies start value of the range when using data zoom.\n  // rangeStart: null\n  // Readonly prop, specifies end value of the range when using data zoom.\n  // rangeEnd: null\n  // Optional value can be:\n  // + `false`: always include value 0.\n  // + `true`: the extent do not consider value 0.\n  // scale: false,\n  // AxisTick and axisLabel and splitLine are caculated based on splitNumber.\n  splitNumber: 5 // Interval specifies the span of the ticks is mandatorily.\n  // interval: null\n  // Specify min interval when auto calculate tick interval.\n  // minInterval: null\n  // Specify max interval when auto calculate tick interval.\n  // maxInterval: null\n\n}, defaultOption);\naxisDefault.timeAxis = zrUtil.defaults({\n  scale: true,\n  min: 'dataMin',\n  max: 'dataMax'\n}, axisDefault.valueAxis);\naxisDefault.logAxis = zrUtil.defaults({\n  scale: true,\n  logBase: 10\n}, axisDefault.valueAxis);\nvar _default = axisDefault;\nmodule.exports = _default;","/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\nvar easing = {\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  linear: function (k) {\n    return k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticIn: function (k) {\n    return k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticOut: function (k) {\n    return k * (2 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k;\n    }\n\n    return -0.5 * (--k * (k - 2) - 1);\n  },\n  // 三次方的缓动（t^3）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicIn: function (k) {\n    return k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicOut: function (k) {\n    return --k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k + 2);\n  },\n  // 四次方的缓动（t^4）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticIn: function (k) {\n    return k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticOut: function (k) {\n    return 1 - --k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k;\n    }\n\n    return -0.5 * ((k -= 2) * k * k * k - 2);\n  },\n  // 五次方的缓动（t^5）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticIn: function (k) {\n    return k * k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticOut: function (k) {\n    return --k * k * k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k * k * k + 2);\n  },\n  // 正弦曲线的缓动（sin(t)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalIn: function (k) {\n    return 1 - Math.cos(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalOut: function (k) {\n    return Math.sin(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalInOut: function (k) {\n    return 0.5 * (1 - Math.cos(Math.PI * k));\n  },\n  // 指数曲线的缓动（2^t）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialIn: function (k) {\n    return k === 0 ? 0 : Math.pow(1024, k - 1);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialOut: function (k) {\n    return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialInOut: function (k) {\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if ((k *= 2) < 1) {\n      return 0.5 * Math.pow(1024, k - 1);\n    }\n\n    return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n  },\n  // 圆形曲线的缓动（sqrt(1-t^2)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularIn: function (k) {\n    return 1 - Math.sqrt(1 - k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularOut: function (k) {\n    return Math.sqrt(1 - --k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return -0.5 * (Math.sqrt(1 - k * k) - 1);\n    }\n\n    return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n  },\n  // 创建类似于弹簧在停止前来回振荡的动画\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticIn: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return -(a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return a * Math.pow(2, -10 * k) * Math.sin((k - s) * (2 * Math.PI) / p) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticInOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    if ((k *= 2) < 1) {\n      return -0.5 * (a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n    }\n\n    return a * Math.pow(2, -10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n  },\n  // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backIn: function (k) {\n    var s = 1.70158;\n    return k * k * ((s + 1) * k - s);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backOut: function (k) {\n    var s = 1.70158;\n    return --k * k * ((s + 1) * k + s) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backInOut: function (k) {\n    var s = 1.70158 * 1.525;\n\n    if ((k *= 2) < 1) {\n      return 0.5 * (k * k * ((s + 1) * k - s));\n    }\n\n    return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n  },\n  // 创建弹跳效果\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceIn: function (k) {\n    return 1 - easing.bounceOut(1 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceOut: function (k) {\n    if (k < 1 / 2.75) {\n      return 7.5625 * k * k;\n    } else if (k < 2 / 2.75) {\n      return 7.5625 * (k -= 1.5 / 2.75) * k + 0.75;\n    } else if (k < 2.5 / 2.75) {\n      return 7.5625 * (k -= 2.25 / 2.75) * k + 0.9375;\n    } else {\n      return 7.5625 * (k -= 2.625 / 2.75) * k + 0.984375;\n    }\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceInOut: function (k) {\n    if (k < 0.5) {\n      return easing.bounceIn(k * 2) * 0.5;\n    }\n\n    return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n  }\n};\nvar _default = easing;\nmodule.exports = _default;","var Displayable = require(\"./Displayable\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar textContain = require(\"../contain/text\");\n\nvar textHelper = require(\"./helper/text\");\n\n/**\n * @alias zrender/graphic/Text\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nvar Text = function (opts) {\n  // jshint ignore:line\n  Displayable.call(this, opts);\n};\n\nText.prototype = {\n  constructor: Text,\n  type: 'text',\n  brush: function (ctx, prevEl) {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true); // Use props with prefix 'text'.\n\n    style.fill = style.stroke = style.shadowBlur = style.shadowColor = style.shadowOffsetX = style.shadowOffsetY = null;\n    var text = style.text; // Convert to string\n\n    text != null && (text += ''); // Always bind style\n\n    style.bind(ctx, this, prevEl);\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    }\n\n    this.setTransform(ctx);\n    textHelper.renderText(this, ctx, text, style);\n    this.restoreTransform(ctx);\n  },\n  getBoundingRect: function () {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n    if (!this._rect) {\n      var text = style.text;\n      text != null ? text += '' : text = '';\n      var rect = textContain.getBoundingRect(style.text + '', style.font, style.textAlign, style.textVerticalAlign, style.textPadding, style.rich);\n      rect.x += style.x || 0;\n      rect.y += style.y || 0;\n\n      if (textHelper.getStroke(style.textStroke, style.textStrokeWidth)) {\n        var w = style.textStrokeWidth;\n        rect.x -= w / 2;\n        rect.y -= w / 2;\n        rect.width += w;\n        rect.height += w;\n      }\n\n      this._rect = rect;\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(Text, Displayable);\nvar _default = Text;\nmodule.exports = _default;","var SHADOW_PROPS = {\n  'shadowBlur': 1,\n  'shadowOffsetX': 1,\n  'shadowOffsetY': 1,\n  'textShadowBlur': 1,\n  'textShadowOffsetX': 1,\n  'textShadowOffsetY': 1,\n  'textBoxShadowBlur': 1,\n  'textBoxShadowOffsetX': 1,\n  'textBoxShadowOffsetY': 1\n};\n\nfunction _default(ctx, propName, value) {\n  if (SHADOW_PROPS.hasOwnProperty(propName)) {\n    return value *= ctx.dpr;\n  }\n\n  return value;\n}\n\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar filter = _util.filter;\nvar map = _util.map;\nvar isArray = _util.isArray;\nvar indexOf = _util.indexOf;\nvar isObject = _util.isObject;\nvar isString = _util.isString;\nvar createHashMap = _util.createHashMap;\nvar assert = _util.assert;\nvar clone = _util.clone;\nvar merge = _util.merge;\nvar extend = _util.extend;\nvar mixin = _util.mixin;\n\nvar modelUtil = require(\"../util/model\");\n\nvar Model = require(\"./Model\");\n\nvar ComponentModel = require(\"./Component\");\n\nvar globalDefault = require(\"./globalDefault\");\n\nvar colorPaletteMixin = require(\"./mixin/colorPalette\");\n\nvar _sourceHelper = require(\"../data/helper/sourceHelper\");\n\nvar resetSourceDefaulter = _sourceHelper.resetSourceDefaulter;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n/**\n * Caution: If the mechanism should be changed some day, these cases\n * should be considered:\n *\n * (1) In `merge option` mode, if using the same option to call `setOption`\n * many times, the result should be the same (try our best to ensure that).\n * (2) In `merge option` mode, if a component has no id/name specified, it\n * will be merged by index, and the result sequence of the components is\n * consistent to the original sequence.\n * (3) `reset` feature (in toolbox). Find detailed info in comments about\n * `mergeOption` in module:echarts/model/OptionManager.\n */\nvar OPTION_INNER_KEY = '\\0_ec_inner';\n/**\n * @alias module:echarts/model/Global\n *\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {Object} theme\n */\n\nvar GlobalModel = Model.extend({\n  init: function (option, parentModel, theme, optionManager) {\n    theme = theme || {};\n    this.option = null; // Mark as not initialized.\n\n    /**\n     * @type {module:echarts/model/Model}\n     * @private\n     */\n\n    this._theme = new Model(theme);\n    /**\n     * @type {module:echarts/model/OptionManager}\n     */\n\n    this._optionManager = optionManager;\n  },\n  setOption: function (option, optionPreprocessorFuncs) {\n    assert(!(OPTION_INNER_KEY in option), 'please use chart.getOption()');\n\n    this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n    this.resetOption(null);\n  },\n\n  /**\n   * @param {string} type null/undefined: reset all.\n   *                      'recreate': force recreate all.\n   *                      'timeline': only reset timeline option\n   *                      'media': only reset media query option\n   * @return {boolean} Whether option changed.\n   */\n  resetOption: function (type) {\n    var optionChanged = false;\n    var optionManager = this._optionManager;\n\n    if (!type || type === 'recreate') {\n      var baseOption = optionManager.mountOption(type === 'recreate');\n\n      if (!this.option || type === 'recreate') {\n        initBase.call(this, baseOption);\n      } else {\n        this.restoreData();\n        this.mergeOption(baseOption);\n      }\n\n      optionChanged = true;\n    }\n\n    if (type === 'timeline' || type === 'media') {\n      this.restoreData();\n    }\n\n    if (!type || type === 'recreate' || type === 'timeline') {\n      var timelineOption = optionManager.getTimelineOption(this);\n      timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n    }\n\n    if (!type || type === 'recreate' || type === 'media') {\n      var mediaOptions = optionManager.getMediaOption(this, this._api);\n\n      if (mediaOptions.length) {\n        each(mediaOptions, function (mediaOption) {\n          this.mergeOption(mediaOption, optionChanged = true);\n        }, this);\n      }\n    }\n\n    return optionChanged;\n  },\n\n  /**\n   * @protected\n   */\n  mergeOption: function (newOption) {\n    var option = this.option;\n    var componentsMap = this._componentsMap;\n    var newCptTypes = [];\n    resetSourceDefaulter(this); // If no component class, merge directly.\n    // For example: color, animaiton options, etc.\n\n    each(newOption, function (componentOption, mainType) {\n      if (componentOption == null) {\n        return;\n      }\n\n      if (!ComponentModel.hasClass(mainType)) {\n        // globalSettingTask.dirty();\n        option[mainType] = option[mainType] == null ? clone(componentOption) : merge(option[mainType], componentOption, true);\n      } else if (mainType) {\n        newCptTypes.push(mainType);\n      }\n    });\n    ComponentModel.topologicalTravel(newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this);\n\n    function visitComponent(mainType, dependencies) {\n      var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n      var mapResult = modelUtil.mappingToExists(componentsMap.get(mainType), newCptOptionList);\n      modelUtil.makeIdAndName(mapResult); // Set mainType and complete subType.\n\n      each(mapResult, function (item, index) {\n        var opt = item.option;\n\n        if (isObject(opt)) {\n          item.keyInfo.mainType = mainType;\n          item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n        }\n      });\n      var dependentModels = getComponentsByTypes(componentsMap, dependencies);\n      option[mainType] = [];\n      componentsMap.set(mainType, []);\n      each(mapResult, function (resultItem, index) {\n        var componentModel = resultItem.exist;\n        var newCptOption = resultItem.option;\n        assert(isObject(newCptOption) || componentModel, 'Empty component definition'); // Consider where is no new option and should be merged using {},\n        // see removeEdgeAndAdd in topologicalTravel and\n        // ComponentModel.getAllClassMainTypes.\n\n        if (!newCptOption) {\n          componentModel.mergeOption({}, this);\n          componentModel.optionUpdated({}, false);\n        } else {\n          var ComponentModelClass = ComponentModel.getClass(mainType, resultItem.keyInfo.subType, true);\n\n          if (componentModel && componentModel instanceof ComponentModelClass) {\n            componentModel.name = resultItem.keyInfo.name; // componentModel.settingTask && componentModel.settingTask.dirty();\n\n            componentModel.mergeOption(newCptOption, this);\n            componentModel.optionUpdated(newCptOption, false);\n          } else {\n            // PENDING Global as parent ?\n            var extraOpt = extend({\n              dependentModels: dependentModels,\n              componentIndex: index\n            }, resultItem.keyInfo);\n            componentModel = new ComponentModelClass(newCptOption, this, this, extraOpt);\n            extend(componentModel, extraOpt);\n            componentModel.init(newCptOption, this, this, extraOpt); // Call optionUpdated after init.\n            // newCptOption has been used as componentModel.option\n            // and may be merged with theme and default, so pass null\n            // to avoid confusion.\n\n            componentModel.optionUpdated(null, true);\n          }\n        }\n\n        componentsMap.get(mainType)[index] = componentModel;\n        option[mainType][index] = componentModel.option;\n      }, this); // Backup series for filtering.\n\n      if (mainType === 'series') {\n        createSeriesIndices(this, componentsMap.get('series'));\n      }\n    }\n\n    this._seriesIndicesMap = createHashMap(this._seriesIndices = this._seriesIndices || []);\n  },\n\n  /**\n   * Get option for output (cloned option and inner info removed)\n   * @public\n   * @return {Object}\n   */\n  getOption: function () {\n    var option = clone(this.option);\n    each(option, function (opts, mainType) {\n      if (ComponentModel.hasClass(mainType)) {\n        var opts = modelUtil.normalizeToArray(opts);\n\n        for (var i = opts.length - 1; i >= 0; i--) {\n          // Remove options with inner id.\n          if (modelUtil.isIdInner(opts[i])) {\n            opts.splice(i, 1);\n          }\n        }\n\n        option[mainType] = opts;\n      }\n    });\n    delete option[OPTION_INNER_KEY];\n    return option;\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getTheme: function () {\n    return this._theme;\n  },\n\n  /**\n   * @param {string} mainType\n   * @param {number} [idx=0]\n   * @return {module:echarts/model/Component}\n   */\n  getComponent: function (mainType, idx) {\n    var list = this._componentsMap.get(mainType);\n\n    if (list) {\n      return list[idx || 0];\n    }\n  },\n\n  /**\n   * If none of index and id and name used, return all components with mainType.\n   * @param {Object} condition\n   * @param {string} condition.mainType\n   * @param {string} [condition.subType] If ignore, only query by mainType\n   * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  queryComponents: function (condition) {\n    var mainType = condition.mainType;\n\n    if (!mainType) {\n      return [];\n    }\n\n    var index = condition.index;\n    var id = condition.id;\n    var name = condition.name;\n\n    var cpts = this._componentsMap.get(mainType);\n\n    if (!cpts || !cpts.length) {\n      return [];\n    }\n\n    var result;\n\n    if (index != null) {\n      if (!isArray(index)) {\n        index = [index];\n      }\n\n      result = filter(map(index, function (idx) {\n        return cpts[idx];\n      }), function (val) {\n        return !!val;\n      });\n    } else if (id != null) {\n      var isIdArray = isArray(id);\n      result = filter(cpts, function (cpt) {\n        return isIdArray && indexOf(id, cpt.id) >= 0 || !isIdArray && cpt.id === id;\n      });\n    } else if (name != null) {\n      var isNameArray = isArray(name);\n      result = filter(cpts, function (cpt) {\n        return isNameArray && indexOf(name, cpt.name) >= 0 || !isNameArray && cpt.name === name;\n      });\n    } else {\n      // Return all components with mainType\n      result = cpts.slice();\n    }\n\n    return filterBySubType(result, condition);\n  },\n\n  /**\n   * The interface is different from queryComponents,\n   * which is convenient for inner usage.\n   *\n   * @usage\n   * var result = findComponents(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series'},\n   *     function (model, index) {...}\n   * );\n   * // result like [component0, componnet1, ...]\n   *\n   * @param {Object} condition\n   * @param {string} condition.mainType Mandatory.\n   * @param {string} [condition.subType] Optional.\n   * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n   *        where xxx is mainType.\n   *        If query attribute is null/undefined or has no index/id/name,\n   *        do not filtering by query conditions, which is convenient for\n   *        no-payload situations or when target of action is global.\n   * @param {Function} [condition.filter] parameter: component, return boolean.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  findComponents: function (condition) {\n    var query = condition.query;\n    var mainType = condition.mainType;\n    var queryCond = getQueryCond(query);\n    var result = queryCond ? this.queryComponents(queryCond) : this._componentsMap.get(mainType);\n    return doFilter(filterBySubType(result, condition));\n\n    function getQueryCond(q) {\n      var indexAttr = mainType + 'Index';\n      var idAttr = mainType + 'Id';\n      var nameAttr = mainType + 'Name';\n      return q && (q[indexAttr] != null || q[idAttr] != null || q[nameAttr] != null) ? {\n        mainType: mainType,\n        // subType will be filtered finally.\n        index: q[indexAttr],\n        id: q[idAttr],\n        name: q[nameAttr]\n      } : null;\n    }\n\n    function doFilter(res) {\n      return condition.filter ? filter(res, condition.filter) : res;\n    }\n  },\n\n  /**\n   * @usage\n   * eachComponent('legend', function (legendModel, index) {\n   *     ...\n   * });\n   * eachComponent(function (componentType, model, index) {\n   *     // componentType does not include subType\n   *     // (componentType is 'xxx' but not 'xxx.aa')\n   * });\n   * eachComponent(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n   *     function (model, index) {...}\n   * );\n   * eachComponent(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n   *     function (model, index) {...}\n   * );\n   *\n   * @param {string|Object=} mainType When mainType is object, the definition\n   *                                  is the same as the method 'findComponents'.\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachComponent: function (mainType, cb, context) {\n    var componentsMap = this._componentsMap;\n\n    if (typeof mainType === 'function') {\n      context = cb;\n      cb = mainType;\n      componentsMap.each(function (components, componentType) {\n        each(components, function (component, index) {\n          cb.call(context, componentType, component, index);\n        });\n      });\n    } else if (isString(mainType)) {\n      each(componentsMap.get(mainType), cb, context);\n    } else if (isObject(mainType)) {\n      var queryResult = this.findComponents(mainType);\n      each(queryResult, cb, context);\n    }\n  },\n\n  /**\n   * @param {string} name\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByName: function (name) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.name === name;\n    });\n  },\n\n  /**\n   * @param {number} seriesIndex\n   * @return {module:echarts/model/Series}\n   */\n  getSeriesByIndex: function (seriesIndex) {\n    return this._componentsMap.get('series')[seriesIndex];\n  },\n\n  /**\n   * Get series list before filtered by type.\n   * FIXME: rename to getRawSeriesByType?\n   *\n   * @param {string} subType\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByType: function (subType) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.subType === subType;\n    });\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeries: function () {\n    return this._componentsMap.get('series').slice();\n  },\n\n  /**\n   * @return {number}\n   */\n  getSeriesCount: function () {\n    return this._componentsMap.get('series').length;\n  },\n\n  /**\n   * After filtering, series may be different\n   * frome raw series.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      cb.call(context, series, rawSeriesIndex);\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeries: function (cb, context) {\n    each(this._componentsMap.get('series'), cb, context);\n  },\n\n  /**\n   * After filtering, series may be different.\n   * frome raw series.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeriesByType: function (subType, cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      if (series.subType === subType) {\n        cb.call(context, series, rawSeriesIndex);\n      }\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered of given type.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeriesByType: function (subType, cb, context) {\n    return each(this.getSeriesByType(subType), cb, context);\n  },\n\n  /**\n   * @param {module:echarts/model/Series} seriesModel\n   */\n  isSeriesFiltered: function (seriesModel) {\n    assertSeriesInitialized(this);\n    return this._seriesIndicesMap.get(seriesModel.componentIndex) == null;\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getCurrentSeriesIndices: function () {\n    return (this._seriesIndices || []).slice();\n  },\n\n  /**\n   * @param {Function} cb\n   * @param {*} context\n   */\n  filterSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    var filteredSeries = filter(this._componentsMap.get('series'), cb, context);\n    createSeriesIndices(this, filteredSeries);\n  },\n  restoreData: function (payload) {\n    var componentsMap = this._componentsMap;\n    createSeriesIndices(this, componentsMap.get('series'));\n    var componentTypes = [];\n    componentsMap.each(function (components, componentType) {\n      componentTypes.push(componentType);\n    });\n    ComponentModel.topologicalTravel(componentTypes, ComponentModel.getAllClassMainTypes(), function (componentType, dependencies) {\n      each(componentsMap.get(componentType), function (component) {\n        (componentType !== 'series' || !isNotTargetSeries(component, payload)) && component.restoreData();\n      });\n    });\n  }\n});\n\nfunction isNotTargetSeries(seriesModel, payload) {\n  if (payload) {\n    var index = payload.seiresIndex;\n    var id = payload.seriesId;\n    var name = payload.seriesName;\n    return index != null && seriesModel.componentIndex !== index || id != null && seriesModel.id !== id || name != null && seriesModel.name !== name;\n  }\n}\n/**\n * @inner\n */\n\n\nfunction mergeTheme(option, theme) {\n  // PENDING\n  // NOT use `colorLayer` in theme if option has `color`\n  var notMergeColorLayer = option.color && !option.colorLayer;\n  each(theme, function (themeItem, name) {\n    if (name === 'colorLayer' && notMergeColorLayer) {\n      return;\n    } // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n\n\n    if (!ComponentModel.hasClass(name)) {\n      if (typeof themeItem === 'object') {\n        option[name] = !option[name] ? clone(themeItem) : merge(option[name], themeItem, false);\n      } else {\n        if (option[name] == null) {\n          option[name] = themeItem;\n        }\n      }\n    }\n  });\n}\n\nfunction initBase(baseOption) {\n  baseOption = baseOption; // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n  // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n\n  this.option = {};\n  this.option[OPTION_INNER_KEY] = 1;\n  /**\n   * Init with series: [], in case of calling findSeries method\n   * before series initialized.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @private\n   */\n\n  this._componentsMap = createHashMap({\n    series: []\n  });\n  /**\n   * Mapping between filtered series list and raw series list.\n   * key: filtered series indices, value: raw series indices.\n   * @type {Array.<nubmer>}\n   * @private\n   */\n\n  this._seriesIndices;\n  this._seriesIndicesMap;\n  mergeTheme(baseOption, this._theme.option); // TODO Needs clone when merging to the unexisted property\n\n  merge(baseOption, globalDefault, false);\n  this.mergeOption(baseOption);\n}\n/**\n * @inner\n * @param {Array.<string>|string} types model types\n * @return {Object} key: {string} type, value: {Array.<Object>} models\n */\n\n\nfunction getComponentsByTypes(componentsMap, types) {\n  if (!isArray(types)) {\n    types = types ? [types] : [];\n  }\n\n  var ret = {};\n  each(types, function (type) {\n    ret[type] = (componentsMap.get(type) || []).slice();\n  });\n  return ret;\n}\n/**\n * @inner\n */\n\n\nfunction determineSubType(mainType, newCptOption, existComponent) {\n  var subType = newCptOption.type ? newCptOption.type : existComponent ? existComponent.subType // Use determineSubType only when there is no existComponent.\n  : ComponentModel.determineSubType(mainType, newCptOption); // tooltip, markline, markpoint may always has no subType\n\n  return subType;\n}\n/**\n * @inner\n */\n\n\nfunction createSeriesIndices(ecModel, seriesModels) {\n  ecModel._seriesIndicesMap = createHashMap(ecModel._seriesIndices = map(seriesModels, function (series) {\n    return series.componentIndex;\n  }) || []);\n}\n/**\n * @inner\n */\n\n\nfunction filterBySubType(components, condition) {\n  // Using hasOwnProperty for restrict. Consider\n  // subType is undefined in user payload.\n  return condition.hasOwnProperty('subType') ? filter(components, function (cpt) {\n    return cpt.subType === condition.subType;\n  }) : components;\n}\n/**\n * @inner\n */\n\n\nfunction assertSeriesInitialized(ecModel) {}\n\nmixin(GlobalModel, colorPaletteMixin);\nvar _default = GlobalModel;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(seriesType, defaultSymbolType, legendSymbol) {\n  // Encoding visual for all series include which is filtered for legend drawing\n  return {\n    seriesType: seriesType,\n    // For legend.\n    performRawSeries: true,\n    reset: function (seriesModel, ecModel, api) {\n      var data = seriesModel.getData();\n      var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n      var symbolSize = seriesModel.get('symbolSize');\n      var keepAspect = seriesModel.get('symbolKeepAspect');\n      data.setVisual({\n        legendSymbol: legendSymbol || symbolType,\n        symbol: symbolType,\n        symbolSize: symbolSize,\n        symbolKeepAspect: keepAspect\n      }); // Only visible series has each data be visual encoded\n\n      if (ecModel.isSeriesFiltered(seriesModel)) {\n        return;\n      }\n\n      var hasCallback = typeof symbolSize === 'function';\n\n      function dataEach(data, idx) {\n        if (typeof symbolSize === 'function') {\n          var rawValue = seriesModel.getRawValue(idx); // FIXME\n\n          var params = seriesModel.getDataParams(idx);\n          data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n        }\n\n        if (data.hasItemOption) {\n          var itemModel = data.getItemModel(idx);\n          var itemSymbolType = itemModel.getShallow('symbol', true);\n          var itemSymbolSize = itemModel.getShallow('symbolSize', true);\n          var itemSymbolKeepAspect = itemModel.getShallow('symbolKeepAspect', true); // If has item symbol\n\n          if (itemSymbolType != null) {\n            data.setItemVisual(idx, 'symbol', itemSymbolType);\n          }\n\n          if (itemSymbolSize != null) {\n            // PENDING Transform symbolSize ?\n            data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n          }\n\n          if (itemSymbolKeepAspect != null) {\n            data.setItemVisual(idx, 'symbolKeepAspect', itemSymbolKeepAspect);\n          }\n        }\n      }\n\n      return {\n        dataEach: data.hasItemOption || hasCallback ? dataEach : null\n      };\n    }\n  };\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction defaultKeyGetter(item) {\n  return item;\n}\n/**\n * @param {Array} oldArr\n * @param {Array} newArr\n * @param {Function} oldKeyGetter\n * @param {Function} newKeyGetter\n * @param {Object} [context] Can be visited by this.context in callback.\n */\n\n\nfunction DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter, context) {\n  this._old = oldArr;\n  this._new = newArr;\n  this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n  this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n  this.context = context;\n}\n\nDataDiffer.prototype = {\n  constructor: DataDiffer,\n\n  /**\n   * Callback function when add a data\n   */\n  add: function (func) {\n    this._add = func;\n    return this;\n  },\n\n  /**\n   * Callback function when update a data\n   */\n  update: function (func) {\n    this._update = func;\n    return this;\n  },\n\n  /**\n   * Callback function when remove a data\n   */\n  remove: function (func) {\n    this._remove = func;\n    return this;\n  },\n  execute: function () {\n    var oldArr = this._old;\n    var newArr = this._new;\n    var oldDataIndexMap = {};\n    var newDataIndexMap = {};\n    var oldDataKeyArr = [];\n    var newDataKeyArr = [];\n    var i;\n    initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, '_oldKeyGetter', this);\n    initIndexMap(newArr, newDataIndexMap, newDataKeyArr, '_newKeyGetter', this); // Travel by inverted order to make sure order consistency\n    // when duplicate keys exists (consider newDataIndex.pop() below).\n    // For performance consideration, these code below do not look neat.\n\n    for (i = 0; i < oldArr.length; i++) {\n      var key = oldDataKeyArr[i];\n      var idx = newDataIndexMap[key]; // idx can never be empty array here. see 'set null' logic below.\n\n      if (idx != null) {\n        // Consider there is duplicate key (for example, use dataItem.name as key).\n        // We should make sure every item in newArr and oldArr can be visited.\n        var len = idx.length;\n\n        if (len) {\n          len === 1 && (newDataIndexMap[key] = null);\n          idx = idx.unshift();\n        } else {\n          newDataIndexMap[key] = null;\n        }\n\n        this._update && this._update(idx, i);\n      } else {\n        this._remove && this._remove(i);\n      }\n    }\n\n    for (var i = 0; i < newDataKeyArr.length; i++) {\n      var key = newDataKeyArr[i];\n\n      if (newDataIndexMap.hasOwnProperty(key)) {\n        var idx = newDataIndexMap[key];\n\n        if (idx == null) {\n          continue;\n        } // idx can never be empty array here. see 'set null' logic above.\n\n\n        if (!idx.length) {\n          this._add && this._add(idx);\n        } else {\n          for (var j = 0, len = idx.length; j < len; j++) {\n            this._add && this._add(idx[j]);\n          }\n        }\n      }\n    }\n  }\n};\n\nfunction initIndexMap(arr, map, keyArr, keyGetterName, dataDiffer) {\n  for (var i = 0; i < arr.length; i++) {\n    // Add prefix to avoid conflict with Object.prototype.\n    var key = '_ec_' + dataDiffer[keyGetterName](arr[i], i);\n    var existence = map[key];\n\n    if (existence == null) {\n      keyArr.push(key);\n      map[key] = i;\n    } else {\n      if (!existence.length) {\n        map[key] = existence = [existence];\n      }\n\n      existence.push(i);\n    }\n  }\n}\n\nvar _default = DataDiffer;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echartsAPIList = ['getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed', 'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption', 'getViewOfComponentModel', 'getViewOfSeriesModel']; // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\n\nfunction ExtensionAPI(chartInstance) {\n  zrUtil.each(echartsAPIList, function (name) {\n    this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n  }, this);\n}\n\nvar _default = ExtensionAPI;\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar map = _util.map;\n\nvar _number = require(\"../util/number\");\n\nvar linearMap = _number.linearMap;\nvar getPixelPrecision = _number.getPixelPrecision;\n\nvar _axisTickLabelBuilder = require(\"./axisTickLabelBuilder\");\n\nvar createAxisTicks = _axisTickLabelBuilder.createAxisTicks;\nvar createAxisLabels = _axisTickLabelBuilder.createAxisLabels;\nvar calculateCategoryInterval = _axisTickLabelBuilder.calculateCategoryInterval;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar NORMALIZED_EXTENT = [0, 1];\n/**\n * Base class of Axis.\n * @constructor\n */\n\nvar Axis = function (dim, scale, extent) {\n  /**\n   * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'.\n   * @type {string}\n   */\n  this.dim = dim;\n  /**\n   * Axis scale\n   * @type {module:echarts/coord/scale/*}\n   */\n\n  this.scale = scale;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  this._extent = extent || [0, 0];\n  /**\n   * @type {boolean}\n   */\n\n  this.inverse = false;\n  /**\n   * Usually true when axis has a ordinal scale\n   * @type {boolean}\n   */\n\n  this.onBand = false;\n};\n\nAxis.prototype = {\n  constructor: Axis,\n\n  /**\n   * If axis extent contain given coord\n   * @param {number} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var extent = this._extent;\n    var min = Math.min(extent[0], extent[1]);\n    var max = Math.max(extent[0], extent[1]);\n    return coord >= min && coord <= max;\n  },\n\n  /**\n   * If axis extent contain given data\n   * @param {number} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.contain(this.dataToCoord(data));\n  },\n\n  /**\n   * Get coord extent.\n   * @return {Array.<number>}\n   */\n  getExtent: function () {\n    return this._extent.slice();\n  },\n\n  /**\n   * Get precision used for formatting\n   * @param {Array.<number>} [dataExtent]\n   * @return {number}\n   */\n  getPixelPrecision: function (dataExtent) {\n    return getPixelPrecision(dataExtent || this.scale.getExtent(), this._extent);\n  },\n\n  /**\n   * Set coord extent\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var extent = this._extent;\n    extent[0] = start;\n    extent[1] = end;\n  },\n\n  /**\n   * Convert data to coord. Data is the rank if it has an ordinal scale\n   * @param {number} data\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  dataToCoord: function (data, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n    data = scale.normalize(data);\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    return linearMap(data, NORMALIZED_EXTENT, extent, clamp);\n  },\n\n  /**\n   * Convert coord to data. Data is the rank if it has an ordinal scale\n   * @param {number} coord\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  coordToData: function (coord, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    var t = linearMap(coord, extent, NORMALIZED_EXTENT, clamp);\n    return this.scale.scale(t);\n  },\n\n  /**\n   * Convert pixel point to data in axis\n   * @param {Array.<number>} point\n   * @param  {boolean} clamp\n   * @return {number} data\n   */\n  pointToData: function (point, clamp) {// Should be implemented in derived class if necessary.\n  },\n\n  /**\n   * Different from `zrUtil.map(axis.getTicks(), axis.dataToCoord, axis)`,\n   * `axis.getTicksCoords` considers `onBand`, which is used by\n   * `boundaryGap:true` of category axis and splitLine and splitArea.\n   * @param {Object} [opt]\n   * @param {number} [opt.tickModel=axis.model.getModel('axisTick')]\n   * @param {boolean} [opt.clamp] If `true`, the first and the last\n   *        tick must be at the axis end points. Otherwise, clip ticks\n   *        that outside the axis extent.\n   * @return {Array.<Object>} [{\n   *     coord: ...,\n   *     tickValue: ...\n   * }, ...]\n   */\n  getTicksCoords: function (opt) {\n    opt = opt || {};\n    var tickModel = opt.tickModel || this.getTickModel();\n    var result = createAxisTicks(this, tickModel);\n    var ticks = result.ticks;\n    var ticksCoords = map(ticks, function (tickValue) {\n      return {\n        coord: this.dataToCoord(tickValue),\n        tickValue: tickValue\n      };\n    }, this);\n    var alignWithLabel = tickModel.get('alignWithLabel');\n    fixOnBandTicksCoords(this, ticksCoords, result.tickCategoryInterval, alignWithLabel, opt.clamp);\n    return ticksCoords;\n  },\n\n  /**\n   * @return {Array.<Object>} [{\n   *     formattedLabel: string,\n   *     rawLabel: axis.scale.getLabel(tickValue)\n   *     tickValue: number\n   * }, ...]\n   */\n  getViewLabels: function () {\n    return createAxisLabels(this).labels;\n  },\n\n  /**\n   * @return {module:echarts/coord/model/Model}\n   */\n  getLabelModel: function () {\n    return this.model.getModel('axisLabel');\n  },\n\n  /**\n   * Notice here we only get the default tick model. For splitLine\n   * or splitArea, we should pass the splitLineModel or splitAreaModel\n   * manually when calling `getTicksCoords`.\n   * In GL, this method may be overrided to:\n   * `axisModel.getModel('axisTick', grid3DModel.getModel('axisTick'));`\n   * @return {module:echarts/coord/model/Model}\n   */\n  getTickModel: function () {\n    return this.model.getModel('axisTick');\n  },\n\n  /**\n   * Get width of band\n   * @return {number}\n   */\n  getBandWidth: function () {\n    var axisExtent = this._extent;\n    var dataExtent = this.scale.getExtent();\n    var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0); // Fix #2728, avoid NaN when only one data.\n\n    len === 0 && (len = 1);\n    var size = Math.abs(axisExtent[1] - axisExtent[0]);\n    return Math.abs(size) / len;\n  },\n\n  /**\n   * @abstract\n   * @return {boolean} Is horizontal\n   */\n  isHorizontal: null,\n\n  /**\n   * @abstract\n   * @return {number} Get axis rotate, by degree.\n   */\n  getRotate: null,\n\n  /**\n   * Only be called in category axis.\n   * Can be overrided, consider other axes like in 3D.\n   * @return {number} Auto interval for cateogry axis tick and label\n   */\n  calculateCategoryInterval: function () {\n    return calculateCategoryInterval(this);\n  }\n};\n\nfunction fixExtentWithBands(extent, nTick) {\n  var size = extent[1] - extent[0];\n  var len = nTick;\n  var margin = size / len / 2;\n  extent[0] += margin;\n  extent[1] -= margin;\n} // If axis has labels [1, 2, 3, 4]. Bands on the axis are\n// |---1---|---2---|---3---|---4---|.\n// So the displayed ticks and splitLine/splitArea should between\n// each data item, otherwise cause misleading (e.g., split tow bars\n// of a single data item when there are two bar series).\n// Also consider if tickCategoryInterval > 0 and onBand, ticks and\n// splitLine/spliteArea should layout appropriately corresponding\n// to displayed labels. (So we should not use `getBandWidth` in this\n// case).\n\n\nfunction fixOnBandTicksCoords(axis, ticksCoords, tickCategoryInterval, alignWithLabel, clamp) {\n  var ticksLen = ticksCoords.length;\n\n  if (!axis.onBand || alignWithLabel || !ticksLen) {\n    return;\n  }\n\n  var axisExtent = axis.getExtent();\n  var last;\n\n  if (ticksLen === 1) {\n    ticksCoords[0].coord = axisExtent[0];\n    last = ticksCoords[1] = {\n      coord: axisExtent[0]\n    };\n  } else {\n    var shift = ticksCoords[1].coord - ticksCoords[0].coord;\n    each(ticksCoords, function (ticksItem) {\n      ticksItem.coord -= shift / 2;\n      var tickCategoryInterval = tickCategoryInterval || 0; // Avoid split a single data item when odd interval.\n\n      if (tickCategoryInterval % 2 > 0) {\n        ticksItem.coord -= shift / ((tickCategoryInterval + 1) * 2);\n      }\n    });\n    last = {\n      coord: ticksCoords[ticksLen - 1].coord + shift\n    };\n    ticksCoords.push(last);\n  }\n\n  var inverse = axisExtent[0] > axisExtent[1];\n\n  if (littleThan(ticksCoords[0].coord, axisExtent[0])) {\n    clamp ? ticksCoords[0].coord = axisExtent[0] : ticksCoords.shift();\n  }\n\n  if (clamp && littleThan(axisExtent[0], ticksCoords[0].coord)) {\n    ticksCoords.unshift({\n      coord: axisExtent[0]\n    });\n  }\n\n  if (littleThan(axisExtent[1], last.coord)) {\n    clamp ? last.coord = axisExtent[1] : ticksCoords.pop();\n  }\n\n  if (clamp && littleThan(last.coord, axisExtent[1])) {\n    ticksCoords.push({\n      coord: axisExtent[1]\n    });\n  }\n\n  function littleThan(a, b) {\n    return inverse ? a > b : a < b;\n  }\n}\n\nvar _default = Axis;\nmodule.exports = _default;","var PI2 = Math.PI * 2;\n\nfunction normalizeRadian(angle) {\n  angle %= PI2;\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle;\n}\n\nexports.normalizeRadian = normalizeRadian;","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\nvar isString = _util.isString;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar isObject = _util.isObject;\nvar clone = _util.clone;\n\nvar _model = require(\"../../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\nvar _sourceHelper = require(\"./sourceHelper\");\n\nvar guessOrdinal = _sourceHelper.guessOrdinal;\n\nvar Source = require(\"../Source\");\n\nvar _dimensionHelper = require(\"./dimensionHelper\");\n\nvar OTHER_DIMENSIONS = _dimensionHelper.OTHER_DIMENSIONS;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @deprecated\n * Use `echarts/data/helper/createDimensions` instead.\n */\n\n/**\n * @see {module:echarts/test/ut/spec/data/completeDimensions}\n *\n * Complete the dimensions array, by user defined `dimension` and `encode`,\n * and guessing from the data structure.\n * If no 'value' dimension specified, the first no-named dimension will be\n * named as 'value'.\n *\n * @param {Array.<string>} sysDims Necessary dimensions, like ['x', 'y'], which\n *      provides not only dim template, but also default order.\n *      properties: 'name', 'type', 'displayName'.\n *      `name` of each item provides default coord name.\n *      [{dimsDef: [string|Object, ...]}, ...] dimsDef of sysDim item provides default dim name, and\n *                                    provide dims count that the sysDim required.\n *      [{ordinalMeta}] can be specified.\n * @param {module:echarts/data/Source|Array|Object} source or data (for compatibal with pervious)\n * @param {Object} [opt]\n * @param {Array.<Object|string>} [opt.dimsDef] option.series.dimensions User defined dimensions\n *      For example: ['asdf', {name, type}, ...].\n * @param {Object|HashMap} [opt.encodeDef] option.series.encode {x: 2, y: [3, 1], tooltip: [1, 2], label: 3}\n * @param {string} [opt.generateCoord] Generate coord dim with the given name.\n *                 If not specified, extra dim names will be:\n *                 'value', 'value0', 'value1', ...\n * @param {number} [opt.generateCoordCount] By default, the generated dim name is `generateCoord`.\n *                 If `generateCoordCount` specified, the generated dim names will be:\n *                 `generateCoord` + 0, `generateCoord` + 1, ...\n *                 can be Infinity, indicate that use all of the remain columns.\n * @param {number} [opt.dimCount] If not specified, guess by the first data item.\n * @param {number} [opt.encodeDefaulter] If not specified, auto find the next available data dim.\n * @return {Array.<Object>} [{\n *      name: string mandatory,\n *      displayName: string, the origin name in dimsDef, see source helper.\n *                 If displayName given, the tooltip will displayed vertically.\n *      coordDim: string mandatory,\n *      coordDimIndex: number mandatory,\n *      type: string optional,\n *      otherDims: { never null/undefined\n *          tooltip: number optional,\n *          label: number optional,\n *          itemName: number optional,\n *          seriesName: number optional,\n *      },\n *      isExtraCoord: boolean true if coord is generated\n *          (not specified in encode and not series specified)\n *      other props ...\n * }]\n */\nfunction completeDimensions(sysDims, source, opt) {\n  if (!Source.isInstance(source)) {\n    source = Source.seriesDataToSource(source);\n  }\n\n  opt = opt || {};\n  sysDims = (sysDims || []).slice();\n  var dimsDef = (opt.dimsDef || []).slice();\n  var encodeDef = createHashMap(opt.encodeDef);\n  var dataDimNameMap = createHashMap();\n  var coordDimNameMap = createHashMap(); // var valueCandidate;\n\n  var result = [];\n  var dimCount = getDimCount(source, sysDims, dimsDef, opt.dimCount); // Apply user defined dims (`name` and `type`) and init result.\n\n  for (var i = 0; i < dimCount; i++) {\n    var dimDefItem = dimsDef[i] = extend({}, isObject(dimsDef[i]) ? dimsDef[i] : {\n      name: dimsDef[i]\n    });\n    var userDimName = dimDefItem.name;\n    var resultItem = result[i] = {\n      otherDims: {}\n    }; // Name will be applied later for avoiding duplication.\n\n    if (userDimName != null && dataDimNameMap.get(userDimName) == null) {\n      // Only if `series.dimensions` is defined in option\n      // displayName, will be set, and dimension will be diplayed vertically in\n      // tooltip by default.\n      resultItem.name = resultItem.displayName = userDimName;\n      dataDimNameMap.set(userDimName, i);\n    }\n\n    dimDefItem.type != null && (resultItem.type = dimDefItem.type);\n    dimDefItem.displayName != null && (resultItem.displayName = dimDefItem.displayName);\n  } // Set `coordDim` and `coordDimIndex` by `encodeDef` and normalize `encodeDef`.\n\n\n  encodeDef.each(function (dataDims, coordDim) {\n    dataDims = normalizeToArray(dataDims).slice();\n    var validDataDims = encodeDef.set(coordDim, []);\n    each(dataDims, function (resultDimIdx, idx) {\n      // The input resultDimIdx can be dim name or index.\n      isString(resultDimIdx) && (resultDimIdx = dataDimNameMap.get(resultDimIdx));\n\n      if (resultDimIdx != null && resultDimIdx < dimCount) {\n        validDataDims[idx] = resultDimIdx;\n        applyDim(result[resultDimIdx], coordDim, idx);\n      }\n    });\n  }); // Apply templetes and default order from `sysDims`.\n\n  var availDimIdx = 0;\n  each(sysDims, function (sysDimItem, sysDimIndex) {\n    var coordDim;\n    var sysDimItem;\n    var sysDimItemDimsDef;\n    var sysDimItemOtherDims;\n\n    if (isString(sysDimItem)) {\n      coordDim = sysDimItem;\n      sysDimItem = {};\n    } else {\n      coordDim = sysDimItem.name;\n      var ordinalMeta = sysDimItem.ordinalMeta;\n      sysDimItem.ordinalMeta = null;\n      sysDimItem = clone(sysDimItem);\n      sysDimItem.ordinalMeta = ordinalMeta; // `coordDimIndex` should not be set directly.\n\n      sysDimItemDimsDef = sysDimItem.dimsDef;\n      sysDimItemOtherDims = sysDimItem.otherDims;\n      sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex = sysDimItem.dimsDef = sysDimItem.otherDims = null;\n    }\n\n    var dataDims = normalizeToArray(encodeDef.get(coordDim)); // dimensions provides default dim sequences.\n\n    if (!dataDims.length) {\n      for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {\n        while (availDimIdx < result.length && result[availDimIdx].coordDim != null) {\n          availDimIdx++;\n        }\n\n        availDimIdx < result.length && dataDims.push(availDimIdx++);\n      }\n    } // Apply templates.\n\n\n    each(dataDims, function (resultDimIdx, coordDimIndex) {\n      var resultItem = result[resultDimIdx];\n      applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);\n\n      if (resultItem.name == null && sysDimItemDimsDef) {\n        var sysDimItemDimsDefItem = sysDimItemDimsDef[coordDimIndex];\n        !isObject(sysDimItemDimsDefItem) && (sysDimItemDimsDefItem = {\n          name: sysDimItemDimsDefItem\n        });\n        resultItem.name = resultItem.displayName = sysDimItemDimsDefItem.name;\n        resultItem.defaultTooltip = sysDimItemDimsDefItem.defaultTooltip;\n      } // FIXME refactor, currently only used in case: {otherDims: {tooltip: false}}\n\n\n      sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);\n    });\n  });\n\n  function applyDim(resultItem, coordDim, coordDimIndex) {\n    if (OTHER_DIMENSIONS.get(coordDim) != null) {\n      resultItem.otherDims[coordDim] = coordDimIndex;\n    } else {\n      resultItem.coordDim = coordDim;\n      resultItem.coordDimIndex = coordDimIndex;\n      coordDimNameMap.set(coordDim, true);\n    }\n  } // Make sure the first extra dim is 'value'.\n\n\n  var generateCoord = opt.generateCoord;\n  var generateCoordCount = opt.generateCoordCount;\n  var fromZero = generateCoordCount != null;\n  generateCoordCount = generateCoord ? generateCoordCount || 1 : 0;\n  var extra = generateCoord || 'value'; // Set dim `name` and other `coordDim` and other props.\n\n  for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {\n    var resultItem = result[resultDimIdx] = result[resultDimIdx] || {};\n    var coordDim = resultItem.coordDim;\n\n    if (coordDim == null) {\n      resultItem.coordDim = genName(extra, coordDimNameMap, fromZero);\n      resultItem.coordDimIndex = 0;\n\n      if (!generateCoord || generateCoordCount <= 0) {\n        resultItem.isExtraCoord = true;\n      }\n\n      generateCoordCount--;\n    }\n\n    resultItem.name == null && (resultItem.name = genName(resultItem.coordDim, dataDimNameMap));\n\n    if (resultItem.type == null && guessOrdinal(source, resultDimIdx, resultItem.name)) {\n      resultItem.type = 'ordinal';\n    }\n  }\n\n  return result;\n} // ??? TODO\n// Originally detect dimCount by data[0]. Should we\n// optimize it to only by sysDims and dimensions and encode.\n// So only necessary dims will be initialized.\n// But\n// (1) custom series should be considered. where other dims\n// may be visited.\n// (2) sometimes user need to calcualte bubble size or use visualMap\n// on other dimensions besides coordSys needed.\n// So, dims that is not used by system, should be shared in storage?\n\n\nfunction getDimCount(source, sysDims, dimsDef, optDimCount) {\n  // Note that the result dimCount should not small than columns count\n  // of data, otherwise `dataDimNameMap` checking will be incorrect.\n  var dimCount = Math.max(source.dimensionsDetectCount || 1, sysDims.length, dimsDef.length, optDimCount || 0);\n  each(sysDims, function (sysDimItem) {\n    var sysDimItemDimsDef = sysDimItem.dimsDef;\n    sysDimItemDimsDef && (dimCount = Math.max(dimCount, sysDimItemDimsDef.length));\n  });\n  return dimCount;\n}\n\nfunction genName(name, map, fromZero) {\n  if (fromZero || map.get(name) != null) {\n    var i = 0;\n\n    while (map.get(name + i) != null) {\n      i++;\n    }\n\n    name += i;\n  }\n\n  map.set(name, true);\n  return name;\n}\n\nvar _default = completeDimensions;\nmodule.exports = _default;","function windingLine(x0, y0, x1, y1, x, y) {\n  if (y > y0 && y > y1 || y < y0 && y < y1) {\n    return 0;\n  } // Ignore horizontal line\n\n\n  if (y1 === y0) {\n    return 0;\n  }\n\n  var dir = y1 < y0 ? 1 : -1;\n  var t = (y - y0) / (y1 - y0); // Avoid winding error when intersection point is the connect point of two line of polygon\n\n  if (t === 1 || t === 0) {\n    dir = y1 < y0 ? 0.5 : -0.5;\n  }\n\n  var x_ = t * (x1 - x0) + x0; // If (x, y) on the line, considered as \"contain\".\n\n  return x_ === x ? Infinity : x_ > x ? dir : 0;\n}\n\nmodule.exports = windingLine;","var Path = require(\"../Path\");\n\nvar polyHelper = require(\"../helper/poly\");\n\n/**\n * 多边形\n * @module zrender/shape/Polygon\n */\nvar _default = Path.extend({\n  type: 'polygon',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, true);\n  }\n});\n\nmodule.exports = _default;","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticStyle:{\"width\":\"100%\"}},[_c('div',{staticClass:\"display-flex-center\"},[_c('div',{style:({width: '600px', height: '300px'}),attrs:{\"id\":\"myChart\"}}),_c('div',{style:({width: '600px', height: '300px'}),attrs:{\"id\":\"myChart2\"}})]),_c('div',{staticStyle:{\"padding-left\":\"10px\"},domProps:{\"innerHTML\":_vm._s(_vm.statisticsDes)}})])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div style=\"width: 100%;\">\r\n\t\t<div class=\"display-flex-center\">\r\n\t\t\t<div id=\"myChart\" :style=\"{width: '600px', height: '300px'}\"></div>\r\n\t\t\t<div id=\"myChart2\" :style=\"{width: '600px', height: '300px'}\"></div>\r\n\t\t</div>\r\n\t\t<div v-html=\"statisticsDes\" style=\"padding-left: 10px;\">\r\n\t\t</div>\r\n\t</div>\n</template>\n\n<script>\n\nlet echarts = require('echarts/lib/echarts')// 引入基本模板\nrequire('echarts/lib/chart/bar')// 引入柱状图组件\nrequire('echarts/lib/chart/line')\n\nrequire('echarts/lib/component/tooltip')// 引入提示框和title组件\nrequire('echarts/lib/component/title');\r\nimport pangzhanApi from \"@/api/pangzhan-api\";\r\nimport MIXIN_ROLE from \"@/mixin/ROLE\";\nexport default {\n  name: 'hello',\r\n\tmixins: [MIXIN_ROLE],\n  data() {\n    return {\n      msg: 'Welcome to Your Vue.js App',\r\n\t\t\tstatisticsDes: \"\"\n    }\n  },\n\r\n\tcomputed: {\r\n\t\tprojectId(){\r\n\t\t\treturn this.PROJECT.id\r\n\t\t},\r\n\t\tbuildingId(){\r\n\t\t\treturn this.BUILDING.id\r\n\t\t}\r\n\t},\n  methods: {\n    drawLine() {\n      // 基于准备好的dom，初始化echarts实例\n      let myChart = echarts.init(document.getElementById('myChart'))\n      // 绘制图表\n      myChart.setOption({\n        title: { text: '机械灌注桩旁站完成情况（每日）' },\n        tooltip: {},\n        xAxis: {\n          data: [\"11-01\", \"11-02\", \"11-03\", \"11-04\", \"11-05\", \"11-06\",\"11-07\", \"11-08\", \"11-09\", \"11-10\", \"11-11\", \"11-12\"]\n        },\n        yAxis: {},\n        series: [{\n          name: '完成桩数',\n          type: 'bar',\n          data: [5, 20, 36, 10, 10, 20,5, 20, 36, 10, 10, 20],\n          itemStyle:{\n            color: '#3B94F1'\n          }\n        }]\n      });\n    },\n    drawLine2() {\n      var dom = document.getElementById(\"myChart2\");\n      var myChart = echarts.init(dom);\n      var app = {};\n      let option = null;\n      option = {\n        title: { text: '机械灌注桩旁站完成情况（累计）' },\n        tooltip: {},\n          xAxis: {\n              type: 'category',\n              data: [\"11-01\", \"11-02\", \"11-03\", \"11-04\", \"11-05\", \"11-06\",\"11-07\", \"11-08\", \"11-09\", \"11-10\", \"11-11\", \"11-12\"]\n          },\n          yAxis: {\n              type: 'value'\n          },\n          series: [{\n              name: '完成总数',\n              data: [5, 25, 61, 71, 81, 101, 106,126,162,172,182,202],\n              type: 'line',\n              itemStyle:{\n                color: '#3B94F1',\n                borderWidth: 4\n              }\n          }]\n      };\n      ;\n      if (option && typeof option === \"object\") {\n          myChart.setOption(option, true);\n      }\n    },\r\n\t\tgetList(){\r\n\t\t\tconsole.log(\"-----------\")\r\n\t\t\tthis.pangzhanStatistics();\r\n\t\t},\r\n\t\tbuildingChange(){},\r\n\t\tpangzhanStatistics(){\r\n\t\t\tpangzhanApi\r\n\t\t\t\t.pangzhanStatistics({\r\n\t\t\t\t\tprojectId: this.projectId,\r\n\t\t\t\t\ttype: \"0001\"\r\n\t\t\t\t})\r\n\t\t\t\t.then(data => {\r\n\t\t\t\t\tconsole.log(data.length);\r\n\t\t\t\t\tlet statusMapList = [0,0,0,0,0,0,0];\r\n\t\t\t\t\tlet finishedNum = 0;\r\n\t\t\t\t\tlet unCheckNum = 0;\r\n\t\t\t\t\tlet startedNum = 0;\r\n\t\t\t\t\tlet allPileNum = 0;\r\n\t\t\t\t\tfor(let i=0; i<data.length; i++){\r\n\t\t\t\t\t\tif(!data[i].statusMap['3']) data[i].statusMap['3']=0;\r\n\t\t\t\t\t\tif(!data[i].statusMap['5']) data[i].statusMap['5']=0;\r\n\t\t\t\t\t\tif(!data[i].statusMap['2']) data[i].statusMap['2']=0;\r\n\t\t\t\t\t\tif(!data[i].statusMap['4']) data[i].statusMap['4']=0;\r\n\t\t\t\t\t\tif(!data[i].statusMap['1']) data[i].statusMap['1']=0;\r\n\t\t\t\t\t\tfinishedNum +=  data[i].statusMap['3'] + data[i].statusMap['5'];\r\n\t\t\t\t\t\tunCheckNum += data[i].statusMap['2'] + data[i].statusMap['4'];\r\n\t\t\t\t\t\tstartedNum += data[i].statusMap['1'];\r\n\t\t\t\t\t\tallPileNum += data[i].pileNum\r\n\t\t\t\t\t\tfor(let j=0; j<6; j++){ \r\n\t\t\t\t\t\t\tif(!!data[i].statusMap[j+'']){\r\n\t\t\t\t\t\t\t\tstatusMapList[j] = statusMapList[j] + data[i].statusMap[j+'']\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconsole.log(statusMapList, finishedNum);\r\n\t\t\t\t\tlet statisticsDes = `<div style=\"font-size:18px\">${this.PROJECT.projectName} 项目共有 ${allPileNum} 根桩。\r\n\t\t\t\t\t进行中: ${startedNum}。待审核: ${unCheckNum}。\r\n\t\t\t\t\t已完成: ${finishedNum}, 其中`;\r\n\t\t\t\t\tfor(let i=0; i<data.length; i++){\r\n\t\t\t\t\t\tstatisticsDes+= `${data[i].buildingName} 完成： ${data[i].statusMap['3'] + data[i].statusMap['5']} ; `\r\n\t\t\t\t\t}\r\n\t\t\t\t\tstatisticsDes+= '</div>'\r\n\t\t\t\t\tthis.statisticsDes = statisticsDes;\r\n\t\t\t\t})\r\n\t\t\t\t.catch(() => {\r\n\t\t\t\t});\r\n\t\t}\n  },\r\n\tmounted() {\r\n\t\tthis.drawLine();\r\n\t\tthis.drawLine2();\r\n\t},\n}\n\n</script>\n\n<style lang=\"less\">\n.count-style {\n  font-size: 50px;\n}\n\n.center {\n  text-align: center;\n}\n</style>\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./home.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./home.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./home.vue?vue&type=template&id=922bf1b4&\"\nimport script from \"./home.vue?vue&type=script&lang=js&\"\nexport * from \"./home.vue?vue&type=script&lang=js&\"\nimport style0 from \"./home.vue?vue&type=style&index=0&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"home.vue\"\nexport default component.exports","import home from './home.vue'\nexport default home\n","var _util = require(\"zrender/lib/core/util\");\n\nvar map = _util.map;\n\nvar createRenderPlanner = require(\"../chart/helper/createRenderPlanner\");\n\nvar _dataStackHelper = require(\"../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(seriesType) {\n  return {\n    seriesType: seriesType,\n    plan: createRenderPlanner(),\n    reset: function (seriesModel) {\n      var data = seriesModel.getData();\n      var coordSys = seriesModel.coordinateSystem;\n      var pipelineContext = seriesModel.pipelineContext;\n      var isLargeRender = pipelineContext.large;\n\n      if (!coordSys) {\n        return;\n      }\n\n      var dims = map(coordSys.dimensions, function (dim) {\n        return data.mapDimension(dim);\n      }).slice(0, 2);\n      var dimLen = dims.length;\n      var stackResultDim = data.getCalculationInfo('stackResultDimension');\n\n      if (isDimensionStacked(data, dims[0]\n      /*, dims[1]*/\n      )) {\n        dims[0] = stackResultDim;\n      }\n\n      if (isDimensionStacked(data, dims[1]\n      /*, dims[0]*/\n      )) {\n        dims[1] = stackResultDim;\n      }\n\n      function progress(params, data) {\n        var segCount = params.end - params.start;\n        var points = isLargeRender && new Float32Array(segCount * dimLen);\n\n        for (var i = params.start, offset = 0, tmpIn = [], tmpOut = []; i < params.end; i++) {\n          var point;\n\n          if (dimLen === 1) {\n            var x = data.get(dims[0], i);\n            point = !isNaN(x) && coordSys.dataToPoint(x, null, tmpOut);\n          } else {\n            var x = tmpIn[0] = data.get(dims[0], i);\n            var y = tmpIn[1] = data.get(dims[1], i); // Also {Array.<number>}, not undefined to avoid if...else... statement\n\n            point = !isNaN(x) && !isNaN(y) && coordSys.dataToPoint(tmpIn, null, tmpOut);\n          }\n\n          if (isLargeRender) {\n            points[offset++] = point ? point[0] : NaN;\n            points[offset++] = point ? point[1] : NaN;\n          } else {\n            data.setItemLayout(i, point && point.slice() || [NaN, NaN]);\n          }\n        }\n\n        isLargeRender && data.setLayout('symbolPoints', points);\n      }\n\n      return dimLen && {\n        progress: progress\n      };\n    }\n  };\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar ORIGIN_METHOD = '\\0__throttleOriginMethod';\nvar RATE = '\\0__throttleRate';\nvar THROTTLE_TYPE = '\\0__throttleType';\n/**\n * @public\n * @param {(Function)} fn\n * @param {number} [delay=0] Unit: ms.\n * @param {boolean} [debounce=false]\n *        true: If call interval less than `delay`, only the last call works.\n *        false: If call interval less than `delay, call works on fixed rate.\n * @return {(Function)} throttled fn.\n */\n\nfunction throttle(fn, delay, debounce) {\n  var currCall;\n  var lastCall = 0;\n  var lastExec = 0;\n  var timer = null;\n  var diff;\n  var scope;\n  var args;\n  var debounceNextCall;\n  delay = delay || 0;\n\n  function exec() {\n    lastExec = new Date().getTime();\n    timer = null;\n    fn.apply(scope, args || []);\n  }\n\n  var cb = function () {\n    currCall = new Date().getTime();\n    scope = this;\n    args = arguments;\n    var thisDelay = debounceNextCall || delay;\n    var thisDebounce = debounceNextCall || debounce;\n    debounceNextCall = null;\n    diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\n    clearTimeout(timer); // Here we should make sure that: the `exec` SHOULD NOT be called later\n    // than a new call of `cb`, that is, preserving the command order. Consider\n    // calculating \"scale rate\" when roaming as an example. When a call of `cb`\n    // happens, either the `exec` is called dierectly, or the call is delayed.\n    // But the delayed call should never be later than next call of `cb`. Under\n    // this assurance, we can simply update view state each time `dispatchAction`\n    // triggered by user roaming, but not need to add extra code to avoid the\n    // state being \"rolled-back\".\n\n    if (thisDebounce) {\n      timer = setTimeout(exec, thisDelay);\n    } else {\n      if (diff >= 0) {\n        exec();\n      } else {\n        timer = setTimeout(exec, -diff);\n      }\n    }\n\n    lastCall = currCall;\n  };\n  /**\n   * Clear throttle.\n   * @public\n   */\n\n\n  cb.clear = function () {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  };\n  /**\n   * Enable debounce once.\n   */\n\n\n  cb.debounceNextCall = function (debounceDelay) {\n    debounceNextCall = debounceDelay;\n  };\n\n  return cb;\n}\n/**\n * Create throttle method or update throttle rate.\n *\n * @example\n * ComponentView.prototype.render = function () {\n *     ...\n *     throttle.createOrUpdate(\n *         this,\n *         '_dispatchAction',\n *         this.model.get('throttle'),\n *         'fixRate'\n *     );\n * };\n * ComponentView.prototype.remove = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n * ComponentView.prototype.dispose = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n * @param {number} [rate]\n * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n * @return {Function} throttled function.\n */\n\n\nfunction createOrUpdate(obj, fnAttr, rate, throttleType) {\n  var fn = obj[fnAttr];\n\n  if (!fn) {\n    return;\n  }\n\n  var originFn = fn[ORIGIN_METHOD] || fn;\n  var lastThrottleType = fn[THROTTLE_TYPE];\n  var lastRate = fn[RATE];\n\n  if (lastRate !== rate || lastThrottleType !== throttleType) {\n    if (rate == null || !throttleType) {\n      return obj[fnAttr] = originFn;\n    }\n\n    fn = obj[fnAttr] = throttle(originFn, rate, throttleType === 'debounce');\n    fn[ORIGIN_METHOD] = originFn;\n    fn[THROTTLE_TYPE] = throttleType;\n    fn[RATE] = rate;\n  }\n\n  return fn;\n}\n/**\n * Clear throttle. Example see throttle.createOrUpdate.\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n */\n\n\nfunction clear(obj, fnAttr) {\n  var fn = obj[fnAttr];\n\n  if (fn && fn[ORIGIN_METHOD]) {\n    obj[fnAttr] = fn[ORIGIN_METHOD];\n  }\n}\n\nexports.throttle = throttle;\nexports.createOrUpdate = createOrUpdate;\nexports.clear = clear;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _clazz = require(\"./clazz\");\n\nvar parseClassType = _clazz.parseClassType;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar base = 0;\n/**\n * @public\n * @param {string} type\n * @return {string}\n */\n\nfunction getUID(type) {\n  // Considering the case of crossing js context,\n  // use Math.random to make id as unique as possible.\n  return [type || '', base++, Math.random().toFixed(5)].join('_');\n}\n/**\n * @inner\n */\n\n\nfunction enableSubTypeDefaulter(entity) {\n  var subTypeDefaulters = {};\n\n  entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n    componentType = parseClassType(componentType);\n    subTypeDefaulters[componentType.main] = defaulter;\n  };\n\n  entity.determineSubType = function (componentType, option) {\n    var type = option.type;\n\n    if (!type) {\n      var componentTypeMain = parseClassType(componentType).main;\n\n      if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n        type = subTypeDefaulters[componentTypeMain](option);\n      }\n    }\n\n    return type;\n  };\n\n  return entity;\n}\n/**\n * Topological travel on Activity Network (Activity On Vertices).\n * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n *\n * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n *\n * If there is circle dependencey, Error will be thrown.\n *\n */\n\n\nfunction enableTopologicalTravel(entity, dependencyGetter) {\n  /**\n   * @public\n   * @param {Array.<string>} targetNameList Target Component type list.\n   *                                           Can be ['aa', 'bb', 'aa.xx']\n   * @param {Array.<string>} fullNameList By which we can build dependency graph.\n   * @param {Function} callback Params: componentType, dependencies.\n   * @param {Object} context Scope of callback.\n   */\n  entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n    if (!targetNameList.length) {\n      return;\n    }\n\n    var result = makeDepndencyGraph(fullNameList);\n    var graph = result.graph;\n    var stack = result.noEntryList;\n    var targetNameSet = {};\n    zrUtil.each(targetNameList, function (name) {\n      targetNameSet[name] = true;\n    });\n\n    while (stack.length) {\n      var currComponentType = stack.pop();\n      var currVertex = graph[currComponentType];\n      var isInTargetNameSet = !!targetNameSet[currComponentType];\n\n      if (isInTargetNameSet) {\n        callback.call(context, currComponentType, currVertex.originalDeps.slice());\n        delete targetNameSet[currComponentType];\n      }\n\n      zrUtil.each(currVertex.successor, isInTargetNameSet ? removeEdgeAndAdd : removeEdge);\n    }\n\n    zrUtil.each(targetNameSet, function () {\n      throw new Error('Circle dependency may exists');\n    });\n\n    function removeEdge(succComponentType) {\n      graph[succComponentType].entryCount--;\n\n      if (graph[succComponentType].entryCount === 0) {\n        stack.push(succComponentType);\n      }\n    } // Consider this case: legend depends on series, and we call\n    // chart.setOption({series: [...]}), where only series is in option.\n    // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n    // not be called, but only sereis.mergeOption is called. Thus legend\n    // have no chance to update its local record about series (like which\n    // name of series is available in legend).\n\n\n    function removeEdgeAndAdd(succComponentType) {\n      targetNameSet[succComponentType] = true;\n      removeEdge(succComponentType);\n    }\n  };\n  /**\n   * DepndencyGraph: {Object}\n   * key: conponentType,\n   * value: {\n   *     successor: [conponentTypes...],\n   *     originalDeps: [conponentTypes...],\n   *     entryCount: {number}\n   * }\n   */\n\n\n  function makeDepndencyGraph(fullNameList) {\n    var graph = {};\n    var noEntryList = [];\n    zrUtil.each(fullNameList, function (name) {\n      var thisItem = createDependencyGraphItem(graph, name);\n      var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n      var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n      thisItem.entryCount = availableDeps.length;\n\n      if (thisItem.entryCount === 0) {\n        noEntryList.push(name);\n      }\n\n      zrUtil.each(availableDeps, function (dependentName) {\n        if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n          thisItem.predecessor.push(dependentName);\n        }\n\n        var thatItem = createDependencyGraphItem(graph, dependentName);\n\n        if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n          thatItem.successor.push(name);\n        }\n      });\n    });\n    return {\n      graph: graph,\n      noEntryList: noEntryList\n    };\n  }\n\n  function createDependencyGraphItem(graph, name) {\n    if (!graph[name]) {\n      graph[name] = {\n        predecessor: [],\n        successor: []\n      };\n    }\n\n    return graph[name];\n  }\n\n  function getAvailableDependencies(originalDeps, fullNameList) {\n    var availableDeps = [];\n    zrUtil.each(originalDeps, function (dep) {\n      zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n    });\n    return availableDeps;\n  }\n}\n\nexports.getUID = getUID;\nexports.enableSubTypeDefaulter = enableSubTypeDefaulter;\nexports.enableTopologicalTravel = enableTopologicalTravel;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar platform = ''; // Navigator not exists in node\n\nif (typeof navigator !== 'undefined') {\n  platform = navigator.platform || '';\n}\n\nvar _default = {\n  // backgroundColor: 'rgba(0,0,0,0)',\n  // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n  // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n  // Light colors:\n  // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n  // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n  // Dark colors:\n  color: ['#c23531', '#2f4554', '#61a0a8', '#d48265', '#91c7ae', '#749f83', '#ca8622', '#bda29a', '#6e7074', '#546570', '#c4ccd3'],\n  gradientColor: ['#f6efa6', '#d88273', '#bf444c'],\n  // If xAxis and yAxis declared, grid is created by default.\n  // grid: {},\n  textStyle: {\n    // color: '#000',\n    // decoration: 'none',\n    // PENDING\n    fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n    // fontFamily: 'Arial, Verdana, sans-serif',\n    fontSize: 12,\n    fontStyle: 'normal',\n    fontWeight: 'normal'\n  },\n  // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n  // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n  // Default is source-over\n  blendMode: null,\n  animation: 'auto',\n  animationDuration: 1000,\n  animationDurationUpdate: 300,\n  animationEasing: 'exponentialOut',\n  animationEasingUpdate: 'cubicOut',\n  animationThreshold: 2000,\n  // Configuration for progressive/incremental rendering\n  progressiveThreshold: 3000,\n  progressive: 400,\n  // Threshold of if use single hover layer to optimize.\n  // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n  // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n  // which is unexpected.\n  // see example <echarts/test/heatmap-large.html>.\n  hoverLayerThreshold: 3000,\n  // See: module:echarts/scale/Time\n  useUTC: false\n};\nmodule.exports = _default;","var env = require(\"../../core/env\");\n\n// Fix weird bug in some version of IE11 (like 11.0.9600.178**),\n// where exception \"unexpected call to method or property access\"\n// might be thrown when calling ctx.fill or ctx.stroke after a path\n// whose area size is zero is drawn and ctx.clip() is called and\n// shadowBlur is set. See #4572, #3112, #5777.\n// (e.g.,\n//  ctx.moveTo(10, 10);\n//  ctx.lineTo(20, 10);\n//  ctx.closePath();\n//  ctx.clip();\n//  ctx.shadowBlur = 10;\n//  ...\n//  ctx.fill();\n// )\nvar shadowTemp = [['shadowBlur', 0], ['shadowColor', '#000'], ['shadowOffsetX', 0], ['shadowOffsetY', 0]];\n\nfunction _default(orignalBrush) {\n  // version string can be: '11.0'\n  return env.browser.ie && env.browser.version >= 11 ? function () {\n    var clipPaths = this.__clipPaths;\n    var style = this.style;\n    var modified;\n\n    if (clipPaths) {\n      for (var i = 0; i < clipPaths.length; i++) {\n        var clipPath = clipPaths[i];\n        var shape = clipPath && clipPath.shape;\n        var type = clipPath && clipPath.type;\n\n        if (shape && (type === 'sector' && shape.startAngle === shape.endAngle || type === 'rect' && (!shape.width || !shape.height))) {\n          for (var j = 0; j < shadowTemp.length; j++) {\n            // It is save to put shadowTemp static, because shadowTemp\n            // will be all modified each item brush called.\n            shadowTemp[j][2] = style[shadowTemp[j][0]];\n            style[shadowTemp[j][0]] = shadowTemp[j][1];\n          }\n\n          modified = true;\n          break;\n        }\n      }\n    }\n\n    orignalBrush.apply(this, arguments);\n\n    if (modified) {\n      for (var j = 0; j < shadowTemp.length; j++) {\n        style[shadowTemp[j][0]] = shadowTemp[j][2];\n      }\n    }\n  } : orignalBrush;\n}\n\nmodule.exports = _default;","var numberUtil = require(\"../util/number\");\n\nvar formatUtil = require(\"../util/format\");\n\nvar Scale = require(\"./Scale\");\n\nvar helper = require(\"./helper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Interval scale\n * @module echarts/scale/Interval\n */\nvar roundNumber = numberUtil.round;\n/**\n * @alias module:echarts/coord/scale/Interval\n * @constructor\n */\n\nvar IntervalScale = Scale.extend({\n  type: 'interval',\n  _interval: 0,\n  _intervalPrecision: 2,\n  setExtent: function (start, end) {\n    var thisExtent = this._extent; //start,end may be a Number like '25',so...\n\n    if (!isNaN(start)) {\n      thisExtent[0] = parseFloat(start);\n    }\n\n    if (!isNaN(end)) {\n      thisExtent[1] = parseFloat(end);\n    }\n  },\n  unionExtent: function (other) {\n    var extent = this._extent;\n    other[0] < extent[0] && (extent[0] = other[0]);\n    other[1] > extent[1] && (extent[1] = other[1]); // unionExtent may called by it's sub classes\n\n    IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n  },\n\n  /**\n   * Get interval\n   */\n  getInterval: function () {\n    return this._interval;\n  },\n\n  /**\n   * Set interval\n   */\n  setInterval: function (interval) {\n    this._interval = interval; // Dropped auto calculated niceExtent and use user setted extent\n    // We assume user wan't to set both interval, min, max to get a better result\n\n    this._niceExtent = this._extent.slice();\n    this._intervalPrecision = helper.getIntervalPrecision(interval);\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    return helper.intervalScaleGetTicks(this._interval, this._extent, this._niceExtent, this._intervalPrecision);\n  },\n\n  /**\n   * @param {number} data\n   * @param {Object} [opt]\n   * @param {number|string} [opt.precision] If 'auto', use nice presision.\n   * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n   * @return {string}\n   */\n  getLabel: function (data, opt) {\n    if (data == null) {\n      return '';\n    }\n\n    var precision = opt && opt.precision;\n\n    if (precision == null) {\n      precision = numberUtil.getPrecisionSafe(data) || 0;\n    } else if (precision === 'auto') {\n      // Should be more precise then tick.\n      precision = this._intervalPrecision;\n    } // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n    // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n\n\n    data = roundNumber(data, precision, true);\n    return formatUtil.addCommas(data);\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   *\n   * @param {number} [splitNumber = 5] Desired number of ticks\n   * @param {number} [minInterval]\n   * @param {number} [maxInterval]\n   */\n  niceTicks: function (splitNumber, minInterval, maxInterval) {\n    splitNumber = splitNumber || 5;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (!isFinite(span)) {\n      return;\n    } // User may set axis min 0 and data are all negative\n    // FIXME If it needs to reverse ?\n\n\n    if (span < 0) {\n      span = -span;\n      extent.reverse();\n    }\n\n    var result = helper.intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval);\n    this._intervalPrecision = result.intervalPrecision;\n    this._interval = result.interval;\n    this._niceExtent = result.niceTickExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @param {Object} opt\n   * @param {number} [opt.splitNumber = 5] Given approx tick number\n   * @param {boolean} [opt.fixMin=false]\n   * @param {boolean} [opt.fixMax=false]\n   * @param {boolean} [opt.minInterval]\n   * @param {boolean} [opt.maxInterval]\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      if (extent[0] !== 0) {\n        // Expand extent\n        var expandSize = extent[0]; // In the fowllowing case\n        //      Axis has been fixed max 100\n        //      Plus data are all 100 and axis extent are [100, 100].\n        // Extend to the both side will cause expanded max is larger than fixed max.\n        // So only expand to the smaller side.\n\n        if (!opt.fixMax) {\n          extent[1] += expandSize / 2;\n          extent[0] -= expandSize / 2;\n        } else {\n          extent[0] -= expandSize / 2;\n        }\n      } else {\n        extent[1] = 1;\n      }\n    }\n\n    var span = extent[1] - extent[0]; // If there are no data and extent are [Infinity, -Infinity]\n\n    if (!isFinite(span)) {\n      extent[0] = 0;\n      extent[1] = 1;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n    }\n  }\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nIntervalScale.create = function () {\n  return new IntervalScale();\n};\n\nvar _default = IntervalScale;\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar retrieve = _util.retrieve;\nvar each = _util.each;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Helper for model references.\n * There are many manners to refer axis/coordSys.\n */\n// TODO\n// merge relevant logic to this file?\n// check: \"modelHelper\" of tooltip and \"BrushTargetManager\".\n\n/**\n * @return {Object} For example:\n * {\n *     coordSysName: 'cartesian2d',\n *     coordSysDims: ['x', 'y', ...],\n *     axisMap: HashMap({\n *         x: xAxisModel,\n *         y: yAxisModel\n *     }),\n *     categoryAxisMap: HashMap({\n *         x: xAxisModel,\n *         y: undefined\n *     }),\n *     // It also indicate that whether there is category axis.\n *     firstCategoryDimIndex: 1,\n *     // To replace user specified encode.\n * }\n */\nfunction getCoordSysDefineBySeries(seriesModel) {\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var result = {\n    coordSysName: coordSysName,\n    coordSysDims: [],\n    axisMap: createHashMap(),\n    categoryAxisMap: createHashMap()\n  };\n  var fetch = fetchers[coordSysName];\n\n  if (fetch) {\n    fetch(seriesModel, result, result.axisMap, result.categoryAxisMap);\n    return result;\n  }\n}\n\nvar fetchers = {\n  cartesian2d: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var xAxisModel = seriesModel.getReferringComponents('xAxis')[0];\n    var yAxisModel = seriesModel.getReferringComponents('yAxis')[0];\n    result.coordSysDims = ['x', 'y'];\n    axisMap.set('x', xAxisModel);\n    axisMap.set('y', yAxisModel);\n\n    if (isCategory(xAxisModel)) {\n      categoryAxisMap.set('x', xAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n\n    if (isCategory(yAxisModel)) {\n      categoryAxisMap.set('y', yAxisModel);\n      result.firstCategoryDimIndex = 1;\n    }\n  },\n  singleAxis: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var singleAxisModel = seriesModel.getReferringComponents('singleAxis')[0];\n    result.coordSysDims = ['single'];\n    axisMap.set('single', singleAxisModel);\n\n    if (isCategory(singleAxisModel)) {\n      categoryAxisMap.set('single', singleAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n  },\n  polar: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var polarModel = seriesModel.getReferringComponents('polar')[0];\n    var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n    var angleAxisModel = polarModel.findAxisModel('angleAxis');\n    result.coordSysDims = ['radius', 'angle'];\n    axisMap.set('radius', radiusAxisModel);\n    axisMap.set('angle', angleAxisModel);\n\n    if (isCategory(radiusAxisModel)) {\n      categoryAxisMap.set('radius', radiusAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n\n    if (isCategory(angleAxisModel)) {\n      categoryAxisMap.set('angle', angleAxisModel);\n      result.firstCategoryDimIndex = 1;\n    }\n  },\n  geo: function (seriesModel, result, axisMap, categoryAxisMap) {\n    result.coordSysDims = ['lng', 'lat'];\n  },\n  parallel: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var ecModel = seriesModel.ecModel;\n    var parallelModel = ecModel.getComponent('parallel', seriesModel.get('parallelIndex'));\n    var coordSysDims = result.coordSysDims = parallelModel.dimensions.slice();\n    each(parallelModel.parallelAxisIndex, function (axisIndex, index) {\n      var axisModel = ecModel.getComponent('parallelAxis', axisIndex);\n      var axisDim = coordSysDims[index];\n      axisMap.set(axisDim, axisModel);\n\n      if (isCategory(axisModel) && result.firstCategoryDimIndex == null) {\n        categoryAxisMap.set(axisDim, axisModel);\n        result.firstCategoryDimIndex = index;\n      }\n    });\n  }\n};\n\nfunction isCategory(axisModel) {\n  return axisModel.get('type') === 'category';\n}\n\nexports.getCoordSysDefineBySeries = getCoordSysDefineBySeries;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Scale = require(\"./Scale\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar IntervalScale = require(\"./Interval\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Log scale\n * @module echarts/scale/Log\n */\n// Use some method of IntervalScale\nvar scaleProto = Scale.prototype;\nvar intervalScaleProto = IntervalScale.prototype;\nvar getPrecisionSafe = numberUtil.getPrecisionSafe;\nvar roundingErrorFix = numberUtil.round;\nvar mathFloor = Math.floor;\nvar mathCeil = Math.ceil;\nvar mathPow = Math.pow;\nvar mathLog = Math.log;\nvar LogScale = Scale.extend({\n  type: 'log',\n  base: 10,\n  $constructor: function () {\n    Scale.apply(this, arguments);\n    this._originalScale = new IntervalScale();\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    var originalScale = this._originalScale;\n    var extent = this._extent;\n    var originalExtent = originalScale.getExtent();\n    return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n      var powVal = numberUtil.round(mathPow(this.base, val)); // Fix #4158\n\n      powVal = val === extent[0] && originalScale.__fixMin ? fixRoundingError(powVal, originalExtent[0]) : powVal;\n      powVal = val === extent[1] && originalScale.__fixMax ? fixRoundingError(powVal, originalExtent[1]) : powVal;\n      return powVal;\n    }, this);\n  },\n\n  /**\n   * @param {number} val\n   * @return {string}\n   */\n  getLabel: intervalScaleProto.getLabel,\n\n  /**\n   * @param  {number} val\n   * @return {number}\n   */\n  scale: function (val) {\n    val = scaleProto.scale.call(this, val);\n    return mathPow(this.base, val);\n  },\n\n  /**\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var base = this.base;\n    start = mathLog(start) / mathLog(base);\n    end = mathLog(end) / mathLog(base);\n    intervalScaleProto.setExtent.call(this, start, end);\n  },\n\n  /**\n   * @return {number} end\n   */\n  getExtent: function () {\n    var base = this.base;\n    var extent = scaleProto.getExtent.call(this);\n    extent[0] = mathPow(base, extent[0]);\n    extent[1] = mathPow(base, extent[1]); // Fix #4158\n\n    var originalScale = this._originalScale;\n    var originalExtent = originalScale.getExtent();\n    originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n    originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n    return extent;\n  },\n\n  /**\n   * @param  {Array.<number>} extent\n   */\n  unionExtent: function (extent) {\n    this._originalScale.unionExtent(extent);\n\n    var base = this.base;\n    extent[0] = mathLog(extent[0]) / mathLog(base);\n    extent[1] = mathLog(extent[1]) / mathLog(base);\n    scaleProto.unionExtent.call(this, extent);\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    // TODO\n    // filter value that <= 0\n    this.unionExtent(data.getApproximateExtent(dim));\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   * @param  {number} [approxTickNum = 10] Given approx tick number\n   */\n  niceTicks: function (approxTickNum) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (span === Infinity || span <= 0) {\n      return;\n    }\n\n    var interval = numberUtil.quantity(span);\n    var err = approxTickNum / span * interval; // Filter ticks to get closer to the desired count.\n\n    if (err <= 0.5) {\n      interval *= 10;\n    } // Interval should be integer\n\n\n    while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n      interval *= 10;\n    }\n\n    var niceExtent = [numberUtil.round(mathCeil(extent[0] / interval) * interval), numberUtil.round(mathFloor(extent[1] / interval) * interval)];\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @override\n   */\n  niceExtent: function (opt) {\n    intervalScaleProto.niceExtent.call(this, opt);\n    var originalScale = this._originalScale;\n    originalScale.__fixMin = opt.fixMin;\n    originalScale.__fixMax = opt.fixMax;\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  LogScale.prototype[methodName] = function (val) {\n    val = mathLog(val) / mathLog(this.base);\n    return scaleProto[methodName].call(this, val);\n  };\n});\n\nLogScale.create = function () {\n  return new LogScale();\n};\n\nfunction fixRoundingError(val, originalVal) {\n  return roundingErrorFix(val, getPrecisionSafe(originalVal));\n}\n\nvar _default = LogScale;\nmodule.exports = _default;","var Path = require(\"../Path\");\n\n/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\nvar _default = Path.extend({\n  type: 'arc',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n  }\n});\n\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar isObject = _util.isObject;\nvar map = _util.map;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @constructor\n * @param {Object} [opt]\n * @param {Object} [opt.categories=[]]\n * @param {Object} [opt.needCollect=false]\n * @param {Object} [opt.deduplication=false]\n */\nfunction OrdinalMeta(opt) {\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n  this.categories = opt.categories || [];\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._needCollect = opt.needCollect;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._deduplication = opt.deduplication;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._map;\n}\n/**\n * @param {module:echarts/model/Model} axisModel\n * @return {module:echarts/data/OrdinalMeta}\n */\n\n\nOrdinalMeta.createByAxisModel = function (axisModel) {\n  var option = axisModel.option;\n  var data = option.data;\n  var categories = data && map(data, getName);\n  return new OrdinalMeta({\n    categories: categories,\n    needCollect: !categories,\n    // deduplication is default in axis.\n    deduplication: option.dedplication !== false\n  });\n};\n\nvar proto = OrdinalMeta.prototype;\n/**\n * @param {string} category\n * @return {number} ordinal\n */\n\nproto.getOrdinal = function (category) {\n  return getOrCreateMap(this).get(category);\n};\n/**\n * @param {*} category\n * @return {number} The ordinal. If not found, return NaN.\n */\n\n\nproto.parseAndCollect = function (category) {\n  var index;\n  var needCollect = this._needCollect; // The value of category dim can be the index of the given category set.\n  // This feature is only supported when !needCollect, because we should\n  // consider a common case: a value is 2017, which is a number but is\n  // expected to be tread as a category. This case usually happen in dataset,\n  // where it happent to be no need of the index feature.\n\n  if (typeof category !== 'string' && !needCollect) {\n    return category;\n  } // Optimize for the scenario:\n  // category is ['2012-01-01', '2012-01-02', ...], where the input\n  // data has been ensured not duplicate and is large data.\n  // Notice, if a dataset dimension provide categroies, usually echarts\n  // should remove duplication except user tell echarts dont do that\n  // (set axis.deduplication = false), because echarts do not know whether\n  // the values in the category dimension has duplication (consider the\n  // parallel-aqi example)\n\n\n  if (needCollect && !this._deduplication) {\n    index = this.categories.length;\n    this.categories[index] = category;\n    return index;\n  }\n\n  var map = getOrCreateMap(this);\n  index = map.get(category);\n\n  if (index == null) {\n    if (needCollect) {\n      index = this.categories.length;\n      this.categories[index] = category;\n      map.set(category, index);\n    } else {\n      index = NaN;\n    }\n  }\n\n  return index;\n}; // Consider big data, do not create map until needed.\n\n\nfunction getOrCreateMap(ordinalMeta) {\n  return ordinalMeta._map || (ordinalMeta._map = createHashMap(ordinalMeta.categories));\n}\n\nfunction getName(obj) {\n  if (isObject(obj) && obj.value != null) {\n    return obj.value;\n  } else {\n    return obj + '';\n  }\n}\n\nvar _default = OrdinalMeta;\nmodule.exports = _default;","require(\"./AxisModel\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\nvar _default = ComponentModel.extend({\n  type: 'grid',\n  dependencies: ['xAxis', 'yAxis'],\n  layoutMode: 'box',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Grid}\n   */\n  coordinateSystem: null,\n  defaultOption: {\n    show: false,\n    zlevel: 0,\n    z: 0,\n    left: '10%',\n    top: 60,\n    right: '10%',\n    bottom: 60,\n    // If grid size contain label\n    containLabel: false,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderWidth: 1,\n    borderColor: '#ccc'\n  }\n});\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Avoid typo.\nvar SOURCE_FORMAT_ORIGINAL = 'original';\nvar SOURCE_FORMAT_ARRAY_ROWS = 'arrayRows';\nvar SOURCE_FORMAT_OBJECT_ROWS = 'objectRows';\nvar SOURCE_FORMAT_KEYED_COLUMNS = 'keyedColumns';\nvar SOURCE_FORMAT_UNKNOWN = 'unknown'; // ??? CHANGE A NAME\n\nvar SOURCE_FORMAT_TYPED_ARRAY = 'typedArray';\nvar SERIES_LAYOUT_BY_COLUMN = 'column';\nvar SERIES_LAYOUT_BY_ROW = 'row';\nexports.SOURCE_FORMAT_ORIGINAL = SOURCE_FORMAT_ORIGINAL;\nexports.SOURCE_FORMAT_ARRAY_ROWS = SOURCE_FORMAT_ARRAY_ROWS;\nexports.SOURCE_FORMAT_OBJECT_ROWS = SOURCE_FORMAT_OBJECT_ROWS;\nexports.SOURCE_FORMAT_KEYED_COLUMNS = SOURCE_FORMAT_KEYED_COLUMNS;\nexports.SOURCE_FORMAT_UNKNOWN = SOURCE_FORMAT_UNKNOWN;\nexports.SOURCE_FORMAT_TYPED_ARRAY = SOURCE_FORMAT_TYPED_ARRAY;\nexports.SERIES_LAYOUT_BY_COLUMN = SERIES_LAYOUT_BY_COLUMN;\nexports.SERIES_LAYOUT_BY_ROW = SERIES_LAYOUT_BY_ROW;","var numberUtil = require(\"../util/number\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * For testable.\n */\nvar roundNumber = numberUtil.round;\n/**\n * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n *                                Should be extent[0] < extent[1].\n * @param {number} splitNumber splitNumber should be >= 1.\n * @param {number} [minInterval]\n * @param {number} [maxInterval]\n * @return {Object} {interval, intervalPrecision, niceTickExtent}\n */\n\nfunction intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval) {\n  var result = {};\n  var span = extent[1] - extent[0];\n  var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n\n  if (minInterval != null && interval < minInterval) {\n    interval = result.interval = minInterval;\n  }\n\n  if (maxInterval != null && interval > maxInterval) {\n    interval = result.interval = maxInterval;\n  } // Tow more digital for tick.\n\n\n  var precision = result.intervalPrecision = getIntervalPrecision(interval); // Niced extent inside original extent\n\n  var niceTickExtent = result.niceTickExtent = [roundNumber(Math.ceil(extent[0] / interval) * interval, precision), roundNumber(Math.floor(extent[1] / interval) * interval, precision)];\n  fixExtent(niceTickExtent, extent);\n  return result;\n}\n/**\n * @param {number} interval\n * @return {number} interval precision\n */\n\n\nfunction getIntervalPrecision(interval) {\n  // Tow more digital for tick.\n  return numberUtil.getPrecisionSafe(interval) + 2;\n}\n\nfunction clamp(niceTickExtent, idx, extent) {\n  niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n} // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n\n\nfunction fixExtent(niceTickExtent, extent) {\n  !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n  !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n  clamp(niceTickExtent, 0, extent);\n  clamp(niceTickExtent, 1, extent);\n\n  if (niceTickExtent[0] > niceTickExtent[1]) {\n    niceTickExtent[0] = niceTickExtent[1];\n  }\n}\n\nfunction intervalScaleGetTicks(interval, extent, niceTickExtent, intervalPrecision) {\n  var ticks = []; // If interval is 0, return [];\n\n  if (!interval) {\n    return ticks;\n  } // Consider this case: using dataZoom toolbox, zoom and zoom.\n\n\n  var safeLimit = 10000;\n\n  if (extent[0] < niceTickExtent[0]) {\n    ticks.push(extent[0]);\n  }\n\n  var tick = niceTickExtent[0];\n\n  while (tick <= niceTickExtent[1]) {\n    ticks.push(tick); // Avoid rounding error\n\n    tick = roundNumber(tick + interval, intervalPrecision);\n\n    if (tick === ticks[ticks.length - 1]) {\n      // Consider out of safe float point, e.g.,\n      // -3711126.9907707 + 2e-10 === -3711126.9907707\n      break;\n    }\n\n    if (ticks.length > safeLimit) {\n      return [];\n    }\n  } // Consider this case: the last item of ticks is smaller\n  // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n\n\n  if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n    ticks.push(extent[1]);\n  }\n\n  return ticks;\n}\n\nexports.intervalScaleNiceTicks = intervalScaleNiceTicks;\nexports.getIntervalPrecision = getIntervalPrecision;\nexports.fixExtent = fixExtent;\nexports.intervalScaleGetTicks = intervalScaleGetTicks;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _barGrid = require(\"../layout/barGrid\");\n\nvar layout = _barGrid.layout;\nvar largeLayout = _barGrid.largeLayout;\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./bar/BarSeries\");\n\nrequire(\"./bar/BarView\");\n\nrequire(\"../component/gridSimple\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// In case developer forget to include grid component\necharts.registerLayout(zrUtil.curry(layout, 'bar')); // Should after normal bar layout, otherwise it is blocked by normal bar layout.\n\necharts.registerLayout(largeLayout);\necharts.registerVisual({\n  seriesType: 'bar',\n  reset: function (seriesModel) {\n    // Visual coding for legend\n    seriesModel.getData().setVisual('legendSymbol', 'roundRect');\n  }\n});","/**\n * 线段包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  var _a = 0;\n  var _b = x0; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l || y < y0 - _l && y < y1 - _l || x > x0 + _l && x > x1 + _l || x < x0 - _l && x < x1 - _l) {\n    return false;\n  }\n\n  if (x0 !== x1) {\n    _a = (y0 - y1) / (x0 - x1);\n    _b = (x0 * y1 - x1 * y0) / (x0 - x1);\n  } else {\n    return Math.abs(x - x0) <= _l / 2;\n  }\n\n  var tmp = _a * x - y + _b;\n\n  var _s = tmp * tmp / (_a * _a + 1);\n\n  return _s <= _l / 2 * _l / 2;\n}\n\nexports.containStroke = containStroke;","var vec2 = require(\"./vector\");\n\nvar matrix = require(\"./matrix\");\n\n/**\n * @module echarts/core/BoundingRect\n */\nvar v2ApplyTransform = vec2.applyTransform;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\n/**\n * @alias module:echarts/core/BoundingRect\n */\n\nfunction BoundingRect(x, y, width, height) {\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n  /**\n   * @type {number}\n   */\n\n\n  this.x = x;\n  /**\n   * @type {number}\n   */\n\n  this.y = y;\n  /**\n   * @type {number}\n   */\n\n  this.width = width;\n  /**\n   * @type {number}\n   */\n\n  this.height = height;\n}\n\nBoundingRect.prototype = {\n  constructor: BoundingRect,\n\n  /**\n   * @param {module:echarts/core/BoundingRect} other\n   */\n  union: function (other) {\n    var x = mathMin(other.x, this.x);\n    var y = mathMin(other.y, this.y);\n    this.width = mathMax(other.x + other.width, this.x + this.width) - x;\n    this.height = mathMax(other.y + other.height, this.y + this.height) - y;\n    this.x = x;\n    this.y = y;\n  },\n\n  /**\n   * @param {Array.<number>} m\n   * @methods\n   */\n  applyTransform: function () {\n    var lt = [];\n    var rb = [];\n    var lb = [];\n    var rt = [];\n    return function (m) {\n      // In case usage like this\n      // el.getBoundingRect().applyTransform(el.transform)\n      // And element has no transform\n      if (!m) {\n        return;\n      }\n\n      lt[0] = lb[0] = this.x;\n      lt[1] = rt[1] = this.y;\n      rb[0] = rt[0] = this.x + this.width;\n      rb[1] = lb[1] = this.y + this.height;\n      v2ApplyTransform(lt, lt, m);\n      v2ApplyTransform(rb, rb, m);\n      v2ApplyTransform(lb, lb, m);\n      v2ApplyTransform(rt, rt, m);\n      this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n      this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n      var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n      var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n      this.width = maxX - this.x;\n      this.height = maxY - this.y;\n    };\n  }(),\n\n  /**\n   * Calculate matrix of transforming from self to target rect\n   * @param  {module:zrender/core/BoundingRect} b\n   * @return {Array.<number>}\n   */\n  calculateTransform: function (b) {\n    var a = this;\n    var sx = b.width / a.width;\n    var sy = b.height / a.height;\n    var m = matrix.create(); // 矩阵右乘\n\n    matrix.translate(m, m, [-a.x, -a.y]);\n    matrix.scale(m, m, [sx, sy]);\n    matrix.translate(m, m, [b.x, b.y]);\n    return m;\n  },\n\n  /**\n   * @param {(module:echarts/core/BoundingRect|Object)} b\n   * @return {boolean}\n   */\n  intersect: function (b) {\n    if (!b) {\n      return false;\n    }\n\n    if (!(b instanceof BoundingRect)) {\n      // Normalize negative width/height.\n      b = BoundingRect.create(b);\n    }\n\n    var a = this;\n    var ax0 = a.x;\n    var ax1 = a.x + a.width;\n    var ay0 = a.y;\n    var ay1 = a.y + a.height;\n    var bx0 = b.x;\n    var bx1 = b.x + b.width;\n    var by0 = b.y;\n    var by1 = b.y + b.height;\n    return !(ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n  },\n  contain: function (x, y) {\n    var rect = this;\n    return x >= rect.x && x <= rect.x + rect.width && y >= rect.y && y <= rect.y + rect.height;\n  },\n\n  /**\n   * @return {module:echarts/core/BoundingRect}\n   */\n  clone: function () {\n    return new BoundingRect(this.x, this.y, this.width, this.height);\n  },\n\n  /**\n   * Copy from another rect\n   */\n  copy: function (other) {\n    this.x = other.x;\n    this.y = other.y;\n    this.width = other.width;\n    this.height = other.height;\n  },\n  plain: function () {\n    return {\n      x: this.x,\n      y: this.y,\n      width: this.width,\n      height: this.height\n    };\n  }\n};\n/**\n * @param {Object|module:zrender/core/BoundingRect} rect\n * @param {number} rect.x\n * @param {number} rect.y\n * @param {number} rect.width\n * @param {number} rect.height\n * @return {module:zrender/core/BoundingRect}\n */\n\nBoundingRect.create = function (rect) {\n  return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n};\n\nvar _default = BoundingRect;\nmodule.exports = _default;","var _default = typeof window !== 'undefined' && (window.requestAnimationFrame && window.requestAnimationFrame.bind(window) || // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\nwindow.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window) || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame) || function (func) {\n  setTimeout(func, 16);\n};\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../util/graphic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PI = Math.PI;\n/**\n * @param {module:echarts/ExtensionAPI} api\n * @param {Object} [opts]\n * @param {string} [opts.text]\n * @param {string} [opts.color]\n * @param {string} [opts.textColor]\n * @return {module:zrender/Element}\n */\n\nfunction _default(api, opts) {\n  opts = opts || {};\n  zrUtil.defaults(opts, {\n    text: 'loading',\n    color: '#c23531',\n    textColor: '#000',\n    maskColor: 'rgba(255, 255, 255, 0.8)',\n    zlevel: 0\n  });\n  var mask = new graphic.Rect({\n    style: {\n      fill: opts.maskColor\n    },\n    zlevel: opts.zlevel,\n    z: 10000\n  });\n  var arc = new graphic.Arc({\n    shape: {\n      startAngle: -PI / 2,\n      endAngle: -PI / 2 + 0.1,\n      r: 10\n    },\n    style: {\n      stroke: opts.color,\n      lineCap: 'round',\n      lineWidth: 5\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  var labelRect = new graphic.Rect({\n    style: {\n      fill: 'none',\n      text: opts.text,\n      textPosition: 'right',\n      textDistance: 10,\n      textFill: opts.textColor\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  arc.animateShape(true).when(1000, {\n    endAngle: PI * 3 / 2\n  }).start('circularInOut');\n  arc.animateShape(true).when(1000, {\n    startAngle: PI * 3 / 2\n  }).delay(300).start('circularInOut');\n  var group = new graphic.Group();\n  group.add(arc);\n  group.add(labelRect);\n  group.add(mask); // Inject resize\n\n  group.resize = function () {\n    var cx = api.getWidth() / 2;\n    var cy = api.getHeight() / 2;\n    arc.setShape({\n      cx: cx,\n      cy: cy\n    });\n    var r = arc.shape.r;\n    labelRect.setShape({\n      x: cx - r,\n      y: cy - r,\n      width: r * 2,\n      height: r * 2\n    });\n    mask.setShape({\n      x: 0,\n      y: 0,\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n  };\n\n  group.resize();\n  return group;\n}\n\nmodule.exports = _default;","var makeStyleMapper = require(\"./makeStyleMapper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar getAreaStyle = makeStyleMapper([['fill', 'color'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['opacity'], ['shadowColor']]);\nvar _default = {\n  getAreaStyle: function (excludes, includes) {\n    return getAreaStyle(this, excludes, includes);\n  }\n};\nmodule.exports = _default;","var _vector = require(\"../../core/vector\");\n\nvar v2Min = _vector.min;\nvar v2Max = _vector.max;\nvar v2Scale = _vector.scale;\nvar v2Distance = _vector.distance;\nvar v2Add = _vector.add;\nvar v2Clone = _vector.clone;\nvar v2Sub = _vector.sub;\n\n/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * 贝塞尔平滑曲线\n * @alias module:zrender/shape/util/smoothBezier\n * @param {Array} points 线段顶点数组\n * @param {number} smooth 平滑等级, 0-1\n * @param {boolean} isLoop\n * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n *                           整个折线的包围盒做一个并集用来约束控制点。\n * @param {Array} 计算出来的控制点数组\n */\nfunction _default(points, smooth, isLoop, constraint) {\n  var cps = [];\n  var v = [];\n  var v1 = [];\n  var v2 = [];\n  var prevPoint;\n  var nextPoint;\n  var min, max;\n\n  if (constraint) {\n    min = [Infinity, Infinity];\n    max = [-Infinity, -Infinity];\n\n    for (var i = 0, len = points.length; i < len; i++) {\n      v2Min(min, min, points[i]);\n      v2Max(max, max, points[i]);\n    } // 与指定的包围盒做并集\n\n\n    v2Min(min, min, constraint[0]);\n    v2Max(max, max, constraint[1]);\n  }\n\n  for (var i = 0, len = points.length; i < len; i++) {\n    var point = points[i];\n\n    if (isLoop) {\n      prevPoint = points[i ? i - 1 : len - 1];\n      nextPoint = points[(i + 1) % len];\n    } else {\n      if (i === 0 || i === len - 1) {\n        cps.push(v2Clone(points[i]));\n        continue;\n      } else {\n        prevPoint = points[i - 1];\n        nextPoint = points[i + 1];\n      }\n    }\n\n    v2Sub(v, nextPoint, prevPoint); // use degree to scale the handle length\n\n    v2Scale(v, v, smooth);\n    var d0 = v2Distance(point, prevPoint);\n    var d1 = v2Distance(point, nextPoint);\n    var sum = d0 + d1;\n\n    if (sum !== 0) {\n      d0 /= sum;\n      d1 /= sum;\n    }\n\n    v2Scale(v1, v, -d0);\n    v2Scale(v2, v, d1);\n    var cp0 = v2Add([], point, v1);\n    var cp1 = v2Add([], point, v2);\n\n    if (constraint) {\n      v2Max(cp0, cp0, min);\n      v2Min(cp0, cp0, max);\n      v2Max(cp1, cp1, min);\n      v2Min(cp1, cp1, max);\n    }\n\n    cps.push(cp0);\n    cps.push(cp1);\n  }\n\n  if (isLoop) {\n    cps.push(cps.shift());\n  }\n\n  return cps;\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _number = require(\"../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _dataStackHelper = require(\"../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\nvar createRenderPlanner = require(\"../chart/helper/createRenderPlanner\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar STACK_PREFIX = '__ec_stack_';\nvar LARGE_BAR_MIN_WIDTH = 0.5;\nvar LargeArr = typeof Float32Array !== 'undefined' ? Float32Array : Array;\n\nfunction getSeriesStackId(seriesModel) {\n  return seriesModel.get('stack') || STACK_PREFIX + seriesModel.seriesIndex;\n}\n\nfunction getAxisKey(axis) {\n  return axis.dim + axis.index;\n}\n/**\n * @param {Object} opt\n * @param {module:echarts/coord/Axis} opt.axis Only support category axis currently.\n * @param {number} opt.count Positive interger.\n * @param {number} [opt.barWidth]\n * @param {number} [opt.barMaxWidth]\n * @param {number} [opt.barGap]\n * @param {number} [opt.barCategoryGap]\n * @return {Object} {width, offset, offsetCenter} If axis.type is not 'category', return undefined.\n */\n\n\nfunction getLayoutOnAxis(opt) {\n  var params = [];\n  var baseAxis = opt.axis;\n  var axisKey = 'axis0';\n\n  if (baseAxis.type !== 'category') {\n    return;\n  }\n\n  var bandWidth = baseAxis.getBandWidth();\n\n  for (var i = 0; i < opt.count || 0; i++) {\n    params.push(zrUtil.defaults({\n      bandWidth: bandWidth,\n      axisKey: axisKey,\n      stackId: STACK_PREFIX + i\n    }, opt));\n  }\n\n  var widthAndOffsets = doCalBarWidthAndOffset(params);\n  var result = [];\n\n  for (var i = 0; i < opt.count; i++) {\n    var item = widthAndOffsets[axisKey][STACK_PREFIX + i];\n    item.offsetCenter = item.offset + item.width / 2;\n    result.push(item);\n  }\n\n  return result;\n}\n\nfunction prepareLayoutBarSeries(seriesType, ecModel) {\n  var seriesModels = [];\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    // Check series coordinate, do layout for cartesian2d only\n    if (isOnCartesian(seriesModel) && !isInLargeMode(seriesModel)) {\n      seriesModels.push(seriesModel);\n    }\n  });\n  return seriesModels;\n}\n\nfunction makeColumnLayout(barSeries) {\n  var seriesInfoList = [];\n  zrUtil.each(barSeries, function (seriesModel) {\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var axisExtent = baseAxis.getExtent();\n    var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : Math.abs(axisExtent[1] - axisExtent[0]) / data.count();\n    var barWidth = parsePercent(seriesModel.get('barWidth'), bandWidth);\n    var barMaxWidth = parsePercent(seriesModel.get('barMaxWidth'), bandWidth);\n    var barGap = seriesModel.get('barGap');\n    var barCategoryGap = seriesModel.get('barCategoryGap');\n    seriesInfoList.push({\n      bandWidth: bandWidth,\n      barWidth: barWidth,\n      barMaxWidth: barMaxWidth,\n      barGap: barGap,\n      barCategoryGap: barCategoryGap,\n      axisKey: getAxisKey(baseAxis),\n      stackId: getSeriesStackId(seriesModel)\n    });\n  });\n  return doCalBarWidthAndOffset(seriesInfoList);\n}\n\nfunction doCalBarWidthAndOffset(seriesInfoList) {\n  // Columns info on each category axis. Key is cartesian name\n  var columnsMap = {};\n  zrUtil.each(seriesInfoList, function (seriesInfo, idx) {\n    var axisKey = seriesInfo.axisKey;\n    var bandWidth = seriesInfo.bandWidth;\n    var columnsOnAxis = columnsMap[axisKey] || {\n      bandWidth: bandWidth,\n      remainedWidth: bandWidth,\n      autoWidthCount: 0,\n      categoryGap: '20%',\n      gap: '30%',\n      stacks: {}\n    };\n    var stacks = columnsOnAxis.stacks;\n    columnsMap[axisKey] = columnsOnAxis;\n    var stackId = seriesInfo.stackId;\n\n    if (!stacks[stackId]) {\n      columnsOnAxis.autoWidthCount++;\n    }\n\n    stacks[stackId] = stacks[stackId] || {\n      width: 0,\n      maxWidth: 0\n    }; // Caution: In a single coordinate system, these barGrid attributes\n    // will be shared by series. Consider that they have default values,\n    // only the attributes set on the last series will work.\n    // Do not change this fact unless there will be a break change.\n    // TODO\n\n    var barWidth = seriesInfo.barWidth;\n\n    if (barWidth && !stacks[stackId].width) {\n      // See #6312, do not restrict width.\n      stacks[stackId].width = barWidth;\n      barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n      columnsOnAxis.remainedWidth -= barWidth;\n    }\n\n    var barMaxWidth = seriesInfo.barMaxWidth;\n    barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n    var barGap = seriesInfo.barGap;\n    barGap != null && (columnsOnAxis.gap = barGap);\n    var barCategoryGap = seriesInfo.barCategoryGap;\n    barCategoryGap != null && (columnsOnAxis.categoryGap = barCategoryGap);\n  });\n  var result = {};\n  zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n    result[coordSysName] = {};\n    var stacks = columnsOnAxis.stacks;\n    var bandWidth = columnsOnAxis.bandWidth;\n    var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n    var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n    var remainedWidth = columnsOnAxis.remainedWidth;\n    var autoWidthCount = columnsOnAxis.autoWidthCount;\n    var autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0); // Find if any auto calculated bar exceeded maxBarWidth\n\n    zrUtil.each(stacks, function (column, stack) {\n      var maxWidth = column.maxWidth;\n\n      if (maxWidth && maxWidth < autoWidth) {\n        maxWidth = Math.min(maxWidth, remainedWidth);\n\n        if (column.width) {\n          maxWidth = Math.min(maxWidth, column.width);\n        }\n\n        remainedWidth -= maxWidth;\n        column.width = maxWidth;\n        autoWidthCount--;\n      }\n    }); // Recalculate width again\n\n    autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0);\n    var widthSum = 0;\n    var lastColumn;\n    zrUtil.each(stacks, function (column, idx) {\n      if (!column.width) {\n        column.width = autoWidth;\n      }\n\n      lastColumn = column;\n      widthSum += column.width * (1 + barGapPercent);\n    });\n\n    if (lastColumn) {\n      widthSum -= lastColumn.width * barGapPercent;\n    }\n\n    var offset = -widthSum / 2;\n    zrUtil.each(stacks, function (column, stackId) {\n      result[coordSysName][stackId] = result[coordSysName][stackId] || {\n        offset: offset,\n        width: column.width\n      };\n      offset += column.width * (1 + barGapPercent);\n    });\n  });\n  return result;\n}\n/**\n * @param {Object} barWidthAndOffset The result of makeColumnLayout\n * @param {module:echarts/coord/Axis} axis\n * @param {module:echarts/model/Series} [seriesModel] If not provided, return all.\n * @return {Object} {stackId: {offset, width}} or {offset, width} if seriesModel provided.\n */\n\n\nfunction retrieveColumnLayout(barWidthAndOffset, axis, seriesModel) {\n  if (barWidthAndOffset && axis) {\n    var result = barWidthAndOffset[getAxisKey(axis)];\n\n    if (result != null && seriesModel != null) {\n      result = result[getSeriesStackId(seriesModel)];\n    }\n\n    return result;\n  }\n}\n/**\n * @param {string} seriesType\n * @param {module:echarts/model/Global} ecModel\n */\n\n\nfunction layout(seriesType, ecModel) {\n  var seriesModels = prepareLayoutBarSeries(seriesType, ecModel);\n  var barWidthAndOffset = makeColumnLayout(seriesModels);\n  var lastStackCoords = {};\n  var lastStackCoordsOrigin = {};\n  zrUtil.each(seriesModels, function (seriesModel) {\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var stackId = getSeriesStackId(seriesModel);\n    var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n    var columnOffset = columnLayoutInfo.offset;\n    var columnWidth = columnLayoutInfo.width;\n    var valueAxis = cartesian.getOtherAxis(baseAxis);\n    var barMinHeight = seriesModel.get('barMinHeight') || 0;\n    lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n    lastStackCoordsOrigin[stackId] = lastStackCoordsOrigin[stackId] || []; // Fix #4243\n\n    data.setLayout({\n      offset: columnOffset,\n      size: columnWidth\n    });\n    var valueDim = data.mapDimension(valueAxis.dim);\n    var baseDim = data.mapDimension(baseAxis.dim);\n    var stacked = isDimensionStacked(data, valueDim\n    /*, baseDim*/\n    );\n    var isValueAxisH = valueAxis.isHorizontal();\n    var valueAxisStart = getValueAxisStart(baseAxis, valueAxis, stacked);\n\n    for (var idx = 0, len = data.count(); idx < len; idx++) {\n      var value = data.get(valueDim, idx);\n      var baseValue = data.get(baseDim, idx);\n\n      if (isNaN(value)) {\n        continue;\n      }\n\n      var sign = value >= 0 ? 'p' : 'n';\n      var baseCoord = valueAxisStart; // Because of the barMinHeight, we can not use the value in\n      // stackResultDimension directly.\n\n      if (stacked) {\n        // Only ordinal axis can be stacked.\n        if (!lastStackCoords[stackId][baseValue]) {\n          lastStackCoords[stackId][baseValue] = {\n            p: valueAxisStart,\n            // Positive stack\n            n: valueAxisStart // Negative stack\n\n          };\n        } // Should also consider #4243\n\n\n        baseCoord = lastStackCoords[stackId][baseValue][sign];\n      }\n\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (isValueAxisH) {\n        var coord = cartesian.dataToPoint([value, baseValue]);\n        x = baseCoord;\n        y = coord[1] + columnOffset;\n        width = coord[0] - valueAxisStart;\n        height = columnWidth;\n\n        if (Math.abs(width) < barMinHeight) {\n          width = (width < 0 ? -1 : 1) * barMinHeight;\n        }\n\n        stacked && (lastStackCoords[stackId][baseValue][sign] += width);\n      } else {\n        var coord = cartesian.dataToPoint([baseValue, value]);\n        x = coord[0] + columnOffset;\n        y = baseCoord;\n        width = columnWidth;\n        height = coord[1] - valueAxisStart;\n\n        if (Math.abs(height) < barMinHeight) {\n          // Include zero to has a positive bar\n          height = (height <= 0 ? -1 : 1) * barMinHeight;\n        }\n\n        stacked && (lastStackCoords[stackId][baseValue][sign] += height);\n      }\n\n      data.setItemLayout(idx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      });\n    }\n  }, this);\n} // TODO: Do not support stack in large mode yet.\n\n\nvar largeLayout = {\n  seriesType: 'bar',\n  plan: createRenderPlanner(),\n  reset: function (seriesModel) {\n    if (!isOnCartesian(seriesModel) || !isInLargeMode(seriesModel)) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var valueAxis = cartesian.getOtherAxis(baseAxis);\n    var valueDim = data.mapDimension(valueAxis.dim);\n    var baseDim = data.mapDimension(baseAxis.dim);\n    var valueAxisHorizontal = valueAxis.isHorizontal();\n    var valueDimIdx = valueAxisHorizontal ? 0 : 1;\n    var barWidth = retrieveColumnLayout(makeColumnLayout([seriesModel]), baseAxis, seriesModel).width;\n\n    if (!(barWidth > LARGE_BAR_MIN_WIDTH)) {\n      // jshint ignore:line\n      barWidth = LARGE_BAR_MIN_WIDTH;\n    }\n\n    return {\n      progress: progress\n    };\n\n    function progress(params, data) {\n      var largePoints = new LargeArr(params.count * 2);\n      var dataIndex;\n      var coord = [];\n      var valuePair = [];\n      var offset = 0;\n\n      while ((dataIndex = params.next()) != null) {\n        valuePair[valueDimIdx] = data.get(valueDim, dataIndex);\n        valuePair[1 - valueDimIdx] = data.get(baseDim, dataIndex);\n        coord = cartesian.dataToPoint(valuePair, null, coord);\n        largePoints[offset++] = coord[0];\n        largePoints[offset++] = coord[1];\n      }\n\n      data.setLayout({\n        largePoints: largePoints,\n        barWidth: barWidth,\n        valueAxisStart: getValueAxisStart(baseAxis, valueAxis, false),\n        valueAxisHorizontal: valueAxisHorizontal\n      });\n    }\n  }\n};\n\nfunction isOnCartesian(seriesModel) {\n  return seriesModel.coordinateSystem && seriesModel.coordinateSystem.type === 'cartesian2d';\n}\n\nfunction isInLargeMode(seriesModel) {\n  return seriesModel.pipelineContext && seriesModel.pipelineContext.large;\n}\n\nfunction getValueAxisStart(baseAxis, valueAxis, stacked) {\n  return zrUtil.indexOf(baseAxis.getAxesOnZeroOf(), valueAxis) >= 0 || stacked ? valueAxis.toGlobalCoord(valueAxis.dataToCoord(0)) : valueAxis.getGlobalExtent()[0];\n}\n\nexports.getLayoutOnAxis = getLayoutOnAxis;\nexports.prepareLayoutBarSeries = prepareLayoutBarSeries;\nexports.makeColumnLayout = makeColumnLayout;\nexports.retrieveColumnLayout = retrieveColumnLayout;\nexports.layout = layout;\nexports.largeLayout = largeLayout;","var textHelper = require(\"../helper/text\");\n\nvar BoundingRect = require(\"../../core/BoundingRect\");\n\n/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\nvar tmpRect = new BoundingRect();\n\nvar RectText = function () {};\n\nRectText.prototype = {\n  constructor: RectText,\n\n  /**\n   * Draw text in a rect with specified position.\n   * @param  {CanvasRenderingContext2D} ctx\n   * @param  {Object} rect Displayable rect\n   */\n  drawRectText: function (ctx, rect) {\n    var style = this.style;\n    rect = style.textRect || rect; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n    var text = style.text; // Convert to string\n\n    text != null && (text += '');\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    } // FIXME\n\n\n    ctx.save(); // Transform rect to view space\n\n    var transform = this.transform;\n\n    if (!style.transformText) {\n      if (transform) {\n        tmpRect.copy(rect);\n        tmpRect.applyTransform(transform);\n        rect = tmpRect;\n      }\n    } else {\n      this.setTransform(ctx);\n    } // transformText and textRotation can not be used at the same time.\n\n\n    textHelper.renderText(this, ctx, text, style, rect);\n    ctx.restore();\n  }\n};\nvar _default = RectText;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisDefault = require(\"./axisDefault\");\n\nvar ComponentModel = require(\"../model/Component\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n\nvar OrdinalMeta = require(\"../data/OrdinalMeta\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME axisType is fixed ?\nvar AXIS_TYPES = ['value', 'category', 'time', 'log'];\n/**\n * Generate sub axis model class\n * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n * @param {module:echarts/model/Component} BaseAxisModelClass\n * @param {Function} axisTypeDefaulter\n * @param {Object} [extraDefaultOption]\n */\n\nfunction _default(axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n  zrUtil.each(AXIS_TYPES, function (axisType) {\n    BaseAxisModelClass.extend({\n      /**\n       * @readOnly\n       */\n      type: axisName + 'Axis.' + axisType,\n      mergeDefaultAndTheme: function (option, ecModel) {\n        var layoutMode = this.layoutMode;\n        var inputPositionParams = layoutMode ? getLayoutParams(option) : {};\n        var themeModel = ecModel.getTheme();\n        zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n        zrUtil.merge(option, this.getDefaultOption());\n        option.type = axisTypeDefaulter(axisName, option);\n\n        if (layoutMode) {\n          mergeLayoutParam(option, inputPositionParams, layoutMode);\n        }\n      },\n\n      /**\n       * @override\n       */\n      optionUpdated: function () {\n        var thisOption = this.option;\n\n        if (thisOption.type === 'category') {\n          this.__ordinalMeta = OrdinalMeta.createByAxisModel(this);\n        }\n      },\n\n      /**\n       * Should not be called before all of 'getInitailData' finished.\n       * Because categories are collected during initializing data.\n       */\n      getCategories: function (rawData) {\n        var option = this.option; // FIXME\n        // warning if called before all of 'getInitailData' finished.\n\n        if (option.type === 'category') {\n          if (rawData) {\n            return option.data;\n          }\n\n          return this.__ordinalMeta.categories;\n        }\n      },\n      getOrdinalMeta: function () {\n        return this.__ordinalMeta;\n      },\n      defaultOption: zrUtil.mergeAll([{}, axisDefault[axisType + 'Axis'], extraDefaultOption], true)\n    });\n  });\n  ComponentModel.registerSubTypeDefaulter(axisName + 'Axis', zrUtil.curry(axisTypeDefaulter, axisName));\n}\n\nmodule.exports = _default;","var _util = require(\"./util\");\n\nvar normalizeRadian = _util.normalizeRadian;\nvar PI2 = Math.PI * 2;\n/**\n * 圆弧描边包含判断\n * @param  {number}  cx\n * @param  {number}  cy\n * @param  {number}  r\n * @param  {number}  startAngle\n * @param  {number}  endAngle\n * @param  {boolean}  anticlockwise\n * @param  {number} lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {Boolean}\n */\n\nfunction containStroke(cx, cy, r, startAngle, endAngle, anticlockwise, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  x -= cx;\n  y -= cy;\n  var d = Math.sqrt(x * x + y * y);\n\n  if (d - _l > r || d + _l < r) {\n    return false;\n  }\n\n  if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n    // Is a circle\n    return true;\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var angle = Math.atan2(y, x);\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle;\n}\n\nexports.containStroke = containStroke;","var _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar map = _util.map;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {Object} coordSys\n * @param {module:echarts/data/List} data\n * @param {string} valueOrigin lineSeries.option.areaStyle.origin\n */\nfunction prepareDataCoordInfo(coordSys, data, valueOrigin) {\n  var baseAxis = coordSys.getBaseAxis();\n  var valueAxis = coordSys.getOtherAxis(baseAxis);\n  var valueStart = getValueStart(valueAxis, valueOrigin);\n  var baseAxisDim = baseAxis.dim;\n  var valueAxisDim = valueAxis.dim;\n  var valueDim = data.mapDimension(valueAxisDim);\n  var baseDim = data.mapDimension(baseAxisDim);\n  var baseDataOffset = valueAxisDim === 'x' || valueAxisDim === 'radius' ? 1 : 0;\n  var dims = map(coordSys.dimensions, function (coordDim) {\n    return data.mapDimension(coordDim);\n  });\n  var stacked;\n  var stackResultDim = data.getCalculationInfo('stackResultDimension');\n\n  if (stacked |= isDimensionStacked(data, dims[0]\n  /*, dims[1]*/\n  )) {\n    // jshint ignore:line\n    dims[0] = stackResultDim;\n  }\n\n  if (stacked |= isDimensionStacked(data, dims[1]\n  /*, dims[0]*/\n  )) {\n    // jshint ignore:line\n    dims[1] = stackResultDim;\n  }\n\n  return {\n    dataDimsForPoint: dims,\n    valueStart: valueStart,\n    valueAxisDim: valueAxisDim,\n    baseAxisDim: baseAxisDim,\n    stacked: !!stacked,\n    valueDim: valueDim,\n    baseDim: baseDim,\n    baseDataOffset: baseDataOffset,\n    stackedOverDimension: data.getCalculationInfo('stackedOverDimension')\n  };\n}\n\nfunction getValueStart(valueAxis, valueOrigin) {\n  var valueStart = 0;\n  var extent = valueAxis.scale.getExtent();\n\n  if (valueOrigin === 'start') {\n    valueStart = extent[0];\n  } else if (valueOrigin === 'end') {\n    valueStart = extent[1];\n  } // auto\n  else {\n      // Both positive\n      if (extent[0] > 0) {\n        valueStart = extent[0];\n      } // Both negative\n      else if (extent[1] < 0) {\n          valueStart = extent[1];\n        } // If is one positive, and one negative, onZero shall be true\n\n    }\n\n  return valueStart;\n}\n\nfunction getStackedOnPoint(dataCoordInfo, coordSys, data, idx) {\n  var value = NaN;\n\n  if (dataCoordInfo.stacked) {\n    value = data.get(data.getCalculationInfo('stackedOverDimension'), idx);\n  }\n\n  if (isNaN(value)) {\n    value = dataCoordInfo.valueStart;\n  }\n\n  var baseDataOffset = dataCoordInfo.baseDataOffset;\n  var stackedData = [];\n  stackedData[baseDataOffset] = data.get(dataCoordInfo.baseDim, idx);\n  stackedData[1 - baseDataOffset] = value;\n  return coordSys.dataToPoint(stackedData);\n}\n\nexports.prepareDataCoordInfo = prepareDataCoordInfo;\nexports.getStackedOnPoint = getStackedOnPoint;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"./graphic\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Symbol factory\n\n/**\n * Triangle shape\n * @inner\n */\nvar Triangle = graphic.extendShape({\n  type: 'triangle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy + height);\n    path.lineTo(cx - width, cy + height);\n    path.closePath();\n  }\n});\n/**\n * Diamond shape\n * @inner\n */\n\nvar Diamond = graphic.extendShape({\n  type: 'diamond',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy);\n    path.lineTo(cx, cy + height);\n    path.lineTo(cx - width, cy);\n    path.closePath();\n  }\n});\n/**\n * Pin shape\n * @inner\n */\n\nvar Pin = graphic.extendShape({\n  type: 'pin',\n  shape: {\n    // x, y on the cusp\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var w = shape.width / 5 * 3; // Height must be larger than width\n\n    var h = Math.max(w, shape.height);\n    var r = w / 2; // Dist on y with tangent point and circle center\n\n    var dy = r * r / (h - r);\n    var cy = y - h + r + dy;\n    var angle = Math.asin(dy / r); // Dist on x with tangent point and circle center\n\n    var dx = Math.cos(angle) * r;\n    var tanX = Math.sin(angle);\n    var tanY = Math.cos(angle);\n    var cpLen = r * 0.6;\n    var cpLen2 = r * 0.7;\n    path.moveTo(x - dx, cy + dy);\n    path.arc(x, cy, r, Math.PI - angle, Math.PI * 2 + angle);\n    path.bezierCurveTo(x + dx - tanX * cpLen, cy + dy + tanY * cpLen, x, y - cpLen2, x, y);\n    path.bezierCurveTo(x, y - cpLen2, x - dx + tanX * cpLen, cy + dy + tanY * cpLen, x - dx, cy + dy);\n    path.closePath();\n  }\n});\n/**\n * Arrow shape\n * @inner\n */\n\nvar Arrow = graphic.extendShape({\n  type: 'arrow',\n  shape: {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var height = shape.height;\n    var width = shape.width;\n    var x = shape.x;\n    var y = shape.y;\n    var dx = width / 3 * 2;\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + dx, y + height);\n    ctx.lineTo(x, y + height / 4 * 3);\n    ctx.lineTo(x - dx, y + height);\n    ctx.lineTo(x, y);\n    ctx.closePath();\n  }\n});\n/**\n * Map of path contructors\n * @type {Object.<string, module:zrender/graphic/Path>}\n */\n\nvar symbolCtors = {\n  line: graphic.Line,\n  rect: graphic.Rect,\n  roundRect: graphic.Rect,\n  square: graphic.Rect,\n  circle: graphic.Circle,\n  diamond: Diamond,\n  pin: Pin,\n  arrow: Arrow,\n  triangle: Triangle\n};\nvar symbolShapeMakers = {\n  line: function (x, y, w, h, shape) {\n    // FIXME\n    shape.x1 = x;\n    shape.y1 = y + h / 2;\n    shape.x2 = x + w;\n    shape.y2 = y + h / 2;\n  },\n  rect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n  },\n  roundRect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n    shape.r = Math.min(w, h) / 4;\n  },\n  square: function (x, y, w, h, shape) {\n    var size = Math.min(w, h);\n    shape.x = x;\n    shape.y = y;\n    shape.width = size;\n    shape.height = size;\n  },\n  circle: function (x, y, w, h, shape) {\n    // Put circle in the center of square\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.r = Math.min(w, h) / 2;\n  },\n  diamond: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  pin: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  arrow: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  triangle: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  }\n};\nvar symbolBuildProxies = {};\nzrUtil.each(symbolCtors, function (Ctor, name) {\n  symbolBuildProxies[name] = new Ctor();\n});\nvar SymbolClz = graphic.extendShape({\n  type: 'symbol',\n  shape: {\n    symbolType: '',\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  beforeBrush: function () {\n    var style = this.style;\n    var shape = this.shape; // FIXME\n\n    if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n      style.textPosition = ['50%', '40%'];\n      style.textAlign = 'center';\n      style.textVerticalAlign = 'middle';\n    }\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    var symbolType = shape.symbolType;\n    var proxySymbol = symbolBuildProxies[symbolType];\n\n    if (shape.symbolType !== 'none') {\n      if (!proxySymbol) {\n        // Default rect\n        symbolType = 'rect';\n        proxySymbol = symbolBuildProxies[symbolType];\n      }\n\n      symbolShapeMakers[symbolType](shape.x, shape.y, shape.width, shape.height, proxySymbol.shape);\n      proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n    }\n  }\n}); // Provide setColor helper method to avoid determine if set the fill or stroke outside\n\nfunction symbolPathSetColor(color, innerColor) {\n  if (this.type !== 'image') {\n    var symbolStyle = this.style;\n    var symbolShape = this.shape;\n\n    if (symbolShape && symbolShape.symbolType === 'line') {\n      symbolStyle.stroke = color;\n    } else if (this.__isEmptyBrush) {\n      symbolStyle.stroke = color;\n      symbolStyle.fill = innerColor || '#fff';\n    } else {\n      // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n      symbolStyle.fill && (symbolStyle.fill = color);\n      symbolStyle.stroke && (symbolStyle.stroke = color);\n    }\n\n    this.dirty(false);\n  }\n}\n/**\n * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n * @param {string} symbolType\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @param {string} color\n * @param {boolean} [keepAspect=false] whether to keep the ratio of w/h,\n *                            for path and image only.\n */\n\n\nfunction createSymbol(symbolType, x, y, w, h, color, keepAspect) {\n  // TODO Support image object, DynamicImage.\n  var isEmpty = symbolType.indexOf('empty') === 0;\n\n  if (isEmpty) {\n    symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n  }\n\n  var symbolPath;\n\n  if (symbolType.indexOf('image://') === 0) {\n    symbolPath = graphic.makeImage(symbolType.slice(8), new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else if (symbolType.indexOf('path://') === 0) {\n    symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else {\n    symbolPath = new SymbolClz({\n      shape: {\n        symbolType: symbolType,\n        x: x,\n        y: y,\n        width: w,\n        height: h\n      }\n    });\n  }\n\n  symbolPath.__isEmptyBrush = isEmpty;\n  symbolPath.setColor = symbolPathSetColor;\n  symbolPath.setColor(color);\n  return symbolPath;\n}\n\nexports.createSymbol = createSymbol;","var _util = require(\"../../core/util\");\n\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar each = _util.each;\nvar normalizeCssArray = _util.normalizeCssArray;\nvar isString = _util.isString;\nvar isObject = _util.isObject;\n\nvar textContain = require(\"../../contain/text\");\n\nvar roundRectHelper = require(\"./roundRect\");\n\nvar imageHelper = require(\"./image\");\n\nvar fixShadow = require(\"./fixShadow\");\n\n// TODO: Have not support 'start', 'end' yet.\nvar VALID_TEXT_ALIGN = {\n  left: 1,\n  right: 1,\n  center: 1\n};\nvar VALID_TEXT_VERTICAL_ALIGN = {\n  top: 1,\n  bottom: 1,\n  middle: 1\n};\n/**\n * @param {module:zrender/graphic/Style} style\n * @return {module:zrender/graphic/Style} The input style.\n */\n\nfunction normalizeTextStyle(style) {\n  normalizeStyle(style);\n  each(style.rich, normalizeStyle);\n  return style;\n}\n\nfunction normalizeStyle(style) {\n  if (style) {\n    style.font = textContain.makeFont(style);\n    var textAlign = style.textAlign;\n    textAlign === 'middle' && (textAlign = 'center');\n    style.textAlign = textAlign == null || VALID_TEXT_ALIGN[textAlign] ? textAlign : 'left'; // Compatible with textBaseline.\n\n    var textVerticalAlign = style.textVerticalAlign || style.textBaseline;\n    textVerticalAlign === 'center' && (textVerticalAlign = 'middle');\n    style.textVerticalAlign = textVerticalAlign == null || VALID_TEXT_VERTICAL_ALIGN[textVerticalAlign] ? textVerticalAlign : 'top';\n    var textPadding = style.textPadding;\n\n    if (textPadding) {\n      style.textPadding = normalizeCssArray(style.textPadding);\n    }\n  }\n}\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {string} text\n * @param {module:zrender/graphic/Style} style\n * @param {Object|boolean} [rect] {x, y, width, height}\n *                  If set false, rect text is not used.\n */\n\n\nfunction renderText(hostEl, ctx, text, style, rect) {\n  style.rich ? renderRichText(hostEl, ctx, text, style, rect) : renderPlainText(hostEl, ctx, text, style, rect);\n}\n\nfunction renderPlainText(hostEl, ctx, text, style, rect) {\n  var font = setCtx(ctx, 'font', style.font || textContain.DEFAULT_FONT);\n  var textPadding = style.textPadding;\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parsePlainText(text, font, textPadding, style.truncate);\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var textLines = contentBlock.lines;\n  var lineHeight = contentBlock.lineHeight;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var textX = baseX;\n  var textY = boxY;\n  var needDrawBg = needDrawBackground(style);\n\n  if (needDrawBg || textPadding) {\n    // Consider performance, do not call getTextWidth util necessary.\n    var textWidth = textContain.getWidth(text, font);\n    var outerWidth = textWidth;\n    textPadding && (outerWidth += textPadding[1] + textPadding[3]);\n    var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n    needDrawBg && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n    if (textPadding) {\n      textX = getTextXForPadding(baseX, textAlign, textPadding);\n      textY += textPadding[0];\n    }\n  }\n\n  setCtx(ctx, 'textAlign', textAlign || 'left'); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle'); // Always set shadowBlur and shadowOffset to avoid leak from displayable.\n\n  setCtx(ctx, 'shadowBlur', style.textShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textShadowOffsetY || 0); // `textBaseline` is set as 'middle'.\n\n  textY += lineHeight / 2;\n  var textStrokeWidth = style.textStrokeWidth;\n  var textStroke = getStroke(style.textStroke, textStrokeWidth);\n  var textFill = getFill(style.textFill);\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n  }\n\n  for (var i = 0; i < textLines.length; i++) {\n    // Fill after stroke so the outline will not cover the main part.\n    textStroke && ctx.strokeText(textLines[i], textX, textY);\n    textFill && ctx.fillText(textLines[i], textX, textY);\n    textY += lineHeight;\n  }\n}\n\nfunction renderRichText(hostEl, ctx, text, style, rect) {\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parseRichText(text, style);\n  }\n\n  drawRichText(hostEl, ctx, contentBlock, style, rect);\n}\n\nfunction drawRichText(hostEl, ctx, contentBlock, style, rect) {\n  var contentWidth = contentBlock.width;\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var textPadding = style.textPadding;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var xLeft = boxX;\n  var lineTop = boxY;\n\n  if (textPadding) {\n    xLeft += textPadding[3];\n    lineTop += textPadding[0];\n  }\n\n  var xRight = xLeft + contentWidth;\n  needDrawBackground(style) && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n  for (var i = 0; i < contentBlock.lines.length; i++) {\n    var line = contentBlock.lines[i];\n    var tokens = line.tokens;\n    var tokenCount = tokens.length;\n    var lineHeight = line.lineHeight;\n    var usedWidth = line.width;\n    var leftIndex = 0;\n    var lineXLeft = xLeft;\n    var lineXRight = xRight;\n    var rightIndex = tokenCount - 1;\n    var token;\n\n    while (leftIndex < tokenCount && (token = tokens[leftIndex], !token.textAlign || token.textAlign === 'left')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft, 'left');\n      usedWidth -= token.width;\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    while (rightIndex >= 0 && (token = tokens[rightIndex], token.textAlign === 'right')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXRight, 'right');\n      usedWidth -= token.width;\n      lineXRight -= token.width;\n      rightIndex--;\n    } // The other tokens are placed as textAlign 'center' if there is enough space.\n\n\n    lineXLeft += (contentWidth - (lineXLeft - xLeft) - (xRight - lineXRight) - usedWidth) / 2;\n\n    while (leftIndex <= rightIndex) {\n      token = tokens[leftIndex]; // Consider width specified by user, use 'center' rather than 'left'.\n\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft + token.width / 2, 'center');\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    lineTop += lineHeight;\n  }\n}\n\nfunction applyTextRotation(ctx, style, rect, x, y) {\n  // textRotation only apply in RectText.\n  if (rect && style.textRotation) {\n    var origin = style.textOrigin;\n\n    if (origin === 'center') {\n      x = rect.width / 2 + rect.x;\n      y = rect.height / 2 + rect.y;\n    } else if (origin) {\n      x = origin[0] + rect.x;\n      y = origin[1] + rect.y;\n    }\n\n    ctx.translate(x, y); // Positive: anticlockwise\n\n    ctx.rotate(-style.textRotation);\n    ctx.translate(-x, -y);\n  }\n}\n\nfunction placeToken(hostEl, ctx, token, style, lineHeight, lineTop, x, textAlign) {\n  var tokenStyle = style.rich[token.styleName] || {}; // 'ctx.textBaseline' is always set as 'middle', for sake of\n  // the bias of \"Microsoft YaHei\".\n\n  var textVerticalAlign = token.textVerticalAlign;\n  var y = lineTop + lineHeight / 2;\n\n  if (textVerticalAlign === 'top') {\n    y = lineTop + token.height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y = lineTop + lineHeight - token.height / 2;\n  }\n\n  !token.isLineHolder && needDrawBackground(tokenStyle) && drawBackground(hostEl, ctx, tokenStyle, textAlign === 'right' ? x - token.width : textAlign === 'center' ? x - token.width / 2 : x, y - token.height / 2, token.width, token.height);\n  var textPadding = token.textPadding;\n\n  if (textPadding) {\n    x = getTextXForPadding(x, textAlign, textPadding);\n    y -= token.height / 2 - textPadding[2] - token.textHeight / 2;\n  }\n\n  setCtx(ctx, 'shadowBlur', retrieve3(tokenStyle.textShadowBlur, style.textShadowBlur, 0));\n  setCtx(ctx, 'shadowColor', tokenStyle.textShadowColor || style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', retrieve3(tokenStyle.textShadowOffsetX, style.textShadowOffsetX, 0));\n  setCtx(ctx, 'shadowOffsetY', retrieve3(tokenStyle.textShadowOffsetY, style.textShadowOffsetY, 0));\n  setCtx(ctx, 'textAlign', textAlign); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle');\n  setCtx(ctx, 'font', token.font || textContain.DEFAULT_FONT);\n  var textStroke = getStroke(tokenStyle.textStroke || style.textStroke, textStrokeWidth);\n  var textFill = getFill(tokenStyle.textFill || style.textFill);\n  var textStrokeWidth = retrieve2(tokenStyle.textStrokeWidth, style.textStrokeWidth); // Fill after stroke so the outline will not cover the main part.\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n    ctx.strokeText(token.text, x, y);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n    ctx.fillText(token.text, x, y);\n  }\n}\n\nfunction needDrawBackground(style) {\n  return style.textBackgroundColor || style.textBorderWidth && style.textBorderColor;\n} // style: {textBackgroundColor, textBorderWidth, textBorderColor, textBorderRadius}\n// shape: {x, y, width, height}\n\n\nfunction drawBackground(hostEl, ctx, style, x, y, width, height) {\n  var textBackgroundColor = style.textBackgroundColor;\n  var textBorderWidth = style.textBorderWidth;\n  var textBorderColor = style.textBorderColor;\n  var isPlainBg = isString(textBackgroundColor);\n  setCtx(ctx, 'shadowBlur', style.textBoxShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textBoxShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textBoxShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textBoxShadowOffsetY || 0);\n\n  if (isPlainBg || textBorderWidth && textBorderColor) {\n    ctx.beginPath();\n    var textBorderRadius = style.textBorderRadius;\n\n    if (!textBorderRadius) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height,\n        r: textBorderRadius\n      });\n    }\n\n    ctx.closePath();\n  }\n\n  if (isPlainBg) {\n    setCtx(ctx, 'fillStyle', textBackgroundColor);\n    ctx.fill();\n  } else if (isObject(textBackgroundColor)) {\n    var image = textBackgroundColor.image;\n    image = imageHelper.createOrUpdateImage(image, null, hostEl, onBgImageLoaded, textBackgroundColor);\n\n    if (image && imageHelper.isImageReady(image)) {\n      ctx.drawImage(image, x, y, width, height);\n    }\n  }\n\n  if (textBorderWidth && textBorderColor) {\n    setCtx(ctx, 'lineWidth', textBorderWidth);\n    setCtx(ctx, 'strokeStyle', textBorderColor);\n    ctx.stroke();\n  }\n}\n\nfunction onBgImageLoaded(image, textBackgroundColor) {\n  // Replace image, so that `contain/text.js#parseRichText`\n  // will get correct result in next tick.\n  textBackgroundColor.image = image;\n}\n\nfunction getBoxPosition(blockHeiht, style, rect) {\n  var baseX = style.x || 0;\n  var baseY = style.y || 0;\n  var textAlign = style.textAlign;\n  var textVerticalAlign = style.textVerticalAlign; // Text position represented by coord\n\n  if (rect) {\n    var textPosition = style.textPosition;\n\n    if (textPosition instanceof Array) {\n      // Percent\n      baseX = rect.x + parsePercent(textPosition[0], rect.width);\n      baseY = rect.y + parsePercent(textPosition[1], rect.height);\n    } else {\n      var res = textContain.adjustTextPositionOnRect(textPosition, rect, style.textDistance);\n      baseX = res.x;\n      baseY = res.y; // Default align and baseline when has textPosition\n\n      textAlign = textAlign || res.textAlign;\n      textVerticalAlign = textVerticalAlign || res.textVerticalAlign;\n    } // textOffset is only support in RectText, otherwise\n    // we have to adjust boundingRect for textOffset.\n\n\n    var textOffset = style.textOffset;\n\n    if (textOffset) {\n      baseX += textOffset[0];\n      baseY += textOffset[1];\n    }\n  }\n\n  return {\n    baseX: baseX,\n    baseY: baseY,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction setCtx(ctx, prop, value) {\n  ctx[prop] = fixShadow(ctx, prop, value);\n  return ctx[prop];\n}\n/**\n * @param {string} [stroke] If specified, do not check style.textStroke.\n * @param {string} [lineWidth] If specified, do not check style.textStroke.\n * @param {number} style\n */\n\n\nfunction getStroke(stroke, lineWidth) {\n  return stroke == null || lineWidth <= 0 || stroke === 'transparent' || stroke === 'none' ? null // TODO pattern and gradient?\n  : stroke.image || stroke.colorStops ? '#000' : stroke;\n}\n\nfunction getFill(fill) {\n  return fill == null || fill === 'none' ? null // TODO pattern and gradient?\n  : fill.image || fill.colorStops ? '#000' : fill;\n}\n\nfunction parsePercent(value, maxValue) {\n  if (typeof value === 'string') {\n    if (value.lastIndexOf('%') >= 0) {\n      return parseFloat(value) / 100 * maxValue;\n    }\n\n    return parseFloat(value);\n  }\n\n  return value;\n}\n\nfunction getTextXForPadding(x, textAlign, textPadding) {\n  return textAlign === 'right' ? x - textPadding[1] : textAlign === 'center' ? x + textPadding[3] / 2 - textPadding[1] / 2 : x + textPadding[3];\n}\n/**\n * @param {string} text\n * @param {module:zrender/Style} style\n * @return {boolean}\n */\n\n\nfunction needDrawText(text, style) {\n  return text != null && (text || style.textBackgroundColor || style.textBorderWidth && style.textBorderColor || style.textPadding);\n}\n\nexports.normalizeTextStyle = normalizeTextStyle;\nexports.renderText = renderText;\nexports.getStroke = getStroke;\nexports.getFill = getFill;\nexports.needDrawText = needDrawText;","var echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendComponentModel({\n  type: 'tooltip',\n  dependencies: ['axisPointer'],\n  defaultOption: {\n    zlevel: 0,\n    z: 8,\n    show: true,\n    // tooltip主体内容\n    showContent: true,\n    // 'trigger' only works on coordinate system.\n    // 'item' | 'axis' | 'none'\n    trigger: 'item',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: 'mousemove|click',\n    alwaysShowContent: false,\n    displayMode: 'single',\n    // 'single' | 'multipleByCoordSys'\n    // 位置 {Array} | {Function}\n    // position: null\n    // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n    // align: null,\n    // verticalAlign: null,\n    // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n    confine: false,\n    // 内容格式器：{string}（Template） ¦ {Function}\n    // formatter: null\n    showDelay: 0,\n    // 隐藏延迟，单位ms\n    hideDelay: 100,\n    // 动画变换时间，单位s\n    transitionDuration: 0.4,\n    enterable: false,\n    // 提示背景颜色，默认为透明度为0.7的黑色\n    backgroundColor: 'rgba(50,50,50,0.7)',\n    // 提示边框颜色\n    borderColor: '#333',\n    // 提示边框圆角，单位px，默认为4\n    borderRadius: 4,\n    // 提示边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 提示内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // Extra css text\n    extraCssText: '',\n    // 坐标轴指示器，坐标轴触发有效\n    axisPointer: {\n      // 默认为直线\n      // 可选为：'line' | 'shadow' | 'cross'\n      type: 'line',\n      // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n      // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n      // 默认 'auto'，会选择类型为 category 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n      // 极坐标系会默认选择 angle 轴\n      axis: 'auto',\n      animation: 'auto',\n      animationDurationUpdate: 200,\n      animationEasingUpdate: 'exponentialOut',\n      crossStyle: {\n        color: '#999',\n        width: 1,\n        type: 'dashed',\n        // TODO formatter\n        textStyle: {} // lineStyle and shadowStyle should not be specified here,\n        // otherwise it will always override those styles on option.axisPointer.\n\n      }\n    },\n    textStyle: {\n      color: '#fff',\n      fontSize: 14\n    }\n  }\n});\n\nmodule.exports = _default;","var Path = require(\"../Path\");\n\nvar vec2 = require(\"../../core/vector\");\n\nvar _curve = require(\"../../core/curve\");\n\nvar quadraticSubdivide = _curve.quadraticSubdivide;\nvar cubicSubdivide = _curve.cubicSubdivide;\nvar quadraticAt = _curve.quadraticAt;\nvar cubicAt = _curve.cubicAt;\nvar quadraticDerivativeAt = _curve.quadraticDerivativeAt;\nvar cubicDerivativeAt = _curve.cubicDerivativeAt;\n\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\nvar out = [];\n\nfunction someVectorAt(shape, t, isTangent) {\n  var cpx2 = shape.cpx2;\n  var cpy2 = shape.cpy2;\n\n  if (cpx2 === null || cpy2 === null) {\n    return [(isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t), (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)];\n  } else {\n    return [(isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t), (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)];\n  }\n}\n\nvar _default = Path.extend({\n  type: 'bezier-curve',\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    cpx1: 0,\n    cpy1: 0,\n    // cpx2: 0,\n    // cpy2: 0\n    // Curve show percent, for animating\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var cpx1 = shape.cpx1;\n    var cpy1 = shape.cpy1;\n    var cpx2 = shape.cpx2;\n    var cpy2 = shape.cpy2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (cpx2 == null || cpy2 == null) {\n      if (percent < 1) {\n        quadraticSubdivide(x1, cpx1, x2, percent, out);\n        cpx1 = out[1];\n        x2 = out[2];\n        quadraticSubdivide(y1, cpy1, y2, percent, out);\n        cpy1 = out[1];\n        y2 = out[2];\n      }\n\n      ctx.quadraticCurveTo(cpx1, cpy1, x2, y2);\n    } else {\n      if (percent < 1) {\n        cubicSubdivide(x1, cpx1, cpx2, x2, percent, out);\n        cpx1 = out[1];\n        cpx2 = out[2];\n        x2 = out[3];\n        cubicSubdivide(y1, cpy1, cpy2, y2, percent, out);\n        cpy1 = out[1];\n        cpy2 = out[2];\n        y2 = out[3];\n      }\n\n      ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n    }\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  pointAt: function (t) {\n    return someVectorAt(this.shape, t, false);\n  },\n\n  /**\n   * Get tangent at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  tangentAt: function (t) {\n    var p = someVectorAt(this.shape, t, true);\n    return vec2.normalize(p, p);\n  }\n});\n\nmodule.exports = _default;","import mod from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../../../node_modules/css-loader/index.js??ref--10-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/lib/index.js??ref--10-oneOf-1-2!../../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./home.vue?vue&type=style&index=0&lang=less&\"; export default mod; export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../../../node_modules/css-loader/index.js??ref--10-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/lib/index.js??ref--10-oneOf-1-2!../../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./home.vue?vue&type=style&index=0&lang=less&\"","require(\"../coord/cartesian/AxisModel\");\n\nrequire(\"./axis/CartesianAxisView\");","var util = require(\"./core/util\");\n\nvar env = require(\"./core/env\");\n\nvar Group = require(\"./container/Group\");\n\nvar timsort = require(\"./core/timsort\");\n\n// Use timsort because in most case elements are partially sorted\n// https://jsfiddle.net/pissang/jr4x7mdm/8/\nfunction shapeCompareFunc(a, b) {\n  if (a.zlevel === b.zlevel) {\n    if (a.z === b.z) {\n      // if (a.z2 === b.z2) {\n      //     // FIXME Slow has renderidx compare\n      //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n      //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n      //     return a.__renderidx - b.__renderidx;\n      // }\n      return a.z2 - b.z2;\n    }\n\n    return a.z - b.z;\n  }\n\n  return a.zlevel - b.zlevel;\n}\n/**\n * 内容仓库 (M)\n * @alias module:zrender/Storage\n * @constructor\n */\n\n\nvar Storage = function () {\n  // jshint ignore:line\n  this._roots = [];\n  this._displayList = [];\n  this._displayListLen = 0;\n};\n\nStorage.prototype = {\n  constructor: Storage,\n\n  /**\n   * @param  {Function} cb\n   *\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._roots.length; i++) {\n      this._roots[i].traverse(cb, context);\n    }\n  },\n\n  /**\n   * 返回所有图形的绘制队列\n   * @param {boolean} [update=false] 是否在返回前更新该数组\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n   *\n   * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n   * @return {Array.<module:zrender/graphic/Displayable>}\n   */\n  getDisplayList: function (update, includeIgnore) {\n    includeIgnore = includeIgnore || false;\n\n    if (update) {\n      this.updateDisplayList(includeIgnore);\n    }\n\n    return this._displayList;\n  },\n\n  /**\n   * 更新图形的绘制队列。\n   * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n   * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n   */\n  updateDisplayList: function (includeIgnore) {\n    this._displayListLen = 0;\n    var roots = this._roots;\n    var displayList = this._displayList;\n\n    for (var i = 0, len = roots.length; i < len; i++) {\n      this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n    }\n\n    displayList.length = this._displayListLen;\n    env.canvasSupported && timsort(displayList, shapeCompareFunc);\n  },\n  _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n    if (el.ignore && !includeIgnore) {\n      return;\n    }\n\n    el.beforeUpdate();\n\n    if (el.__dirty) {\n      el.update();\n    }\n\n    el.afterUpdate();\n    var userSetClipPath = el.clipPath;\n\n    if (userSetClipPath) {\n      // FIXME 效率影响\n      if (clipPaths) {\n        clipPaths = clipPaths.slice();\n      } else {\n        clipPaths = [];\n      }\n\n      var currentClipPath = userSetClipPath;\n      var parentClipPath = el; // Recursively add clip path\n\n      while (currentClipPath) {\n        // clipPath 的变换是基于使用这个 clipPath 的元素\n        currentClipPath.parent = parentClipPath;\n        currentClipPath.updateTransform();\n        clipPaths.push(currentClipPath);\n        parentClipPath = currentClipPath;\n        currentClipPath = currentClipPath.clipPath;\n      }\n    }\n\n    if (el.isGroup) {\n      var children = el._children;\n\n      for (var i = 0; i < children.length; i++) {\n        var child = children[i]; // Force to mark as dirty if group is dirty\n        // FIXME __dirtyPath ?\n\n        if (el.__dirty) {\n          child.__dirty = true;\n        }\n\n        this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n      } // Mark group clean here\n\n\n      el.__dirty = false;\n    } else {\n      el.__clipPaths = clipPaths;\n      this._displayList[this._displayListLen++] = el;\n    }\n  },\n\n  /**\n   * 添加图形(Shape)或者组(Group)到根节点\n   * @param {module:zrender/Element} el\n   */\n  addRoot: function (el) {\n    if (el.__storage === this) {\n      return;\n    }\n\n    if (el instanceof Group) {\n      el.addChildrenToStorage(this);\n    }\n\n    this.addToStorage(el);\n\n    this._roots.push(el);\n  },\n\n  /**\n   * 删除指定的图形(Shape)或者组(Group)\n   * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n   */\n  delRoot: function (el) {\n    if (el == null) {\n      // 不指定el清空\n      for (var i = 0; i < this._roots.length; i++) {\n        var root = this._roots[i];\n\n        if (root instanceof Group) {\n          root.delChildrenFromStorage(this);\n        }\n      }\n\n      this._roots = [];\n      this._displayList = [];\n      this._displayListLen = 0;\n      return;\n    }\n\n    if (el instanceof Array) {\n      for (var i = 0, l = el.length; i < l; i++) {\n        this.delRoot(el[i]);\n      }\n\n      return;\n    }\n\n    var idx = util.indexOf(this._roots, el);\n\n    if (idx >= 0) {\n      this.delFromStorage(el);\n\n      this._roots.splice(idx, 1);\n\n      if (el instanceof Group) {\n        el.delChildrenFromStorage(this);\n      }\n    }\n  },\n  addToStorage: function (el) {\n    if (el) {\n      el.__storage = this;\n      el.dirty(false);\n    }\n\n    return this;\n  },\n  delFromStorage: function (el) {\n    if (el) {\n      el.__storage = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * 清空并且释放Storage\n   */\n  dispose: function () {\n    this._renderList = this._roots = null;\n  },\n  displayableSortFunc: shapeCompareFunc\n};\nvar _default = Storage;\nmodule.exports = _default;","var Group = require(\"zrender/lib/container/Group\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar Component = function () {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewComponent');\n};\n\nComponent.prototype = {\n  constructor: Component,\n  init: function (ecModel, api) {},\n  render: function (componentModel, ecModel, api, payload) {},\n  dispose: function () {}\n};\nvar componentProto = Component.prototype;\n\ncomponentProto.updateView = componentProto.updateLayout = componentProto.updateVisual = function (seriesModel, ecModel, api, payload) {// Do nothing;\n}; // Enable Component.extend.\n\n\nclazzUtil.enableClassExtend(Component); // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Component, {\n  registerWhenExtend: true\n});\nvar _default = Component;\nmodule.exports = _default;","var completeDimensions = require(\"./completeDimensions\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Substitute `completeDimensions`.\n * `completeDimensions` is to be deprecated.\n */\n\n/**\n * @param {module:echarts/data/Source|module:echarts/data/List} source or data.\n * @param {Object|Array} [opt]\n * @param {Array.<string|Object>} [opt.coordDimensions=[]]\n * @param {number} [opt.dimensionsCount]\n * @param {string} [opt.generateCoord]\n * @param {string} [opt.generateCoordCount]\n * @param {Array.<string|Object>} [opt.dimensionsDefine=source.dimensionsDefine] Overwrite source define.\n * @param {Object|HashMap} [opt.encodeDefine=source.encodeDefine] Overwrite source define.\n * @return {Array.<Object>} dimensionsInfo\n */\nfunction _default(source, opt) {\n  opt = opt || {};\n  return completeDimensions(opt.coordDimensions || [], source, {\n    dimsDef: opt.dimensionsDefine || source.dimensionsDefine,\n    encodeDef: opt.encodeDefine || source.encodeDefine,\n    dimCount: opt.dimensionsCount,\n    generateCoord: opt.generateCoord,\n    generateCoordCount: opt.generateCoordCount\n  });\n}\n\nmodule.exports = _default;","var makeStyleMapper = require(\"../../model/mixin/makeStyleMapper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar getBarItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], // Compatitable with 2\n['stroke', 'barBorderColor'], ['lineWidth', 'barBorderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\nvar _default = {\n  getBarItemStyle: function (excludes) {\n    var style = getBarItemStyle(this, excludes);\n\n    if (this.getBorderLineDash) {\n      var lineDash = this.getBorderLineDash();\n      lineDash && (style.lineDash = lineDash);\n    }\n\n    return style;\n  }\n};\nmodule.exports = _default;","var zrender = require(\"zrender/lib/zrender\");\n\nexports.zrender = zrender;\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nexports.matrix = matrix;\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nexports.vector = vector;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nexports.color = colorTool;\n\nvar graphic = require(\"./util/graphic\");\n\nexports.graphic = graphic;\n\nvar numberUtil = require(\"./util/number\");\n\nexports.number = numberUtil;\n\nvar formatUtil = require(\"./util/format\");\n\nexports.format = formatUtil;\n\nvar _throttle = require(\"./util/throttle\");\n\nvar throttle = _throttle.throttle;\nexports.throttle = _throttle.throttle;\n\nvar ecHelper = require(\"./helper\");\n\nexports.helper = ecHelper;\n\nvar parseGeoJSON = require(\"./coord/geo/parseGeoJson\");\n\nexports.parseGeoJSON = parseGeoJSON;\n\nvar _List = require(\"./data/List\");\n\nexports.List = _List;\n\nvar _Model = require(\"./model/Model\");\n\nexports.Model = _Model;\n\nvar _Axis = require(\"./coord/Axis\");\n\nexports.Axis = _Axis;\n\nvar _env = require(\"zrender/lib/core/env\");\n\nexports.env = _env;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Do not mount those modules on 'src/echarts' for better tree shaking.\n */\nvar parseGeoJson = parseGeoJSON;\nvar ecUtil = {};\nzrUtil.each(['map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter', 'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction', 'extend', 'defaults', 'clone', 'merge'], function (name) {\n  ecUtil[name] = zrUtil[name];\n});\nexports.parseGeoJson = parseGeoJson;\nexports.util = ecUtil;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar lang = require(\"../lang\");\n\nvar _dataProvider = require(\"../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(dom, ecModel) {\n  var ariaModel = ecModel.getModel('aria');\n\n  if (!ariaModel.get('show')) {\n    return;\n  } else if (ariaModel.get('description')) {\n    dom.setAttribute('aria-label', ariaModel.get('description'));\n    return;\n  }\n\n  var seriesCnt = 0;\n  ecModel.eachSeries(function (seriesModel, idx) {\n    ++seriesCnt;\n  }, this);\n  var maxDataCnt = ariaModel.get('data.maxCount') || 10;\n  var maxSeriesCnt = ariaModel.get('series.maxCount') || 10;\n  var displaySeriesCnt = Math.min(seriesCnt, maxSeriesCnt);\n  var ariaLabel;\n\n  if (seriesCnt < 1) {\n    // No series, no aria label\n    return;\n  } else {\n    var title = getTitle();\n\n    if (title) {\n      ariaLabel = replace(getConfig('general.withTitle'), {\n        title: title\n      });\n    } else {\n      ariaLabel = getConfig('general.withoutTitle');\n    }\n\n    var seriesLabels = [];\n    var prefix = seriesCnt > 1 ? 'series.multiple.prefix' : 'series.single.prefix';\n    ariaLabel += replace(getConfig(prefix), {\n      seriesCount: seriesCnt\n    });\n    ecModel.eachSeries(function (seriesModel, idx) {\n      if (idx < displaySeriesCnt) {\n        var seriesLabel;\n        var seriesName = seriesModel.get('name');\n        var seriesTpl = 'series.' + (seriesCnt > 1 ? 'multiple' : 'single') + '.';\n        seriesLabel = getConfig(seriesName ? seriesTpl + 'withName' : seriesTpl + 'withoutName');\n        seriesLabel = replace(seriesLabel, {\n          seriesId: seriesModel.seriesIndex,\n          seriesName: seriesModel.get('name'),\n          seriesType: getSeriesTypeName(seriesModel.subType)\n        });\n        var data = seriesModel.getData();\n        window.data = data;\n\n        if (data.count() > maxDataCnt) {\n          // Show part of data\n          seriesLabel += replace(getConfig('data.partialData'), {\n            displayCnt: maxDataCnt\n          });\n        } else {\n          seriesLabel += getConfig('data.allData');\n        }\n\n        var dataLabels = [];\n\n        for (var i = 0; i < data.count(); i++) {\n          if (i < maxDataCnt) {\n            var name = data.getName(i);\n            var value = retrieveRawValue(data, i);\n            dataLabels.push(replace(name ? getConfig('data.withName') : getConfig('data.withoutName'), {\n              name: name,\n              value: value\n            }));\n          }\n        }\n\n        seriesLabel += dataLabels.join(getConfig('data.separator.middle')) + getConfig('data.separator.end');\n        seriesLabels.push(seriesLabel);\n      }\n    });\n    ariaLabel += seriesLabels.join(getConfig('series.multiple.separator.middle')) + getConfig('series.multiple.separator.end');\n    dom.setAttribute('aria-label', ariaLabel);\n  }\n\n  function replace(str, keyValues) {\n    if (typeof str !== 'string') {\n      return str;\n    }\n\n    var result = str;\n    zrUtil.each(keyValues, function (value, key) {\n      result = result.replace(new RegExp('\\\\{\\\\s*' + key + '\\\\s*\\\\}', 'g'), value);\n    });\n    return result;\n  }\n\n  function getConfig(path) {\n    var userConfig = ariaModel.get(path);\n\n    if (userConfig == null) {\n      var pathArr = path.split('.');\n      var result = lang.aria;\n\n      for (var i = 0; i < pathArr.length; ++i) {\n        result = result[pathArr[i]];\n      }\n\n      return result;\n    } else {\n      return userConfig;\n    }\n  }\n\n  function getTitle() {\n    var title = ecModel.getModel('title').option;\n\n    if (title && title.length) {\n      title = title[0];\n    }\n\n    return title && title.text;\n  }\n\n  function getSeriesTypeName(type) {\n    return lang.series.typeNames[type] || '自定义图';\n  }\n}\n\nmodule.exports = _default;","var Animator = require(\"../animation/Animator\");\n\nvar log = require(\"../core/log\");\n\nvar _util = require(\"../core/util\");\n\nvar isString = _util.isString;\nvar isFunction = _util.isFunction;\nvar isObject = _util.isObject;\nvar isArrayLike = _util.isArrayLike;\nvar indexOf = _util.indexOf;\n\n/**\n * @alias modue:zrender/mixin/Animatable\n * @constructor\n */\nvar Animatable = function () {\n  /**\n   * @type {Array.<module:zrender/animation/Animator>}\n   * @readOnly\n   */\n  this.animators = [];\n};\n\nAnimatable.prototype = {\n  constructor: Animatable,\n\n  /**\n   * 动画\n   *\n   * @param {string} path The path to fetch value from object, like 'a.b.c'.\n   * @param {boolean} [loop] Whether to loop animation.\n   * @return {module:zrender/animation/Animator}\n   * @example:\n   *     el.animate('style', false)\n   *         .when(1000, {x: 10} )\n   *         .done(function(){ // Animation done })\n   *         .start()\n   */\n  animate: function (path, loop) {\n    var target;\n    var animatingShape = false;\n    var el = this;\n    var zr = this.__zr;\n\n    if (path) {\n      var pathSplitted = path.split('.');\n      var prop = el; // If animating shape\n\n      animatingShape = pathSplitted[0] === 'shape';\n\n      for (var i = 0, l = pathSplitted.length; i < l; i++) {\n        if (!prop) {\n          continue;\n        }\n\n        prop = prop[pathSplitted[i]];\n      }\n\n      if (prop) {\n        target = prop;\n      }\n    } else {\n      target = el;\n    }\n\n    if (!target) {\n      log('Property \"' + path + '\" is not existed in element ' + el.id);\n      return;\n    }\n\n    var animators = el.animators;\n    var animator = new Animator(target, loop);\n    animator.during(function (target) {\n      el.dirty(animatingShape);\n    }).done(function () {\n      // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n      animators.splice(indexOf(animators, animator), 1);\n    });\n    animators.push(animator); // If animate after added to the zrender\n\n    if (zr) {\n      zr.animation.addAnimator(animator);\n    }\n\n    return animator;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stopAnimation: function (forwardToLast) {\n    var animators = this.animators;\n    var len = animators.length;\n\n    for (var i = 0; i < len; i++) {\n      animators[i].stop(forwardToLast);\n    }\n\n    animators.length = 0;\n    return this;\n  },\n\n  /**\n   * Caution: this method will stop previous animation.\n   * So do not use this method to one element twice before\n   * animation starts, unless you know what you are doing.\n   * @param {Object} target\n   * @param {number} [time=500] Time in ms\n   * @param {string} [easing='linear']\n   * @param {number} [delay=0]\n   * @param {Function} [callback]\n   * @param {Function} [forceAnimate] Prevent stop animation and callback\n   *        immediently when target values are the same as current values.\n   *\n   * @example\n   *  // Animate position\n   *  el.animateTo({\n   *      position: [10, 10]\n   *  }, function () { // done })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n   *  el.animateTo({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100, 'cubicOut', function () { // done })\n   */\n  // TODO Return animation key\n  animateTo: function (target, time, delay, easing, callback, forceAnimate) {\n    // animateTo(target, time, easing, callback);\n    if (isString(delay)) {\n      callback = easing;\n      easing = delay;\n      delay = 0;\n    } // animateTo(target, time, delay, callback);\n    else if (isFunction(easing)) {\n        callback = easing;\n        easing = 'linear';\n        delay = 0;\n      } // animateTo(target, time, callback);\n      else if (isFunction(delay)) {\n          callback = delay;\n          delay = 0;\n        } // animateTo(target, callback)\n        else if (isFunction(time)) {\n            callback = time;\n            time = 500;\n          } // animateTo(target)\n          else if (!time) {\n              time = 500;\n            } // Stop all previous animations\n\n\n    this.stopAnimation();\n\n    this._animateToShallow('', this, target, time, delay); // Animators may be removed immediately after start\n    // if there is nothing to animate\n\n\n    var animators = this.animators.slice();\n    var count = animators.length;\n\n    function done() {\n      count--;\n\n      if (!count) {\n        callback && callback();\n      }\n    } // No animators. This should be checked before animators[i].start(),\n    // because 'done' may be executed immediately if no need to animate.\n\n\n    if (!count) {\n      callback && callback();\n    } // Start after all animators created\n    // Incase any animator is done immediately when all animation properties are not changed\n\n\n    for (var i = 0; i < animators.length; i++) {\n      animators[i].done(done).start(easing, forceAnimate);\n    }\n  },\n\n  /**\n   * @private\n   * @param {string} path=''\n   * @param {Object} source=this\n   * @param {Object} target\n   * @param {number} [time=500]\n   * @param {number} [delay=0]\n   *\n   * @example\n   *  // Animate position\n   *  el._animateToShallow({\n   *      position: [10, 10]\n   *  })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms\n   *  el._animateToShallow({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100)\n   */\n  _animateToShallow: function (path, source, target, time, delay) {\n    var objShallow = {};\n    var propertyCount = 0;\n\n    for (var name in target) {\n      if (!target.hasOwnProperty(name)) {\n        continue;\n      }\n\n      if (source[name] != null) {\n        if (isObject(target[name]) && !isArrayLike(target[name])) {\n          this._animateToShallow(path ? path + '.' + name : name, source[name], target[name], time, delay);\n        } else {\n          objShallow[name] = target[name];\n          propertyCount++;\n        }\n      } else if (target[name] != null) {\n        // Attr directly if not has property\n        // FIXME, if some property not needed for element ?\n        if (!path) {\n          this.attr(name, target[name]);\n        } else {\n          // Shape or style\n          var props = {};\n          props[path] = {};\n          props[path][name] = target[name];\n          this.attr(props);\n        }\n      }\n    }\n\n    if (propertyCount > 0) {\n      this.animate(path, false).when(time == null ? 500 : time, objShallow).delay(delay || 0);\n    }\n\n    return this;\n  }\n};\nvar _default = Animatable;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Region = require(\"./Region\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Parse and decode geo json\n * @module echarts/coord/geo/parseGeoJson\n */\nfunction decode(json) {\n  if (!json.UTF8Encoding) {\n    return json;\n  }\n\n  var encodeScale = json.UTF8Scale;\n\n  if (encodeScale == null) {\n    encodeScale = 1024;\n  }\n\n  var features = json.features;\n\n  for (var f = 0; f < features.length; f++) {\n    var feature = features[f];\n    var geometry = feature.geometry;\n    var coordinates = geometry.coordinates;\n    var encodeOffsets = geometry.encodeOffsets;\n\n    for (var c = 0; c < coordinates.length; c++) {\n      var coordinate = coordinates[c];\n\n      if (geometry.type === 'Polygon') {\n        coordinates[c] = decodePolygon(coordinate, encodeOffsets[c], encodeScale);\n      } else if (geometry.type === 'MultiPolygon') {\n        for (var c2 = 0; c2 < coordinate.length; c2++) {\n          var polygon = coordinate[c2];\n          coordinate[c2] = decodePolygon(polygon, encodeOffsets[c][c2], encodeScale);\n        }\n      }\n    }\n  } // Has been decoded\n\n\n  json.UTF8Encoding = false;\n  return json;\n}\n\nfunction decodePolygon(coordinate, encodeOffsets, encodeScale) {\n  var result = [];\n  var prevX = encodeOffsets[0];\n  var prevY = encodeOffsets[1];\n\n  for (var i = 0; i < coordinate.length; i += 2) {\n    var x = coordinate.charCodeAt(i) - 64;\n    var y = coordinate.charCodeAt(i + 1) - 64; // ZigZag decoding\n\n    x = x >> 1 ^ -(x & 1);\n    y = y >> 1 ^ -(y & 1); // Delta deocding\n\n    x += prevX;\n    y += prevY;\n    prevX = x;\n    prevY = y; // Dequantize\n\n    result.push([x / encodeScale, y / encodeScale]);\n  }\n\n  return result;\n}\n/**\n * @alias module:echarts/coord/geo/parseGeoJson\n * @param {Object} geoJson\n * @return {module:zrender/container/Group}\n */\n\n\nfunction _default(geoJson) {\n  decode(geoJson);\n  return zrUtil.map(zrUtil.filter(geoJson.features, function (featureObj) {\n    // Output of mapshaper may have geometry null\n    return featureObj.geometry && featureObj.properties && featureObj.geometry.coordinates.length > 0;\n  }), function (featureObj) {\n    var properties = featureObj.properties;\n    var geo = featureObj.geometry;\n    var coordinates = geo.coordinates;\n    var geometries = [];\n\n    if (geo.type === 'Polygon') {\n      geometries.push({\n        type: 'polygon',\n        // According to the GeoJSON specification.\n        // First must be exterior, and the rest are all interior(holes).\n        exterior: coordinates[0],\n        interiors: coordinates.slice(1)\n      });\n    }\n\n    if (geo.type === 'MultiPolygon') {\n      zrUtil.each(coordinates, function (item) {\n        if (item[0]) {\n          geometries.push({\n            type: 'polygon',\n            exterior: item[0],\n            interiors: item.slice(1)\n          });\n        }\n      });\n    }\n\n    var region = new Region(properties.name, geometries, properties.cp);\n    region.properties = properties;\n    return region;\n  });\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar colorAll = ['#37A2DA', '#32C5E9', '#67E0E3', '#9FE6B8', '#FFDB5C', '#ff9f7f', '#fb7293', '#E062AE', '#E690D1', '#e7bcf3', '#9d96f5', '#8378EA', '#96BFFF'];\nvar _default = {\n  color: colorAll,\n  colorLayer: [['#37A2DA', '#ffd85c', '#fd7b5f'], ['#37A2DA', '#67E0E3', '#FFDB5C', '#ff9f7f', '#E062AE', '#9d96f5'], ['#37A2DA', '#32C5E9', '#9FE6B8', '#FFDB5C', '#ff9f7f', '#fb7293', '#e7bcf3', '#8378EA', '#96BFFF'], colorAll]\n};\nmodule.exports = _default;","var _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @return {string} label string. Not null/undefined\n */\nfunction getDefaultLabel(data, dataIndex) {\n  var labelDims = data.mapDimension('defaultedLabel', true);\n  var len = labelDims.length; // Simple optimization (in lots of cases, label dims length is 1)\n\n  if (len === 1) {\n    return retrieveRawValue(data, dataIndex, labelDims[0]);\n  } else if (len) {\n    var vals = [];\n\n    for (var i = 0; i < labelDims.length; i++) {\n      var val = retrieveRawValue(data, dataIndex, labelDims[i]);\n      vals.push(val);\n    }\n\n    return vals.join(' ');\n  }\n}\n\nexports.getDefaultLabel = getDefaultLabel;","var Path = require(\"../Path\");\n\nvar roundRectHelper = require(\"../helper/roundRect\");\n\n/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\nvar _default = Path.extend({\n  type: 'rect',\n  shape: {\n    // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n    // r缩写为1         相当于 [1, 1, 1, 1]\n    // r缩写为[1]       相当于 [1, 1, 1, 1]\n    // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n    // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n    r: 0,\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var width = shape.width;\n    var height = shape.height;\n\n    if (!shape.r) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, shape);\n    }\n\n    ctx.closePath();\n    return;\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar ComponentModel = require(\"./Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\nvar each = zrUtil.each;\nvar clone = zrUtil.clone;\nvar map = zrUtil.map;\nvar merge = zrUtil.merge;\nvar QUERY_REG = /^(min|max)?(.+)$/;\n/**\n * TERM EXPLANATIONS:\n *\n * [option]:\n *\n *     An object that contains definitions of components. For example:\n *     var option = {\n *         title: {...},\n *         legend: {...},\n *         visualMap: {...},\n *         series: [\n *             {data: [...]},\n *             {data: [...]},\n *             ...\n *         ]\n *     };\n *\n * [rawOption]:\n *\n *     An object input to echarts.setOption. 'rawOption' may be an\n *     'option', or may be an object contains multi-options. For example:\n *     var option = {\n *         baseOption: {\n *             title: {...},\n *             legend: {...},\n *             series: [\n *                 {data: [...]},\n *                 {data: [...]},\n *                 ...\n *             ]\n *         },\n *         timeline: {...},\n *         options: [\n *             {title: {...}, series: {data: [...]}},\n *             {title: {...}, series: {data: [...]}},\n *             ...\n *         ],\n *         media: [\n *             {\n *                 query: {maxWidth: 320},\n *                 option: {series: {x: 20}, visualMap: {show: false}}\n *             },\n *             {\n *                 query: {minWidth: 320, maxWidth: 720},\n *                 option: {series: {x: 500}, visualMap: {show: true}}\n *             },\n *             {\n *                 option: {series: {x: 1200}, visualMap: {show: true}}\n *             }\n *         ]\n *     };\n *\n * @alias module:echarts/model/OptionManager\n * @param {module:echarts/ExtensionAPI} api\n */\n\nfunction OptionManager(api) {\n  /**\n   * @private\n   * @type {module:echarts/ExtensionAPI}\n   */\n  this._api = api;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._timelineOptions = [];\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n\n  this._mediaList = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._mediaDefault;\n  /**\n   * -1, means default.\n   * empty means no media.\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._currentMediaIndices = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._optionBackup;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._newBaseOption;\n} // timeline.notMerge is not supported in ec3. Firstly there is rearly\n// case that notMerge is needed. Secondly supporting 'notMerge' requires\n// rawOption cloned and backuped when timeline changed, which does no\n// good to performance. What's more, that both timeline and setOption\n// method supply 'notMerge' brings complex and some problems.\n// Consider this case:\n// (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n// (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n\nOptionManager.prototype = {\n  constructor: OptionManager,\n\n  /**\n   * @public\n   * @param {Object} rawOption Raw option.\n   * @param {module:echarts/model/Global} ecModel\n   * @param {Array.<Function>} optionPreprocessorFuncs\n   * @return {Object} Init option\n   */\n  setOption: function (rawOption, optionPreprocessorFuncs) {\n    if (rawOption) {\n      // That set dat primitive is dangerous if user reuse the data when setOption again.\n      zrUtil.each(modelUtil.normalizeToArray(rawOption.series), function (series) {\n        series && series.data && zrUtil.isTypedArray(series.data) && zrUtil.setAsPrimitive(series.data);\n      });\n    } // Caution: some series modify option data, if do not clone,\n    // it should ensure that the repeat modify correctly\n    // (create a new object when modify itself).\n\n\n    rawOption = clone(rawOption, true); // FIXME\n    // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n    var oldOptionBackup = this._optionBackup;\n    var newParsedOption = parseRawOption.call(this, rawOption, optionPreprocessorFuncs, !oldOptionBackup);\n    this._newBaseOption = newParsedOption.baseOption; // For setOption at second time (using merge mode);\n\n    if (oldOptionBackup) {\n      // Only baseOption can be merged.\n      mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption); // For simplicity, timeline options and media options do not support merge,\n      // that is, if you `setOption` twice and both has timeline options, the latter\n      // timeline opitons will not be merged to the formers, but just substitude them.\n\n      if (newParsedOption.timelineOptions.length) {\n        oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n      }\n\n      if (newParsedOption.mediaList.length) {\n        oldOptionBackup.mediaList = newParsedOption.mediaList;\n      }\n\n      if (newParsedOption.mediaDefault) {\n        oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n      }\n    } else {\n      this._optionBackup = newParsedOption;\n    }\n  },\n\n  /**\n   * @param {boolean} isRecreate\n   * @return {Object}\n   */\n  mountOption: function (isRecreate) {\n    var optionBackup = this._optionBackup; // TODO\n    // 如果没有reset功能则不clone。\n\n    this._timelineOptions = map(optionBackup.timelineOptions, clone);\n    this._mediaList = map(optionBackup.mediaList, clone);\n    this._mediaDefault = clone(optionBackup.mediaDefault);\n    this._currentMediaIndices = [];\n    return clone(isRecreate // this._optionBackup.baseOption, which is created at the first `setOption`\n    // called, and is merged into every new option by inner method `mergeOption`\n    // each time `setOption` called, can be only used in `isRecreate`, because\n    // its reliability is under suspicion. In other cases option merge is\n    // performed by `model.mergeOption`.\n    ? optionBackup.baseOption : this._newBaseOption);\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Object}\n   */\n  getTimelineOption: function (ecModel) {\n    var option;\n    var timelineOptions = this._timelineOptions;\n\n    if (timelineOptions.length) {\n      // getTimelineOption can only be called after ecModel inited,\n      // so we can get currentIndex from timelineModel.\n      var timelineModel = ecModel.getComponent('timeline');\n\n      if (timelineModel) {\n        option = clone(timelineOptions[timelineModel.getCurrentIndex()], true);\n      }\n    }\n\n    return option;\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Array.<Object>}\n   */\n  getMediaOption: function (ecModel) {\n    var ecWidth = this._api.getWidth();\n\n    var ecHeight = this._api.getHeight();\n\n    var mediaList = this._mediaList;\n    var mediaDefault = this._mediaDefault;\n    var indices = [];\n    var result = []; // No media defined.\n\n    if (!mediaList.length && !mediaDefault) {\n      return result;\n    } // Multi media may be applied, the latter defined media has higher priority.\n\n\n    for (var i = 0, len = mediaList.length; i < len; i++) {\n      if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n        indices.push(i);\n      }\n    } // FIXME\n    // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n\n\n    if (!indices.length && mediaDefault) {\n      indices = [-1];\n    }\n\n    if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n      result = map(indices, function (index) {\n        return clone(index === -1 ? mediaDefault.option : mediaList[index].option);\n      });\n    } // Otherwise return nothing.\n\n\n    this._currentMediaIndices = indices;\n    return result;\n  }\n};\n\nfunction parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n  var timelineOptions = [];\n  var mediaList = [];\n  var mediaDefault;\n  var baseOption; // Compatible with ec2.\n\n  var timelineOpt = rawOption.timeline;\n\n  if (rawOption.baseOption) {\n    baseOption = rawOption.baseOption;\n  } // For timeline\n\n\n  if (timelineOpt || rawOption.options) {\n    baseOption = baseOption || {};\n    timelineOptions = (rawOption.options || []).slice();\n  } // For media query\n\n\n  if (rawOption.media) {\n    baseOption = baseOption || {};\n    var media = rawOption.media;\n    each(media, function (singleMedia) {\n      if (singleMedia && singleMedia.option) {\n        if (singleMedia.query) {\n          mediaList.push(singleMedia);\n        } else if (!mediaDefault) {\n          // Use the first media default.\n          mediaDefault = singleMedia;\n        }\n      }\n    });\n  } // For normal option\n\n\n  if (!baseOption) {\n    baseOption = rawOption;\n  } // Set timelineOpt to baseOption in ec3,\n  // which is convenient for merge option.\n\n\n  if (!baseOption.timeline) {\n    baseOption.timeline = timelineOpt;\n  } // Preprocess.\n\n\n  each([baseOption].concat(timelineOptions).concat(zrUtil.map(mediaList, function (media) {\n    return media.option;\n  })), function (option) {\n    each(optionPreprocessorFuncs, function (preProcess) {\n      preProcess(option, isNew);\n    });\n  });\n  return {\n    baseOption: baseOption,\n    timelineOptions: timelineOptions,\n    mediaDefault: mediaDefault,\n    mediaList: mediaList\n  };\n}\n/**\n * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n * Support: width, height, aspectRatio\n * Can use max or min as prefix.\n */\n\n\nfunction applyMediaQuery(query, ecWidth, ecHeight) {\n  var realMap = {\n    width: ecWidth,\n    height: ecHeight,\n    aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n\n  };\n  var applicatable = true;\n  zrUtil.each(query, function (value, attr) {\n    var matched = attr.match(QUERY_REG);\n\n    if (!matched || !matched[1] || !matched[2]) {\n      return;\n    }\n\n    var operator = matched[1];\n    var realAttr = matched[2].toLowerCase();\n\n    if (!compare(realMap[realAttr], value, operator)) {\n      applicatable = false;\n    }\n  });\n  return applicatable;\n}\n\nfunction compare(real, expect, operator) {\n  if (operator === 'min') {\n    return real >= expect;\n  } else if (operator === 'max') {\n    return real <= expect;\n  } else {\n    // Equals\n    return real === expect;\n  }\n}\n\nfunction indicesEquals(indices1, indices2) {\n  // indices is always order by asc and has only finite number.\n  return indices1.join(',') === indices2.join(',');\n}\n/**\n * Consider case:\n * `chart.setOption(opt1);`\n * Then user do some interaction like dataZoom, dataView changing.\n * `chart.setOption(opt2);`\n * Then user press 'reset button' in toolbox.\n *\n * After doing that all of the interaction effects should be reset, the\n * chart should be the same as the result of invoke\n * `chart.setOption(opt1); chart.setOption(opt2);`.\n *\n * Although it is not able ensure that\n * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n * `chart.setOption(merge(opt1, opt2));` exactly,\n * this might be the only simple way to implement that feature.\n *\n * MEMO: We've considered some other approaches:\n * 1. Each model handle its self restoration but not uniform treatment.\n *     (Too complex in logic and error-prone)\n * 2. Use a shadow ecModel. (Performace expensive)\n */\n\n\nfunction mergeOption(oldOption, newOption) {\n  newOption = newOption || {};\n  each(newOption, function (newCptOpt, mainType) {\n    if (newCptOpt == null) {\n      return;\n    }\n\n    var oldCptOpt = oldOption[mainType];\n\n    if (!ComponentModel.hasClass(mainType)) {\n      oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n    } else {\n      newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n      oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n      var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n      oldOption[mainType] = map(mapResult, function (item) {\n        return item.option && item.exist ? merge(item.exist, item.option, true) : item.exist || item.option;\n      });\n    }\n  });\n}\n\nvar _default = OptionManager;\nmodule.exports = _default;","var Path = require(\"../Path\");\n\n/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\nvar _default = Path.extend({\n  type: 'line',\n  shape: {\n    // Start point\n    x1: 0,\n    y1: 0,\n    // End point\n    x2: 0,\n    y2: 0,\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (percent < 1) {\n      x2 = x1 * (1 - percent) + x2 * percent;\n      y2 = y1 * (1 - percent) + y2 * percent;\n    }\n\n    ctx.lineTo(x2, y2);\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} percent\n   * @return {Array.<number>}\n   */\n  pointAt: function (p) {\n    var shape = this.shape;\n    return [shape.x1 * (1 - p) + shape.x2 * p, shape.y1 * (1 - p) + shape.y2 * p];\n  }\n});\n\nmodule.exports = _default;","// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\nfunction Draggable() {\n  this.on('mousedown', this._dragStart, this);\n  this.on('mousemove', this._drag, this);\n  this.on('mouseup', this._dragEnd, this);\n  this.on('globalout', this._dragEnd, this); // this._dropTarget = null;\n  // this._draggingTarget = null;\n  // this._x = 0;\n  // this._y = 0;\n}\n\nDraggable.prototype = {\n  constructor: Draggable,\n  _dragStart: function (e) {\n    var draggingTarget = e.target;\n\n    if (draggingTarget && draggingTarget.draggable) {\n      this._draggingTarget = draggingTarget;\n      draggingTarget.dragging = true;\n      this._x = e.offsetX;\n      this._y = e.offsetY;\n      this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n    }\n  },\n  _drag: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      var x = e.offsetX;\n      var y = e.offsetY;\n      var dx = x - this._x;\n      var dy = y - this._y;\n      this._x = x;\n      this._y = y;\n      draggingTarget.drift(dx, dy, e);\n      this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n      var dropTarget = this.findHover(x, y, draggingTarget).target;\n      var lastDropTarget = this._dropTarget;\n      this._dropTarget = dropTarget;\n\n      if (draggingTarget !== dropTarget) {\n        if (lastDropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n        }\n\n        if (dropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n        }\n      }\n    }\n  },\n  _dragEnd: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      draggingTarget.dragging = false;\n    }\n\n    this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n    if (this._dropTarget) {\n      this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n    }\n\n    this._draggingTarget = null;\n    this._dropTarget = null;\n  }\n};\n\nfunction param(target, e) {\n  return {\n    target: target,\n    topTarget: e && e.topTarget\n  };\n}\n\nvar _default = Draggable;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisPointerModelHelper = require(\"./axisPointer/modelHelper\");\n\nvar axisTrigger = require(\"./axisPointer/axisTrigger\");\n\nrequire(\"./axisPointer/AxisPointerModel\");\n\nrequire(\"./axisPointer/AxisPointerView\");\n\nrequire(\"./axisPointer/CartesianAxisPointer\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// CartesianAxisPointer is not supposed to be required here. But consider\n// echarts.simple.js and online build tooltip, which only require gridSimple,\n// CartesianAxisPointer should be able to required somewhere.\necharts.registerPreprocessor(function (option) {\n  // Always has a global axisPointerModel for default setting.\n  if (option) {\n    (!option.axisPointer || option.axisPointer.length === 0) && (option.axisPointer = {});\n    var link = option.axisPointer.link; // Normalize to array to avoid object mergin. But if link\n    // is not set, remain null/undefined, otherwise it will\n    // override existent link setting.\n\n    if (link && !zrUtil.isArray(link)) {\n      option.axisPointer.link = [link];\n    }\n  }\n}); // This process should proformed after coordinate systems created\n// and series data processed. So put it on statistic processing stage.\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n  // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n  // allAxesInfo should be updated when setOption performed.\n  ecModel.getComponent('axisPointer').coordSysAxesInfo = axisPointerModelHelper.collect(ecModel, api);\n}); // Broadcast to all views.\n\necharts.registerAction({\n  type: 'updateAxisPointer',\n  event: 'updateAxisPointer',\n  update: ':updateAxisPointer'\n}, axisTrigger);","var Displayable = require(\"./Displayable\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar pathContain = require(\"../contain/path\");\n\nvar Pattern = require(\"./Pattern\");\n\nvar getCanvasPattern = Pattern.prototype.getCanvasPattern;\nvar abs = Math.abs;\nvar pathProxyForDraw = new PathProxy(true);\n/**\n * @alias module:zrender/graphic/Path\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\n\nfunction Path(opts) {\n  Displayable.call(this, opts);\n  /**\n   * @type {module:zrender/core/PathProxy}\n   * @readOnly\n   */\n\n  this.path = null;\n}\n\nPath.prototype = {\n  constructor: Path,\n  type: 'path',\n  __dirtyPath: true,\n  strokeContainThreshold: 5,\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var path = this.path || pathProxyForDraw;\n    var hasStroke = style.hasStroke();\n    var hasFill = style.hasFill();\n    var fill = style.fill;\n    var stroke = style.stroke;\n    var hasFillGradient = hasFill && !!fill.colorStops;\n    var hasStrokeGradient = hasStroke && !!stroke.colorStops;\n    var hasFillPattern = hasFill && !!fill.image;\n    var hasStrokePattern = hasStroke && !!stroke.image;\n    style.bind(ctx, this, prevEl);\n    this.setTransform(ctx);\n\n    if (this.__dirty) {\n      var rect; // Update gradient because bounding rect may changed\n\n      if (hasFillGradient) {\n        rect = rect || this.getBoundingRect();\n        this._fillGradient = style.getGradient(ctx, fill, rect);\n      }\n\n      if (hasStrokeGradient) {\n        rect = rect || this.getBoundingRect();\n        this._strokeGradient = style.getGradient(ctx, stroke, rect);\n      }\n    } // Use the gradient or pattern\n\n\n    if (hasFillGradient) {\n      // PENDING If may have affect the state\n      ctx.fillStyle = this._fillGradient;\n    } else if (hasFillPattern) {\n      ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n    }\n\n    if (hasStrokeGradient) {\n      ctx.strokeStyle = this._strokeGradient;\n    } else if (hasStrokePattern) {\n      ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n    }\n\n    var lineDash = style.lineDash;\n    var lineDashOffset = style.lineDashOffset;\n    var ctxLineDash = !!ctx.setLineDash; // Update path sx, sy\n\n    var scale = this.getGlobalScale();\n    path.setScale(scale[0], scale[1]); // Proxy context\n    // Rebuild path in following 2 cases\n    // 1. Path is dirty\n    // 2. Path needs javascript implemented lineDash stroking.\n    //    In this case, lineDash information will not be saved in PathProxy\n\n    if (this.__dirtyPath || lineDash && !ctxLineDash && hasStroke) {\n      path.beginPath(ctx); // Setting line dash before build path\n\n      if (lineDash && !ctxLineDash) {\n        path.setLineDash(lineDash);\n        path.setLineDashOffset(lineDashOffset);\n      }\n\n      this.buildPath(path, this.shape, false); // Clear path dirty flag\n\n      if (this.path) {\n        this.__dirtyPath = false;\n      }\n    } else {\n      // Replay path building\n      ctx.beginPath();\n      this.path.rebuildPath(ctx);\n    }\n\n    hasFill && path.fill(ctx);\n\n    if (lineDash && ctxLineDash) {\n      ctx.setLineDash(lineDash);\n      ctx.lineDashOffset = lineDashOffset;\n    }\n\n    hasStroke && path.stroke(ctx);\n\n    if (lineDash && ctxLineDash) {\n      // PENDING\n      // Remove lineDash\n      ctx.setLineDash([]);\n    } // Draw rect text\n\n\n    if (style.text != null) {\n      // Only restore transform when needs draw text.\n      this.restoreTransform(ctx);\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n  // Like in circle\n  buildPath: function (ctx, shapeCfg, inBundle) {},\n  createPathProxy: function () {\n    this.path = new PathProxy();\n  },\n  getBoundingRect: function () {\n    var rect = this._rect;\n    var style = this.style;\n    var needsUpdateRect = !rect;\n\n    if (needsUpdateRect) {\n      var path = this.path;\n\n      if (!path) {\n        // Create path on demand.\n        path = this.path = new PathProxy();\n      }\n\n      if (this.__dirtyPath) {\n        path.beginPath();\n        this.buildPath(path, this.shape, false);\n      }\n\n      rect = path.getBoundingRect();\n    }\n\n    this._rect = rect;\n\n    if (style.hasStroke()) {\n      // Needs update rect with stroke lineWidth when\n      // 1. Element changes scale or lineWidth\n      // 2. Shape is changed\n      var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n\n      if (this.__dirty || needsUpdateRect) {\n        rectWithStroke.copy(rect); // FIXME Must after updateTransform\n\n        var w = style.lineWidth; // PENDING, Min line width is needed when line is horizontal or vertical\n\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Only add extra hover lineWidth when there are no fill\n\n        if (!style.hasFill()) {\n          w = Math.max(w, this.strokeContainThreshold || 4);\n        } // Consider line width\n        // Line scale can't be 0;\n\n\n        if (lineScale > 1e-10) {\n          rectWithStroke.width += w / lineScale;\n          rectWithStroke.height += w / lineScale;\n          rectWithStroke.x -= w / lineScale / 2;\n          rectWithStroke.y -= w / lineScale / 2;\n        }\n      } // Return rect with stroke\n\n\n      return rectWithStroke;\n    }\n\n    return rect;\n  },\n  contain: function (x, y) {\n    var localPos = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    var style = this.style;\n    x = localPos[0];\n    y = localPos[1];\n\n    if (rect.contain(x, y)) {\n      var pathData = this.path.data;\n\n      if (style.hasStroke()) {\n        var lineWidth = style.lineWidth;\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Line scale can't be 0;\n\n        if (lineScale > 1e-10) {\n          // Only add extra hover lineWidth when there are no fill\n          if (!style.hasFill()) {\n            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n          }\n\n          if (pathContain.containStroke(pathData, lineWidth / lineScale, x, y)) {\n            return true;\n          }\n        }\n      }\n\n      if (style.hasFill()) {\n        return pathContain.contain(pathData, x, y);\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * @param  {boolean} dirtyPath\n   */\n  dirty: function (dirtyPath) {\n    if (dirtyPath == null) {\n      dirtyPath = true;\n    } // Only mark dirty, not mark clean\n\n\n    if (dirtyPath) {\n      this.__dirtyPath = dirtyPath;\n      this._rect = null;\n    }\n\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh(); // Used as a clipping path\n\n    if (this.__clipTarget) {\n      this.__clipTarget.dirty();\n    }\n  },\n\n  /**\n   * Alias for animate('shape')\n   * @param {boolean} loop\n   */\n  animateShape: function (loop) {\n    return this.animate('shape', loop);\n  },\n  // Overwrite attrKV\n  attrKV: function (key, value) {\n    // FIXME\n    if (key === 'shape') {\n      this.setShape(value);\n      this.__dirtyPath = true;\n      this._rect = null;\n    } else {\n      Displayable.prototype.attrKV.call(this, key, value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setShape: function (key, value) {\n    var shape = this.shape; // Path from string may not have shape\n\n    if (shape) {\n      if (zrUtil.isObject(key)) {\n        for (var name in key) {\n          if (key.hasOwnProperty(name)) {\n            shape[name] = key[name];\n          }\n        }\n      } else {\n        shape[key] = value;\n      }\n\n      this.dirty(true);\n    }\n\n    return this;\n  },\n  getLineScale: function () {\n    var m = this.transform; // Get the line scale.\n    // Determinant of `m` means how much the area is enlarged by the\n    // transformation. So its square root can be used as a scale factor\n    // for width.\n\n    return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10 ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1])) : 1;\n  }\n};\n/**\n * 扩展一个 Path element, 比如星形，圆等。\n * Extend a path element\n * @param {Object} props\n * @param {string} props.type Path type\n * @param {Function} props.init Initialize\n * @param {Function} props.buildPath Overwrite buildPath method\n * @param {Object} [props.style] Extended default style config\n * @param {Object} [props.shape] Extended default shape config\n */\n\nPath.extend = function (defaults) {\n  var Sub = function (opts) {\n    Path.call(this, opts);\n\n    if (defaults.style) {\n      // Extend default style\n      this.style.extendFrom(defaults.style, false);\n    } // Extend default shape\n\n\n    var defaultShape = defaults.shape;\n\n    if (defaultShape) {\n      this.shape = this.shape || {};\n      var thisShape = this.shape;\n\n      for (var name in defaultShape) {\n        if (!thisShape.hasOwnProperty(name) && defaultShape.hasOwnProperty(name)) {\n          thisShape[name] = defaultShape[name];\n        }\n      }\n    }\n\n    defaults.init && defaults.init.call(this, opts);\n  };\n\n  zrUtil.inherits(Sub, Path); // FIXME 不能 extend position, rotation 等引用对象\n\n  for (var name in defaults) {\n    // Extending prototype values and methods\n    if (name !== 'style' && name !== 'shape') {\n      Sub.prototype[name] = defaults[name];\n    }\n  }\n\n  return Sub;\n};\n\nzrUtil.inherits(Path, Displayable);\nvar _default = Path;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Cartesian = require(\"./Cartesian\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction Cartesian2D(name) {\n  Cartesian.call(this, name);\n}\n\nCartesian2D.prototype = {\n  constructor: Cartesian2D,\n  type: 'cartesian2d',\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['x', 'y'],\n\n  /**\n   * Base axis will be used on stacking.\n   *\n   * @return {module:echarts/coord/cartesian/Axis2D}\n   */\n  getBaseAxis: function () {\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAxis('x');\n  },\n\n  /**\n   * If contain point\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var axisX = this.getAxis('x');\n    var axisY = this.getAxis('y');\n    return axisX.contain(axisX.toLocalCoord(point[0])) && axisY.contain(axisY.toLocalCoord(point[1]));\n  },\n\n  /**\n   * If contain data\n   * @param {Array.<number>} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.getAxis('x').containData(data[0]) && this.getAxis('y').containData(data[1]);\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, reserved, out) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    out = out || [];\n    out[0] = xAxis.toGlobalCoord(xAxis.dataToCoord(data[0]));\n    out[1] = yAxis.toGlobalCoord(yAxis.dataToCoord(data[1]));\n    return out;\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  clampData: function (data, out) {\n    var xScale = this.getAxis('x').scale;\n    var yScale = this.getAxis('y').scale;\n    var xAxisExtent = xScale.getExtent();\n    var yAxisExtent = yScale.getExtent();\n    var x = xScale.parse(data[0]);\n    var y = yScale.parse(data[1]);\n    out = out || [];\n    out[0] = Math.min(Math.max(Math.min(xAxisExtent[0], xAxisExtent[1]), x), Math.max(xAxisExtent[0], xAxisExtent[1]));\n    out[1] = Math.min(Math.max(Math.min(yAxisExtent[0], yAxisExtent[1]), y), Math.max(yAxisExtent[0], yAxisExtent[1]));\n    return out;\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  pointToData: function (point, out) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    out = out || [];\n    out[0] = xAxis.coordToData(xAxis.toLocalCoord(point[0]));\n    out[1] = yAxis.coordToData(yAxis.toLocalCoord(point[1]));\n    return out;\n  },\n\n  /**\n   * Get other axis\n   * @param {module:echarts/coord/cartesian/Axis2D} axis\n   */\n  getOtherAxis: function (axis) {\n    return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n  }\n};\nzrUtil.inherits(Cartesian2D, Cartesian);\nvar _default = Cartesian2D;\nmodule.exports = _default;","var _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @return {string} If large mode changed, return string 'reset';\n */\nfunction _default() {\n  var inner = makeInner();\n  return function (seriesModel) {\n    var fields = inner(seriesModel);\n    var pipelineContext = seriesModel.pipelineContext;\n    var originalLarge = fields.large;\n    var originalProgressive = fields.progressiveRender;\n    var large = fields.large = pipelineContext.large;\n    var progressive = fields.progressiveRender = pipelineContext.progressiveRender;\n    return !!(originalLarge ^ large || originalProgressive ^ progressive) && 'reset';\n  };\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar curry = zrUtil.curry; // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n// allAxesInfo should be updated when setOption performed.\n\nfunction collect(ecModel, api) {\n  var result = {\n    /**\n     * key: makeKey(axis.model)\n     * value: {\n     *      axis,\n     *      coordSys,\n     *      axisPointerModel,\n     *      triggerTooltip,\n     *      involveSeries,\n     *      snap,\n     *      seriesModels,\n     *      seriesDataCount\n     * }\n     */\n    axesInfo: {},\n    seriesInvolved: false,\n\n    /**\n     * key: makeKey(coordSys.model)\n     * value: Object: key makeKey(axis.model), value: axisInfo\n     */\n    coordSysAxesInfo: {},\n    coordSysMap: {}\n  };\n  collectAxesInfo(result, ecModel, api); // Check seriesInvolved for performance, in case too many series in some chart.\n\n  result.seriesInvolved && collectSeriesInfo(result, ecModel);\n  return result;\n}\n\nfunction collectAxesInfo(result, ecModel, api) {\n  var globalTooltipModel = ecModel.getComponent('tooltip');\n  var globalAxisPointerModel = ecModel.getComponent('axisPointer'); // links can only be set on global.\n\n  var linksOption = globalAxisPointerModel.get('link', true) || [];\n  var linkGroups = []; // Collect axes info.\n\n  each(api.getCoordinateSystems(), function (coordSys) {\n    // Some coordinate system do not support axes, like geo.\n    if (!coordSys.axisPointerEnabled) {\n      return;\n    }\n\n    var coordSysKey = makeKey(coordSys.model);\n    var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n    result.coordSysMap[coordSysKey] = coordSys; // Set tooltip (like 'cross') is a convienent way to show axisPointer\n    // for user. So we enable seting tooltip on coordSys model.\n\n    var coordSysModel = coordSys.model;\n    var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n    each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null)); // If axis tooltip used, choose tooltip axis for each coordSys.\n    // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n\n    if (coordSys.getTooltipAxes && globalTooltipModel // If tooltip.showContent is set as false, tooltip will not\n    // show but axisPointer will show as normal.\n    && baseTooltipModel.get('show')) {\n      // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n      // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n      var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n      var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n      var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n\n      if (triggerAxis || cross) {\n        each(tooltipAxes.baseAxes, curry(saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis));\n      }\n\n      if (cross) {\n        each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n      }\n    } // fromTooltip: true | false | 'cross'\n    // triggerTooltip: true | false | null\n\n\n    function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n      var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n      var axisPointerShow = axisPointerModel.get('show');\n\n      if (!axisPointerShow || axisPointerShow === 'auto' && !fromTooltip && !isHandleTrigger(axisPointerModel)) {\n        return;\n      }\n\n      if (triggerTooltip == null) {\n        triggerTooltip = axisPointerModel.get('triggerTooltip');\n      }\n\n      axisPointerModel = fromTooltip ? makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) : axisPointerModel;\n      var snap = axisPointerModel.get('snap');\n      var key = makeKey(axis.model);\n      var involveSeries = triggerTooltip || snap || axis.type === 'category'; // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n\n      var axisInfo = result.axesInfo[key] = {\n        key: key,\n        axis: axis,\n        coordSys: coordSys,\n        axisPointerModel: axisPointerModel,\n        triggerTooltip: triggerTooltip,\n        involveSeries: involveSeries,\n        snap: snap,\n        useHandle: isHandleTrigger(axisPointerModel),\n        seriesModels: []\n      };\n      axesInfoInCoordSys[key] = axisInfo;\n      result.seriesInvolved |= involveSeries;\n      var groupIndex = getLinkGroupIndex(linksOption, axis);\n\n      if (groupIndex != null) {\n        var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {\n          axesInfo: {}\n        });\n        linkGroup.axesInfo[key] = axisInfo;\n        linkGroup.mapper = linksOption[groupIndex].mapper;\n        axisInfo.linkGroup = linkGroup;\n      }\n    }\n  });\n}\n\nfunction makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) {\n  var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n  var volatileOption = {};\n  each(['type', 'snap', 'lineStyle', 'shadowStyle', 'label', 'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'], function (field) {\n    volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n  }); // category axis do not auto snap, otherwise some tick that do not\n  // has value can not be hovered. value/time/log axis default snap if\n  // triggered from tooltip and trigger tooltip.\n\n  volatileOption.snap = axis.type !== 'category' && !!triggerTooltip; // Compatibel with previous behavior, tooltip axis do not show label by default.\n  // Only these properties can be overrided from tooltip to axisPointer.\n\n  if (tooltipAxisPointerModel.get('type') === 'cross') {\n    volatileOption.type = 'line';\n  }\n\n  var labelOption = volatileOption.label || (volatileOption.label = {}); // Follow the convention, do not show label when triggered by tooltip by default.\n\n  labelOption.show == null && (labelOption.show = false);\n\n  if (fromTooltip === 'cross') {\n    // When 'cross', both axes show labels.\n    var tooltipAxisPointerLabelShow = tooltipAxisPointerModel.get('label.show');\n    labelOption.show = tooltipAxisPointerLabelShow != null ? tooltipAxisPointerLabelShow : true; // If triggerTooltip, this is a base axis, which should better not use cross style\n    // (cross style is dashed by default)\n\n    if (!triggerTooltip) {\n      var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n      crossStyle && zrUtil.defaults(labelOption, crossStyle.textStyle);\n    }\n  }\n\n  return axis.model.getModel('axisPointer', new Model(volatileOption, globalAxisPointerModel, ecModel));\n}\n\nfunction collectSeriesInfo(result, ecModel) {\n  // Prepare data for axis trigger\n  ecModel.eachSeries(function (seriesModel) {\n    // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n    var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n\n    if (!coordSys || seriesTooltipTrigger === 'none' || seriesTooltipTrigger === false || seriesTooltipTrigger === 'item' || seriesTooltipShow === false || seriesModel.get('axisPointer.show', true) === false) {\n      return;\n    }\n\n    each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n      var axis = axisInfo.axis;\n\n      if (coordSys.getAxis(axis.dim) === axis) {\n        axisInfo.seriesModels.push(seriesModel);\n        axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n        axisInfo.seriesDataCount += seriesModel.getData().count();\n      }\n    });\n  }, this);\n}\n/**\n * For example:\n * {\n *     axisPointer: {\n *         links: [{\n *             xAxisIndex: [2, 4],\n *             yAxisIndex: 'all'\n *         }, {\n *             xAxisId: ['a5', 'a7'],\n *             xAxisName: 'xxx'\n *         }]\n *     }\n * }\n */\n\n\nfunction getLinkGroupIndex(linksOption, axis) {\n  var axisModel = axis.model;\n  var dim = axis.dim;\n\n  for (var i = 0; i < linksOption.length; i++) {\n    var linkOption = linksOption[i] || {};\n\n    if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id) || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex) || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)) {\n      return i;\n    }\n  }\n}\n\nfunction checkPropInLink(linkPropValue, axisPropValue) {\n  return linkPropValue === 'all' || zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0 || linkPropValue === axisPropValue;\n}\n\nfunction fixValue(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n\n  if (!axisInfo) {\n    return;\n  }\n\n  var axisPointerModel = axisInfo.axisPointerModel;\n  var scale = axisInfo.axis.scale;\n  var option = axisPointerModel.option;\n  var status = axisPointerModel.get('status');\n  var value = axisPointerModel.get('value'); // Parse init value for category and time axis.\n\n  if (value != null) {\n    value = scale.parse(value);\n  }\n\n  var useHandle = isHandleTrigger(axisPointerModel); // If `handle` used, `axisPointer` will always be displayed, so value\n  // and status should be initialized.\n\n  if (status == null) {\n    option.status = useHandle ? 'show' : 'hide';\n  }\n\n  var extent = scale.getExtent().slice();\n  extent[0] > extent[1] && extent.reverse();\n\n  if ( // Pick a value on axis when initializing.\n  value == null // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n  // where we should re-pick a value to keep `handle` displaying normally.\n  || value > extent[1]) {\n    // Make handle displayed on the end of the axis when init, which looks better.\n    value = extent[1];\n  }\n\n  if (value < extent[0]) {\n    value = extent[0];\n  }\n\n  option.value = value;\n\n  if (useHandle) {\n    option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n  }\n}\n\nfunction getAxisInfo(axisModel) {\n  var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n  return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n}\n\nfunction getAxisPointerModel(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n  return axisInfo && axisInfo.axisPointerModel;\n}\n\nfunction isHandleTrigger(axisPointerModel) {\n  return !!axisPointerModel.get('handle.show');\n}\n/**\n * @param {module:echarts/model/Model} model\n * @return {string} unique key\n */\n\n\nfunction makeKey(model) {\n  return model.type + '||' + model.id;\n}\n\nexports.collect = collect;\nexports.fixValue = fixValue;\nexports.getAxisInfo = getAxisInfo;\nexports.getAxisPointerModel = getAxisPointerModel;\nexports.makeKey = makeKey;","var _event = require(\"../core/event\");\n\nvar addEventListener = _event.addEventListener;\nvar removeEventListener = _event.removeEventListener;\nvar normalizeEvent = _event.normalizeEvent;\n\nvar zrUtil = require(\"../core/util\");\n\nvar Eventful = require(\"../mixin/Eventful\");\n\nvar env = require(\"../core/env\");\n\nvar GestureMgr = require(\"../core/GestureMgr\");\n\nvar TOUCH_CLICK_DELAY = 300;\nvar mouseHandlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\nvar touchHandlerNames = ['touchstart', 'touchend', 'touchmove'];\nvar pointerEventNames = {\n  pointerdown: 1,\n  pointerup: 1,\n  pointermove: 1,\n  pointerout: 1\n};\nvar pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n  var nm = name.replace('mouse', 'pointer');\n  return pointerEventNames[nm] ? nm : name;\n});\n\nfunction eventNameFix(name) {\n  return name === 'mousewheel' && env.browser.firefox ? 'DOMMouseScroll' : name;\n}\n\nfunction processGesture(proxy, event, stage) {\n  var gestureMgr = proxy._gestureMgr;\n  stage === 'start' && gestureMgr.clear();\n  var gestureInfo = gestureMgr.recognize(event, proxy.handler.findHover(event.zrX, event.zrY, null).target, proxy.dom);\n  stage === 'end' && gestureMgr.clear(); // Do not do any preventDefault here. Upper application do that if necessary.\n\n  if (gestureInfo) {\n    var type = gestureInfo.type;\n    event.gestureEvent = type;\n    proxy.handler.dispatchToElement({\n      target: gestureInfo.target\n    }, type, gestureInfo.event);\n  }\n} // function onMSGestureChange(proxy, event) {\n//     if (event.translationX || event.translationY) {\n//         // mousemove is carried by MSGesture to reduce the sensitivity.\n//         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n//     }\n//     if (event.scale !== 1) {\n//         event.pinchX = event.offsetX;\n//         event.pinchY = event.offsetY;\n//         event.pinchScale = event.scale;\n//         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n//     }\n// }\n\n/**\n * Prevent mouse event from being dispatched after Touch Events action\n * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n * Result: Blocking Mouse Events for 700ms.\n */\n\n\nfunction setTouchTimer(instance) {\n  instance._touching = true;\n  clearTimeout(instance._touchTimer);\n  instance._touchTimer = setTimeout(function () {\n    instance._touching = false;\n  }, 700);\n}\n\nvar domHandlers = {\n  /**\n   * Mouse move handler\n   * @inner\n   * @param {Event} event\n   */\n  mousemove: function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger('mousemove', event);\n  },\n\n  /**\n   * Mouse out handler\n   * @inner\n   * @param {Event} event\n   */\n  mouseout: function (event) {\n    event = normalizeEvent(this.dom, event);\n    var element = event.toElement || event.relatedTarget;\n\n    if (element != this.dom) {\n      while (element && element.nodeType != 9) {\n        // 忽略包含在root中的dom引起的mouseOut\n        if (element === this.dom) {\n          return;\n        }\n\n        element = element.parentNode;\n      }\n    }\n\n    this.trigger('mouseout', event);\n  },\n\n  /**\n   * Touch开始响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchstart: function (event) {\n    // Default mouse behaviour should not be disabled here.\n    // For example, page may needs to be slided.\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    this._lastTouchMoment = new Date();\n    processGesture(this, event, 'start'); // In touch device, trigger `mousemove`(`mouseover`) should\n    // be triggered, and must before `mousedown` triggered.\n\n    domHandlers.mousemove.call(this, event);\n    domHandlers.mousedown.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch移动响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchmove: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'change'); // Mouse move should always be triggered no matter whether\n    // there is gestrue event, because mouse move and pinch may\n    // be used at the same time.\n\n    domHandlers.mousemove.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch结束响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchend: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'end');\n    domHandlers.mouseup.call(this, event); // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n    // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n    // we can conveniently implement \"hover style\" in both PC and touch device just\n    // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n    // to remove \"hover style\" on an element, without any additional code for\n    // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n    // style\" will remain for user view)\n    // click event should always be triggered no matter whether\n    // there is gestrue event. System click can not be prevented.\n\n    if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n      domHandlers.click.call(this, event);\n    }\n\n    setTouchTimer(this);\n  },\n  pointerdown: function (event) {\n    domHandlers.mousedown.call(this, event); // if (useMSGuesture(this, event)) {\n    //     this._msGesture.addPointer(event.pointerId);\n    // }\n  },\n  pointermove: function (event) {\n    // FIXME\n    // pointermove is so sensitive that it always triggered when\n    // tap(click) on touch screen, which affect some judgement in\n    // upper application. So, we dont support mousemove on MS touch\n    // device yet.\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mousemove.call(this, event);\n    }\n  },\n  pointerup: function (event) {\n    domHandlers.mouseup.call(this, event);\n  },\n  pointerout: function (event) {\n    // pointerout will be triggered when tap on touch screen\n    // (IE11+/Edge on MS Surface) after click event triggered,\n    // which is inconsistent with the mousout behavior we defined\n    // in touchend. So we unify them.\n    // (check domHandlers.touchend for detailed explanation)\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mouseout.call(this, event);\n    }\n  }\n};\n\nfunction isPointerFromTouch(event) {\n  var pointerType = event.pointerType;\n  return pointerType === 'pen' || pointerType === 'touch';\n} // function useMSGuesture(handlerProxy, event) {\n//     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n// }\n// Common handlers\n\n\nzrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  domHandlers[name] = function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger(name, event);\n  };\n});\n/**\n * 为控制类实例初始化dom 事件处理函数\n *\n * @inner\n * @param {module:zrender/Handler} instance 控制类实例\n */\n\nfunction initDomHandler(instance) {\n  zrUtil.each(touchHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(pointerHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(mouseHandlerNames, function (name) {\n    instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n  });\n\n  function makeMouseHandler(fn, instance) {\n    return function () {\n      if (instance._touching) {\n        return;\n      }\n\n      return fn.apply(instance, arguments);\n    };\n  }\n}\n\nfunction HandlerDomProxy(dom) {\n  Eventful.call(this);\n  this.dom = dom;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._touching = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._touchTimer;\n  /**\n   * @private\n   * @type {module:zrender/core/GestureMgr}\n   */\n\n  this._gestureMgr = new GestureMgr();\n  this._handlers = {};\n  initDomHandler(this);\n\n  if (env.pointerEventsSupported) {\n    // Only IE11+/Edge\n    // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n    // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n    // at the same time.\n    // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n    // screen, which do not occurs in pointer event.\n    // So we use pointer event to both detect touch gesture and mouse behavior.\n    mountHandlers(pointerHandlerNames, this); // FIXME\n    // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n    // which does not prevent defuault behavior occasionally (which may cause view port\n    // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n    // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n    // touch screen. And we only support click behavior on MS touch screen now.\n    // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n    // We dont support touch on IE on win7.\n    // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n    // if (typeof MSGesture === 'function') {\n    //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n    //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n    // }\n  } else {\n    if (env.touchEventsSupported) {\n      mountHandlers(touchHandlerNames, this); // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n      // addEventListener(root, 'mouseout', this._mouseoutHandler);\n    } // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n    // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n    // mouse event can not be handle in those devices.\n    // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n    // mouseevent after touch event triggered, see `setTouchTimer`.\n\n\n    mountHandlers(mouseHandlerNames, this);\n  }\n\n  function mountHandlers(handlerNames, instance) {\n    zrUtil.each(handlerNames, function (name) {\n      addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n    }, instance);\n  }\n}\n\nvar handlerDomProxyProto = HandlerDomProxy.prototype;\n\nhandlerDomProxyProto.dispose = function () {\n  var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n  for (var i = 0; i < handlerNames.length; i++) {\n    var name = handlerNames[i];\n    removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n  }\n};\n\nhandlerDomProxyProto.setCursor = function (cursorStyle) {\n  this.dom.style && (this.dom.style.cursor = cursorStyle || 'default');\n};\n\nzrUtil.mixin(HandlerDomProxy, Eventful);\nvar _default = HandlerDomProxy;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\nfunction dimAxisMapper(dim) {\n  return this._axes[dim];\n}\n/**\n * @alias module:echarts/coord/Cartesian\n * @constructor\n */\n\n\nvar Cartesian = function (name) {\n  this._axes = {};\n  this._dimList = [];\n  /**\n   * @type {string}\n   */\n\n  this.name = name || '';\n};\n\nCartesian.prototype = {\n  constructor: Cartesian,\n  type: 'cartesian',\n\n  /**\n   * Get axis\n   * @param  {number|string} dim\n   * @return {module:echarts/coord/Cartesian~Axis}\n   */\n  getAxis: function (dim) {\n    return this._axes[dim];\n  },\n\n  /**\n   * Get axes list\n   * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n   */\n  getAxes: function () {\n    return zrUtil.map(this._dimList, dimAxisMapper, this);\n  },\n\n  /**\n   * Get axes list by given scale type\n   */\n  getAxesByScale: function (scaleType) {\n    scaleType = scaleType.toLowerCase();\n    return zrUtil.filter(this.getAxes(), function (axis) {\n      return axis.scale.type === scaleType;\n    });\n  },\n\n  /**\n   * Add axis\n   * @param {module:echarts/coord/Cartesian.Axis}\n   */\n  addAxis: function (axis) {\n    var dim = axis.dim;\n    this._axes[dim] = axis;\n\n    this._dimList.push(dim);\n  },\n\n  /**\n   * Convert data to coord in nd space\n   * @param {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  dataToCoord: function (val) {\n    return this._dataCoordConvert(val, 'dataToCoord');\n  },\n\n  /**\n   * Convert coord in nd space to data\n   * @param  {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  coordToData: function (val) {\n    return this._dataCoordConvert(val, 'coordToData');\n  },\n  _dataCoordConvert: function (input, method) {\n    var dimList = this._dimList;\n    var output = input instanceof Array ? [] : {};\n\n    for (var i = 0; i < dimList.length; i++) {\n      var dim = dimList[i];\n      var axis = this._axes[dim];\n      output[dim] = axis[method](input[dim]);\n    }\n\n    return output;\n  }\n};\nvar _default = Cartesian;\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// (1) [Caution]: the logic is correct based on the premises:\n//     data processing stage is blocked in stream.\n//     See <module:echarts/stream/Scheduler#performDataProcessorTasks>\n// (2) Only register once when import repeatly.\n//     Should be executed before after series filtered and before stack calculation.\nfunction _default(ecModel) {\n  var stackInfoMap = createHashMap();\n  ecModel.eachSeries(function (seriesModel) {\n    var stack = seriesModel.get('stack'); // Compatibal: when `stack` is set as '', do not stack.\n\n    if (stack) {\n      var stackInfoList = stackInfoMap.get(stack) || stackInfoMap.set(stack, []);\n      var data = seriesModel.getData();\n      var stackInfo = {\n        // Used for calculate axis extent automatically.\n        stackResultDimension: data.getCalculationInfo('stackResultDimension'),\n        stackedOverDimension: data.getCalculationInfo('stackedOverDimension'),\n        stackedDimension: data.getCalculationInfo('stackedDimension'),\n        stackedByDimension: data.getCalculationInfo('stackedByDimension'),\n        isStackedByIndex: data.getCalculationInfo('isStackedByIndex'),\n        data: data,\n        seriesModel: seriesModel\n      }; // If stacked on axis that do not support data stack.\n\n      if (!stackInfo.stackedDimension || !(stackInfo.isStackedByIndex || stackInfo.stackedByDimension)) {\n        return;\n      }\n\n      stackInfoList.length && data.setCalculationInfo('stackedOnSeries', stackInfoList[stackInfoList.length - 1].seriesModel);\n      stackInfoList.push(stackInfo);\n    }\n  });\n  stackInfoMap.each(calculateStack);\n}\n\nfunction calculateStack(stackInfoList) {\n  each(stackInfoList, function (targetStackInfo, idxInStack) {\n    var resultVal = [];\n    var resultNaN = [NaN, NaN];\n    var dims = [targetStackInfo.stackResultDimension, targetStackInfo.stackedOverDimension];\n    var targetData = targetStackInfo.data;\n    var isStackedByIndex = targetStackInfo.isStackedByIndex; // Should not write on raw data, because stack series model list changes\n    // depending on legend selection.\n\n    var newData = targetData.map(dims, function (v0, v1, dataIndex) {\n      var sum = targetData.get(targetStackInfo.stackedDimension, dataIndex); // Consider `connectNulls` of line area, if value is NaN, stackedOver\n      // should also be NaN, to draw a appropriate belt area.\n\n      if (isNaN(sum)) {\n        return resultNaN;\n      }\n\n      var byValue;\n      var stackedDataRawIndex;\n\n      if (isStackedByIndex) {\n        stackedDataRawIndex = targetData.getRawIndex(dataIndex);\n      } else {\n        byValue = targetData.get(targetStackInfo.stackedByDimension, dataIndex);\n      } // If stackOver is NaN, chart view will render point on value start.\n\n\n      var stackedOver = NaN;\n\n      for (var j = idxInStack - 1; j >= 0; j--) {\n        var stackInfo = stackInfoList[j]; // Has been optimized by inverted indices on `stackedByDimension`.\n\n        if (!isStackedByIndex) {\n          stackedDataRawIndex = stackInfo.data.rawIndexOf(stackInfo.stackedByDimension, byValue);\n        }\n\n        if (stackedDataRawIndex >= 0) {\n          var val = stackInfo.data.getByRawIndex(stackInfo.stackResultDimension, stackedDataRawIndex); // Considering positive stack, negative stack and empty data\n\n          if (sum >= 0 && val > 0 || // Positive stack\n          sum <= 0 && val < 0 // Negative stack\n          ) {\n              sum += val;\n              stackedOver = val;\n              break;\n            }\n        }\n      }\n\n      resultVal[0] = sum;\n      resultVal[1] = stackedOver;\n      return resultVal;\n    });\n    targetData.hostModel.setData(newData); // Update for consequent calculation\n\n    targetStackInfo.data = newData;\n  });\n}\n\nmodule.exports = _default;","var util = require(\"./core/util\");\n\nvar vec2 = require(\"./core/vector\");\n\nvar Draggable = require(\"./mixin/Draggable\");\n\nvar Eventful = require(\"./mixin/Eventful\");\n\nvar SILENT = 'silent';\n\nfunction makeEventPacket(eveType, targetInfo, event) {\n  return {\n    type: eveType,\n    event: event,\n    // target can only be an element that is not silent.\n    target: targetInfo.target,\n    // topTarget can be a silent element.\n    topTarget: targetInfo.topTarget,\n    cancelBubble: false,\n    offsetX: event.zrX,\n    offsetY: event.zrY,\n    gestureEvent: event.gestureEvent,\n    pinchX: event.pinchX,\n    pinchY: event.pinchY,\n    pinchScale: event.pinchScale,\n    wheelDelta: event.zrDelta,\n    zrByTouch: event.zrByTouch,\n    which: event.which\n  };\n}\n\nfunction EmptyProxy() {}\n\nEmptyProxy.prototype.dispose = function () {};\n\nvar handlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\n/**\n * @alias module:zrender/Handler\n * @constructor\n * @extends module:zrender/mixin/Eventful\n * @param {module:zrender/Storage} storage Storage instance.\n * @param {module:zrender/Painter} painter Painter instance.\n * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n */\n\nvar Handler = function (storage, painter, proxy, painterRoot) {\n  Eventful.call(this);\n  this.storage = storage;\n  this.painter = painter;\n  this.painterRoot = painterRoot;\n  proxy = proxy || new EmptyProxy();\n  /**\n   * Proxy of event. can be Dom, WebGLSurface, etc.\n   */\n\n  this.proxy = null;\n  /**\n   * {target, topTarget, x, y}\n   * @private\n   * @type {Object}\n   */\n\n  this._hovered = {};\n  /**\n   * @private\n   * @type {Date}\n   */\n\n  this._lastTouchMoment;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastX;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastY;\n  Draggable.call(this);\n  this.setHandlerProxy(proxy);\n};\n\nHandler.prototype = {\n  constructor: Handler,\n  setHandlerProxy: function (proxy) {\n    if (this.proxy) {\n      this.proxy.dispose();\n    }\n\n    if (proxy) {\n      util.each(handlerNames, function (name) {\n        proxy.on && proxy.on(name, this[name], this);\n      }, this); // Attach handler\n\n      proxy.handler = this;\n    }\n\n    this.proxy = proxy;\n  },\n  mousemove: function (event) {\n    var x = event.zrX;\n    var y = event.zrY;\n    var lastHovered = this._hovered;\n    var lastHoveredTarget = lastHovered.target; // If lastHoveredTarget is removed from zr (detected by '__zr') by some API call\n    // (like 'setOption' or 'dispatchAction') in event handlers, we should find\n    // lastHovered again here. Otherwise 'mouseout' can not be triggered normally.\n    // See #6198.\n\n    if (lastHoveredTarget && !lastHoveredTarget.__zr) {\n      lastHovered = this.findHover(lastHovered.x, lastHovered.y);\n      lastHoveredTarget = lastHovered.target;\n    }\n\n    var hovered = this._hovered = this.findHover(x, y);\n    var hoveredTarget = hovered.target;\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default'); // Mouse out on previous hovered element\n\n    if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(lastHovered, 'mouseout', event);\n    } // Mouse moving on one element\n\n\n    this.dispatchToElement(hovered, 'mousemove', event); // Mouse over on a new element\n\n    if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(hovered, 'mouseover', event);\n    }\n  },\n  mouseout: function (event) {\n    this.dispatchToElement(this._hovered, 'mouseout', event); // There might be some doms created by upper layer application\n    // at the same level of painter.getViewportRoot() (e.g., tooltip\n    // dom created by echarts), where 'globalout' event should not\n    // be triggered when mouse enters these doms. (But 'mouseout'\n    // should be triggered at the original hovered element as usual).\n\n    var element = event.toElement || event.relatedTarget;\n    var innerDom;\n\n    do {\n      element = element && element.parentNode;\n    } while (element && element.nodeType != 9 && !(innerDom = element === this.painterRoot));\n\n    !innerDom && this.trigger('globalout', {\n      event: event\n    });\n  },\n\n  /**\n   * Resize\n   */\n  resize: function (event) {\n    this._hovered = {};\n  },\n\n  /**\n   * Dispatch event\n   * @param {string} eventName\n   * @param {event=} eventArgs\n   */\n  dispatch: function (eventName, eventArgs) {\n    var handler = this[eventName];\n    handler && handler.call(this, eventArgs);\n  },\n\n  /**\n   * Dispose\n   */\n  dispose: function () {\n    this.proxy.dispose();\n    this.storage = this.proxy = this.painter = null;\n  },\n\n  /**\n   * 设置默认的cursor style\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(cursorStyle);\n  },\n\n  /**\n   * 事件分发代理\n   *\n   * @private\n   * @param {Object} targetInfo {target, topTarget} 目标图形元素\n   * @param {string} eventName 事件名称\n   * @param {Object} event 事件对象\n   */\n  dispatchToElement: function (targetInfo, eventName, event) {\n    targetInfo = targetInfo || {};\n    var el = targetInfo.target;\n\n    if (el && el.silent) {\n      return;\n    }\n\n    var eventHandler = 'on' + eventName;\n    var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n    while (el) {\n      el[eventHandler] && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n      el.trigger(eventName, eventPacket);\n      el = el.parent;\n\n      if (eventPacket.cancelBubble) {\n        break;\n      }\n    }\n\n    if (!eventPacket.cancelBubble) {\n      // 冒泡到顶级 zrender 对象\n      this.trigger(eventName, eventPacket); // 分发事件到用户自定义层\n      // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n\n      this.painter && this.painter.eachOtherLayer(function (layer) {\n        if (typeof layer[eventHandler] == 'function') {\n          layer[eventHandler].call(layer, eventPacket);\n        }\n\n        if (layer.trigger) {\n          layer.trigger(eventName, eventPacket);\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   * @param {number} x\n   * @param {number} y\n   * @param {module:zrender/graphic/Displayable} exclude\n   * @return {model:zrender/Element}\n   * @method\n   */\n  findHover: function (x, y, exclude) {\n    var list = this.storage.getDisplayList();\n    var out = {\n      x: x,\n      y: y\n    };\n\n    for (var i = list.length - 1; i >= 0; i--) {\n      var hoverCheckResult;\n\n      if (list[i] !== exclude // getDisplayList may include ignored item in VML mode\n      && !list[i].ignore && (hoverCheckResult = isHover(list[i], x, y))) {\n        !out.topTarget && (out.topTarget = list[i]);\n\n        if (hoverCheckResult !== SILENT) {\n          out.target = list[i];\n          break;\n        }\n      }\n    }\n\n    return out;\n  }\n}; // Common handlers\n\nutil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  Handler.prototype[name] = function (event) {\n    // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n    var hovered = this.findHover(event.zrX, event.zrY);\n    var hoveredTarget = hovered.target;\n\n    if (name === 'mousedown') {\n      this._downEl = hoveredTarget;\n      this._downPoint = [event.zrX, event.zrY]; // In case click triggered before mouseup\n\n      this._upEl = hoveredTarget;\n    } else if (name === 'mouseup') {\n      this._upEl = hoveredTarget;\n    } else if (name === 'click') {\n      if (this._downEl !== this._upEl // Original click event is triggered on the whole canvas element,\n      // including the case that `mousedown` - `mousemove` - `mouseup`,\n      // which should be filtered, otherwise it will bring trouble to\n      // pan and zoom.\n      || !this._downPoint // Arbitrary value\n      || vec2.dist(this._downPoint, [event.zrX, event.zrY]) > 4) {\n        return;\n      }\n\n      this._downPoint = null;\n    }\n\n    this.dispatchToElement(hovered, name, event);\n  };\n});\n\nfunction isHover(displayable, x, y) {\n  if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n    var el = displayable;\n    var isSilent;\n\n    while (el) {\n      // If clipped by ancestor.\n      // FIXME: If clipPath has neither stroke nor fill,\n      // el.clipPath.contain(x, y) will always return false.\n      if (el.clipPath && !el.clipPath.contain(x, y)) {\n        return false;\n      }\n\n      if (el.silent) {\n        isSilent = true;\n      }\n\n      el = el.parent;\n    }\n\n    return isSilent ? SILENT : true;\n  }\n\n  return false;\n}\n\nutil.mixin(Handler, Eventful);\nutil.mixin(Handler, Draggable);\nvar _default = Handler;\nmodule.exports = _default;","var Path = require(\"../Path\");\n\nvar polyHelper = require(\"../helper/poly\");\n\n/**\n * @module zrender/graphic/shape/Polyline\n */\nvar _default = Path.extend({\n  type: 'polyline',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, false);\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar globalListener = require(\"./globalListener\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AxisPointerView = echarts.extendComponentView({\n  type: 'axisPointer',\n  render: function (globalAxisPointerModel, ecModel, api) {\n    var globalTooltipModel = ecModel.getComponent('tooltip');\n    var triggerOn = globalAxisPointerModel.get('triggerOn') || globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click'; // Register global listener in AxisPointerView to enable\n    // AxisPointerView to be independent to Tooltip.\n\n    globalListener.register('axisPointer', api, function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none' && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)) {\n        dispatchAction({\n          type: 'updateAxisPointer',\n          currTrigger: currTrigger,\n          x: e && e.offsetX,\n          y: e && e.offsetY\n        });\n      }\n    });\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    globalListener.unregister(api.getZr(), 'axisPointer');\n    AxisPointerView.superApply(this._model, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    globalListener.unregister('axisPointer', api);\n    AxisPointerView.superApply(this._model, 'dispose', arguments);\n  }\n});\nvar _default = AxisPointerView;\nmodule.exports = _default;","var Path = require(\"./Path\");\n\n// CompoundPath to improve performance\nvar _default = Path.extend({\n  type: 'compound',\n  shape: {\n    paths: null\n  },\n  _updatePathDirty: function () {\n    var dirtyPath = this.__dirtyPath;\n    var paths = this.shape.paths;\n\n    for (var i = 0; i < paths.length; i++) {\n      // Mark as dirty if any subpath is dirty\n      dirtyPath = dirtyPath || paths[i].__dirtyPath;\n    }\n\n    this.__dirtyPath = dirtyPath;\n    this.__dirty = this.__dirty || dirtyPath;\n  },\n  beforeBrush: function () {\n    this._updatePathDirty();\n\n    var paths = this.shape.paths || [];\n    var scale = this.getGlobalScale(); // Update path scale\n\n    for (var i = 0; i < paths.length; i++) {\n      if (!paths[i].path) {\n        paths[i].createPathProxy();\n      }\n\n      paths[i].path.setScale(scale[0], scale[1]);\n    }\n  },\n  buildPath: function (ctx, shape) {\n    var paths = shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].buildPath(ctx, paths[i].shape, true);\n    }\n  },\n  afterBrush: function () {\n    var paths = this.shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].__dirtyPath = false;\n    }\n  },\n  getBoundingRect: function () {\n    this._updatePathDirty();\n\n    return Path.prototype.getBoundingRect.call(this);\n  }\n});\n\nmodule.exports = _default;","var Path = require(\"zrender/lib/graphic/Path\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar fixClipWithShadow = require(\"zrender/lib/graphic/helper/fixClipWithShadow\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Poly path support NaN point\nvar vec2Min = vec2.min;\nvar vec2Max = vec2.max;\nvar scaleAndAdd = vec2.scaleAndAdd;\nvar v2Copy = vec2.copy; // Temporary variable\n\nvar v = [];\nvar cp0 = [];\nvar cp1 = [];\n\nfunction isPointNull(p) {\n  return isNaN(p[0]) || isNaN(p[1]);\n}\n\nfunction drawSegment(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  // if (smoothMonotone == null) {\n  //     if (isMono(points, 'x')) {\n  //         return drawMono(ctx, points, start, segLen, allLen,\n  //             dir, smoothMin, smoothMax, smooth, 'x', connectNulls);\n  //     }\n  //     else if (isMono(points, 'y')) {\n  //         return drawMono(ctx, points, start, segLen, allLen,\n  //             dir, smoothMin, smoothMax, smooth, 'y', connectNulls);\n  //     }\n  //     else {\n  //         return drawNonMono.apply(this, arguments);\n  //     }\n  // }\n  // else if (smoothMonotone !== 'none' && isMono(points, smoothMonotone)) {\n  //     return drawMono.apply(this, arguments);\n  // }\n  // else {\n  //     return drawNonMono.apply(this, arguments);\n  // }\n  if (smoothMonotone === 'none' || !smoothMonotone) {\n    return drawNonMono.apply(this, arguments);\n  } else {\n    return drawMono.apply(this, arguments);\n  }\n}\n/**\n * Check if points is in monotone.\n *\n * @param {number[][]} points         Array of points which is in [x, y] form\n * @param {string}     smoothMonotone 'x', 'y', or 'none', stating for which\n *                                    dimension that is checking.\n *                                    If is 'none', `drawNonMono` should be\n *                                    called.\n *                                    If is undefined, either being monotone\n *                                    in 'x' or 'y' will call `drawMono`.\n */\n// function isMono(points, smoothMonotone) {\n//     if (points.length <= 1) {\n//         return true;\n//     }\n//     var dim = smoothMonotone === 'x' ? 0 : 1;\n//     var last = points[0][dim];\n//     var lastDiff = 0;\n//     for (var i = 1; i < points.length; ++i) {\n//         var diff = points[i][dim] - last;\n//         if (!isNaN(diff) && !isNaN(lastDiff)\n//             && diff !== 0 && lastDiff !== 0\n//             && ((diff >= 0) !== (lastDiff >= 0))\n//         ) {\n//             return false;\n//         }\n//         if (!isNaN(diff) && diff !== 0) {\n//             lastDiff = diff;\n//             last = points[i][dim];\n//         }\n//     }\n//     return true;\n// }\n\n/**\n * Draw smoothed line in monotone, in which only vertical or horizontal bezier\n * control points will be used. This should be used when points are monotone\n * either in x or y dimension.\n */\n\n\nfunction drawMono(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  var prevIdx = 0;\n  var idx = start;\n\n  for (var k = 0; k < segLen; k++) {\n    var p = points[idx];\n\n    if (idx >= allLen || idx < 0) {\n      break;\n    }\n\n    if (isPointNull(p)) {\n      if (connectNulls) {\n        idx += dir;\n        continue;\n      }\n\n      break;\n    }\n\n    if (idx === start) {\n      ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n    } else {\n      if (smooth > 0) {\n        var prevP = points[prevIdx];\n        var dim = smoothMonotone === 'y' ? 1 : 0; // Length of control point to p, either in x or y, but not both\n\n        var ctrlLen = (p[dim] - prevP[dim]) * smooth;\n        v2Copy(cp0, prevP);\n        cp0[dim] = prevP[dim] + ctrlLen;\n        v2Copy(cp1, p);\n        cp1[dim] = p[dim] - ctrlLen;\n        ctx.bezierCurveTo(cp0[0], cp0[1], cp1[0], cp1[1], p[0], p[1]);\n      } else {\n        ctx.lineTo(p[0], p[1]);\n      }\n    }\n\n    prevIdx = idx;\n    idx += dir;\n  }\n\n  return k;\n}\n/**\n * Draw smoothed line in non-monotone, in may cause undesired curve in extreme\n * situations. This should be used when points are non-monotone neither in x or\n * y dimension.\n */\n\n\nfunction drawNonMono(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  var prevIdx = 0;\n  var idx = start;\n\n  for (var k = 0; k < segLen; k++) {\n    var p = points[idx];\n\n    if (idx >= allLen || idx < 0) {\n      break;\n    }\n\n    if (isPointNull(p)) {\n      if (connectNulls) {\n        idx += dir;\n        continue;\n      }\n\n      break;\n    }\n\n    if (idx === start) {\n      ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n      v2Copy(cp0, p);\n    } else {\n      if (smooth > 0) {\n        var nextIdx = idx + dir;\n        var nextP = points[nextIdx];\n\n        if (connectNulls) {\n          // Find next point not null\n          while (nextP && isPointNull(points[nextIdx])) {\n            nextIdx += dir;\n            nextP = points[nextIdx];\n          }\n        }\n\n        var ratioNextSeg = 0.5;\n        var prevP = points[prevIdx];\n        var nextP = points[nextIdx]; // Last point\n\n        if (!nextP || isPointNull(nextP)) {\n          v2Copy(cp1, p);\n        } else {\n          // If next data is null in not connect case\n          if (isPointNull(nextP) && !connectNulls) {\n            nextP = p;\n          }\n\n          vec2.sub(v, nextP, prevP);\n          var lenPrevSeg;\n          var lenNextSeg;\n\n          if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n            var dim = smoothMonotone === 'x' ? 0 : 1;\n            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n          } else {\n            lenPrevSeg = vec2.dist(p, prevP);\n            lenNextSeg = vec2.dist(p, nextP);\n          } // Use ratio of seg length\n\n\n          ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n          scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n        } // Smooth constraint\n\n\n        vec2Min(cp0, cp0, smoothMax);\n        vec2Max(cp0, cp0, smoothMin);\n        vec2Min(cp1, cp1, smoothMax);\n        vec2Max(cp1, cp1, smoothMin);\n        ctx.bezierCurveTo(cp0[0], cp0[1], cp1[0], cp1[1], p[0], p[1]); // cp0 of next segment\n\n        scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n      } else {\n        ctx.lineTo(p[0], p[1]);\n      }\n    }\n\n    prevIdx = idx;\n    idx += dir;\n  }\n\n  return k;\n}\n\nfunction getBoundingBox(points, smoothConstraint) {\n  var ptMin = [Infinity, Infinity];\n  var ptMax = [-Infinity, -Infinity];\n\n  if (smoothConstraint) {\n    for (var i = 0; i < points.length; i++) {\n      var pt = points[i];\n\n      if (pt[0] < ptMin[0]) {\n        ptMin[0] = pt[0];\n      }\n\n      if (pt[1] < ptMin[1]) {\n        ptMin[1] = pt[1];\n      }\n\n      if (pt[0] > ptMax[0]) {\n        ptMax[0] = pt[0];\n      }\n\n      if (pt[1] > ptMax[1]) {\n        ptMax[1] = pt[1];\n      }\n    }\n  }\n\n  return {\n    min: smoothConstraint ? ptMin : ptMax,\n    max: smoothConstraint ? ptMax : ptMin\n  };\n}\n\nvar Polyline = Path.extend({\n  type: 'ec-polyline',\n  shape: {\n    points: [],\n    smooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  style: {\n    fill: null,\n    stroke: '#000'\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var points = shape.points;\n    var i = 0;\n    var len = points.length;\n    var result = getBoundingBox(points, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      i += drawSegment(ctx, points, i, len, len, 1, result.min, result.max, shape.smooth, shape.smoothMonotone, shape.connectNulls) + 1;\n    }\n  }\n});\nvar Polygon = Path.extend({\n  type: 'ec-polygon',\n  shape: {\n    points: [],\n    // Offset between stacked base points and points\n    stackedOnPoints: [],\n    smooth: 0,\n    stackedOnSmooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var points = shape.points;\n    var stackedOnPoints = shape.stackedOnPoints;\n    var i = 0;\n    var len = points.length;\n    var smoothMonotone = shape.smoothMonotone;\n    var bbox = getBoundingBox(points, shape.smoothConstraint);\n    var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      var k = drawSegment(ctx, points, i, len, len, 1, bbox.min, bbox.max, shape.smooth, smoothMonotone, shape.connectNulls);\n      drawSegment(ctx, stackedOnPoints, i + k - 1, k, len, -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth, smoothMonotone, shape.connectNulls);\n      i += k + 1;\n      ctx.closePath();\n    }\n  }\n});\nexports.Polyline = Polyline;\nexports.Polygon = Polygon;","// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n/**\n * Simple double linked list. Compared with array, it has O(1) remove operation.\n * @constructor\n */\nvar LinkedList = function () {\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n  this.head = null;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.tail = null;\n  this._len = 0;\n};\n\nvar linkedListProto = LinkedList.prototype;\n/**\n * Insert a new value at the tail\n * @param  {} val\n * @return {module:zrender/core/LRU~Entry}\n */\n\nlinkedListProto.insert = function (val) {\n  var entry = new Entry(val);\n  this.insertEntry(entry);\n  return entry;\n};\n/**\n * Insert an entry at the tail\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.insertEntry = function (entry) {\n  if (!this.head) {\n    this.head = this.tail = entry;\n  } else {\n    this.tail.next = entry;\n    entry.prev = this.tail;\n    entry.next = null;\n    this.tail = entry;\n  }\n\n  this._len++;\n};\n/**\n * Remove entry.\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.remove = function (entry) {\n  var prev = entry.prev;\n  var next = entry.next;\n\n  if (prev) {\n    prev.next = next;\n  } else {\n    // Is head\n    this.head = next;\n  }\n\n  if (next) {\n    next.prev = prev;\n  } else {\n    // Is tail\n    this.tail = prev;\n  }\n\n  entry.next = entry.prev = null;\n  this._len--;\n};\n/**\n * @return {number}\n */\n\n\nlinkedListProto.len = function () {\n  return this._len;\n};\n/**\n * Clear list\n */\n\n\nlinkedListProto.clear = function () {\n  this.head = this.tail = null;\n  this._len = 0;\n};\n/**\n * @constructor\n * @param {} val\n */\n\n\nvar Entry = function (val) {\n  /**\n   * @type {}\n   */\n  this.value = val;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.next;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.prev;\n};\n/**\n * LRU Cache\n * @constructor\n * @alias module:zrender/core/LRU\n */\n\n\nvar LRU = function (maxSize) {\n  this._list = new LinkedList();\n  this._map = {};\n  this._maxSize = maxSize || 10;\n  this._lastRemovedEntry = null;\n};\n\nvar LRUProto = LRU.prototype;\n/**\n * @param  {string} key\n * @param  {} value\n * @return {} Removed value\n */\n\nLRUProto.put = function (key, value) {\n  var list = this._list;\n  var map = this._map;\n  var removed = null;\n\n  if (map[key] == null) {\n    var len = list.len(); // Reuse last removed entry\n\n    var entry = this._lastRemovedEntry;\n\n    if (len >= this._maxSize && len > 0) {\n      // Remove the least recently used\n      var leastUsedEntry = list.head;\n      list.remove(leastUsedEntry);\n      delete map[leastUsedEntry.key];\n      removed = leastUsedEntry.value;\n      this._lastRemovedEntry = leastUsedEntry;\n    }\n\n    if (entry) {\n      entry.value = value;\n    } else {\n      entry = new Entry(value);\n    }\n\n    entry.key = key;\n    list.insertEntry(entry);\n    map[key] = entry;\n  }\n\n  return removed;\n};\n/**\n * @param  {string} key\n * @return {}\n */\n\n\nLRUProto.get = function (key) {\n  var entry = this._map[key];\n  var list = this._list;\n\n  if (entry != null) {\n    // Put the latest used entry in the tail\n    if (entry !== list.tail) {\n      list.remove(entry);\n      list.insertEntry(entry);\n    }\n\n    return entry.value;\n  }\n};\n/**\n * Clear the cache\n */\n\n\nLRUProto.clear = function () {\n  this._list.clear();\n\n  this._map = {};\n};\n\nvar _default = LRU;\nmodule.exports = _default;","var guid = require(\"./core/guid\");\n\nvar Eventful = require(\"./mixin/Eventful\");\n\nvar Transformable = require(\"./mixin/Transformable\");\n\nvar Animatable = require(\"./mixin/Animatable\");\n\nvar zrUtil = require(\"./core/util\");\n\n/**\n * @alias module:zrender/Element\n * @constructor\n * @extends {module:zrender/mixin/Animatable}\n * @extends {module:zrender/mixin/Transformable}\n * @extends {module:zrender/mixin/Eventful}\n */\nvar Element = function (opts) {\n  // jshint ignore:line\n  Transformable.call(this, opts);\n  Eventful.call(this, opts);\n  Animatable.call(this, opts);\n  /**\n   * 画布元素ID\n   * @type {string}\n   */\n\n  this.id = opts.id || guid();\n};\n\nElement.prototype = {\n  /**\n   * 元素类型\n   * Element type\n   * @type {string}\n   */\n  type: 'element',\n\n  /**\n   * 元素名字\n   * Element name\n   * @type {string}\n   */\n  name: '',\n\n  /**\n   * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n   * ZRender instance will be assigned when element is associated with zrender\n   * @name module:/zrender/Element#__zr\n   * @type {module:zrender/ZRender}\n   */\n  __zr: null,\n\n  /**\n   * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n   * If ignore drawing and events of the element object\n   * @name module:/zrender/Element#ignore\n   * @type {boolean}\n   * @default false\n   */\n  ignore: false,\n\n  /**\n   * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n   * 该路径会继承被裁减对象的变换\n   * @type {module:zrender/graphic/Path}\n   * @see http://www.w3.org/TR/2dcontext/#clipping-region\n   * @readOnly\n   */\n  clipPath: null,\n\n  /**\n   * 是否是 Group\n   * @type {boolean}\n   */\n  isGroup: false,\n\n  /**\n   * Drift element\n   * @param  {number} dx dx on the global space\n   * @param  {number} dy dy on the global space\n   */\n  drift: function (dx, dy) {\n    switch (this.draggable) {\n      case 'horizontal':\n        dy = 0;\n        break;\n\n      case 'vertical':\n        dx = 0;\n        break;\n    }\n\n    var m = this.transform;\n\n    if (!m) {\n      m = this.transform = [1, 0, 0, 1, 0, 0];\n    }\n\n    m[4] += dx;\n    m[5] += dy;\n    this.decomposeTransform();\n    this.dirty(false);\n  },\n\n  /**\n   * Hook before update\n   */\n  beforeUpdate: function () {},\n\n  /**\n   * Hook after update\n   */\n  afterUpdate: function () {},\n\n  /**\n   * Update each frame\n   */\n  update: function () {\n    this.updateTransform();\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {},\n\n  /**\n   * @protected\n   */\n  attrKV: function (key, value) {\n    if (key === 'position' || key === 'scale' || key === 'origin') {\n      // Copy the array\n      if (value) {\n        var target = this[key];\n\n        if (!target) {\n          target = this[key] = [];\n        }\n\n        target[0] = value[0];\n        target[1] = value[1];\n      }\n    } else {\n      this[key] = value;\n    }\n  },\n\n  /**\n   * Hide the element\n   */\n  hide: function () {\n    this.ignore = true;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * Show the element\n   */\n  show: function () {\n    this.ignore = false;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * @param {string|Object} key\n   * @param {*} value\n   */\n  attr: function (key, value) {\n    if (typeof key === 'string') {\n      this.attrKV(key, value);\n    } else if (zrUtil.isObject(key)) {\n      for (var name in key) {\n        if (key.hasOwnProperty(name)) {\n          this.attrKV(name, key[name]);\n        }\n      }\n    }\n\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * @param {module:zrender/graphic/Path} clipPath\n   */\n  setClipPath: function (clipPath) {\n    var zr = this.__zr;\n\n    if (zr) {\n      clipPath.addSelfToZr(zr);\n    } // Remove previous clip path\n\n\n    if (this.clipPath && this.clipPath !== clipPath) {\n      this.removeClipPath();\n    }\n\n    this.clipPath = clipPath;\n    clipPath.__zr = zr;\n    clipPath.__clipTarget = this;\n    this.dirty(false);\n  },\n\n  /**\n   */\n  removeClipPath: function () {\n    var clipPath = this.clipPath;\n\n    if (clipPath) {\n      if (clipPath.__zr) {\n        clipPath.removeSelfFromZr(clipPath.__zr);\n      }\n\n      clipPath.__zr = null;\n      clipPath.__clipTarget = null;\n      this.clipPath = null;\n      this.dirty(false);\n    }\n  },\n\n  /**\n   * Add self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  addSelfToZr: function (zr) {\n    this.__zr = zr; // 添加动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.addAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.addSelfToZr(zr);\n    }\n  },\n\n  /**\n   * Remove self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  removeSelfFromZr: function (zr) {\n    this.__zr = null; // 移除动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.removeAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.removeSelfFromZr(zr);\n    }\n  }\n};\nzrUtil.mixin(Element, Animatable);\nzrUtil.mixin(Element, Transformable);\nzrUtil.mixin(Element, Eventful);\nvar _default = Element;\nmodule.exports = _default;","var PathProxy = require(\"../core/PathProxy\");\n\nvar line = require(\"./line\");\n\nvar cubic = require(\"./cubic\");\n\nvar quadratic = require(\"./quadratic\");\n\nvar arc = require(\"./arc\");\n\nvar _util = require(\"./util\");\n\nvar normalizeRadian = _util.normalizeRadian;\n\nvar curve = require(\"../core/curve\");\n\nvar windingLine = require(\"./windingLine\");\n\nvar CMD = PathProxy.CMD;\nvar PI2 = Math.PI * 2;\nvar EPSILON = 1e-4;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n} // 临时数组\n\n\nvar roots = [-1, -1, -1];\nvar extrema = [-1, -1];\n\nfunction swapExtrema() {\n  var tmp = extrema[0];\n  extrema[0] = extrema[1];\n  extrema[1] = tmp;\n}\n\nfunction windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 && y > y3 || y < y0 && y < y1 && y < y2 && y < y3) {\n    return 0;\n  }\n\n  var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var w = 0;\n    var nExtrema = -1;\n    var y0_, y1_;\n\n    for (var i = 0; i < nRoots; i++) {\n      var t = roots[i]; // Avoid winding error when intersection point is the connect point of two line of polygon\n\n      var unit = t === 0 || t === 1 ? 0.5 : 1;\n      var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n\n      if (x_ < x) {\n        // Quick reject\n        continue;\n      }\n\n      if (nExtrema < 0) {\n        nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n\n        if (extrema[1] < extrema[0] && nExtrema > 1) {\n          swapExtrema();\n        }\n\n        y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n\n        if (nExtrema > 1) {\n          y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n        }\n      }\n\n      if (nExtrema == 2) {\n        // 分成三段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else if (t < extrema[1]) {\n          w += y1_ < y0_ ? unit : -unit;\n        } else {\n          w += y3 < y1_ ? unit : -unit;\n        }\n      } else {\n        // 分成两段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else {\n          w += y3 < y0_ ? unit : -unit;\n        }\n      }\n    }\n\n    return w;\n  }\n}\n\nfunction windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 || y < y0 && y < y1 && y < y2) {\n    return 0;\n  }\n\n  var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var t = curve.quadraticExtremum(y0, y1, y2);\n\n    if (t >= 0 && t <= 1) {\n      var w = 0;\n      var y_ = curve.quadraticAt(y0, y1, y2, t);\n\n      for (var i = 0; i < nRoots; i++) {\n        // Remove one endpoint.\n        var unit = roots[i] === 0 || roots[i] === 1 ? 0.5 : 1;\n        var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n\n        if (x_ < x) {\n          // Quick reject\n          continue;\n        }\n\n        if (roots[i] < t) {\n          w += y_ < y0 ? unit : -unit;\n        } else {\n          w += y2 < y_ ? unit : -unit;\n        }\n      }\n\n      return w;\n    } else {\n      // Remove one endpoint.\n      var unit = roots[0] === 0 || roots[0] === 1 ? 0.5 : 1;\n      var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n\n      if (x_ < x) {\n        // Quick reject\n        return 0;\n      }\n\n      return y2 < y0 ? unit : -unit;\n    }\n  }\n} // TODO\n// Arc 旋转\n\n\nfunction windingArc(cx, cy, r, startAngle, endAngle, anticlockwise, x, y) {\n  y -= cy;\n\n  if (y > r || y < -r) {\n    return 0;\n  }\n\n  var tmp = Math.sqrt(r * r - y * y);\n  roots[0] = -tmp;\n  roots[1] = tmp;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff < 1e-4) {\n    return 0;\n  }\n\n  if (diff % PI2 < 1e-4) {\n    // Is a circle\n    startAngle = 0;\n    endAngle = PI2;\n    var dir = anticlockwise ? 1 : -1;\n\n    if (x >= roots[0] + cx && x <= roots[1] + cx) {\n      return dir;\n    } else {\n      return 0;\n    }\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var w = 0;\n\n  for (var i = 0; i < 2; i++) {\n    var x_ = roots[i];\n\n    if (x_ + cx > x) {\n      var angle = Math.atan2(y, x_);\n      var dir = anticlockwise ? 1 : -1;\n\n      if (angle < 0) {\n        angle = PI2 + angle;\n      }\n\n      if (angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle) {\n        if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n          dir = -dir;\n        }\n\n        w += dir;\n      }\n    }\n  }\n\n  return w;\n}\n\nfunction containPath(data, lineWidth, isStroke, x, y) {\n  var w = 0;\n  var xi = 0;\n  var yi = 0;\n  var x0 = 0;\n  var y0 = 0;\n\n  for (var i = 0; i < data.length;) {\n    var cmd = data[i++]; // Begin a new subpath\n\n    if (cmd === CMD.M && i > 1) {\n      // Close previous subpath\n      if (!isStroke) {\n        w += windingLine(xi, yi, x0, y0, x, y);\n      } // 如果被任何一个 subpath 包含\n      // if (w !== 0) {\n      //     return true;\n      // }\n\n    }\n\n    if (i == 1) {\n      // 如果第一个命令是 L, C, Q\n      // 则 previous point 同绘制命令的第一个 point\n      //\n      // 第一个命令为 Arc 的情况下会在后面特殊处理\n      xi = data[i];\n      yi = data[i + 1];\n      x0 = xi;\n      y0 = yi;\n    }\n\n    switch (cmd) {\n      case CMD.M:\n        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n        // 在 closePath 的时候使用\n        x0 = data[i++];\n        y0 = data[i++];\n        xi = x0;\n        yi = y0;\n        break;\n\n      case CMD.L:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n          w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.C:\n        if (isStroke) {\n          if (cubic.containStroke(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.Q:\n        if (isStroke) {\n          if (quadratic.containStroke(xi, yi, data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.A:\n        // TODO Arc 判断的开销比较大\n        var cx = data[i++];\n        var cy = data[i++];\n        var rx = data[i++];\n        var ry = data[i++];\n        var theta = data[i++];\n        var dTheta = data[i++]; // TODO Arc 旋转\n\n        var psi = data[i++];\n        var anticlockwise = 1 - data[i++];\n        var x1 = Math.cos(theta) * rx + cx;\n        var y1 = Math.sin(theta) * ry + cy; // 不是直接使用 arc 命令\n\n        if (i > 1) {\n          w += windingLine(xi, yi, x1, y1, x, y);\n        } else {\n          // 第一个命令起点还未定义\n          x0 = x1;\n          y0 = y1;\n        } // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n\n\n        var _x = (x - cx) * ry / rx + cx;\n\n        if (isStroke) {\n          if (arc.containStroke(cx, cy, ry, theta, theta + dTheta, anticlockwise, lineWidth, _x, y)) {\n            return true;\n          }\n        } else {\n          w += windingArc(cx, cy, ry, theta, theta + dTheta, anticlockwise, _x, y);\n        }\n\n        xi = Math.cos(theta + dTheta) * rx + cx;\n        yi = Math.sin(theta + dTheta) * ry + cy;\n        break;\n\n      case CMD.R:\n        x0 = xi = data[i++];\n        y0 = yi = data[i++];\n        var width = data[i++];\n        var height = data[i++];\n        var x1 = x0 + width;\n        var y1 = y0 + height;\n\n        if (isStroke) {\n          if (line.containStroke(x0, y0, x1, y0, lineWidth, x, y) || line.containStroke(x1, y0, x1, y1, lineWidth, x, y) || line.containStroke(x1, y1, x0, y1, lineWidth, x, y) || line.containStroke(x0, y1, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // FIXME Clockwise ?\n          w += windingLine(x1, y0, x1, y1, x, y);\n          w += windingLine(x0, y1, x0, y0, x, y);\n        }\n\n        break;\n\n      case CMD.Z:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // Close a subpath\n          w += windingLine(xi, yi, x0, y0, x, y); // 如果被任何一个 subpath 包含\n          // FIXME subpaths may overlap\n          // if (w !== 0) {\n          //     return true;\n          // }\n        }\n\n        xi = x0;\n        yi = y0;\n        break;\n    }\n  }\n\n  if (!isStroke && !isAroundEqual(yi, y0)) {\n    w += windingLine(xi, yi, x0, y0, x, y) || 0;\n  }\n\n  return w !== 0;\n}\n\nfunction contain(pathData, x, y) {\n  return containPath(pathData, 0, false, x, y);\n}\n\nfunction containStroke(pathData, lineWidth, x, y) {\n  return containPath(pathData, lineWidth, true, x, y);\n}\n\nexports.contain = contain;\nexports.containStroke = containStroke;","var Path = require(\"../Path\");\n\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\nvar _default = Path.extend({\n  type: 'circle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    // Better stroking in ShapeBundle\n    // Always do it may have performence issue ( fill may be 2x more cost)\n    if (inBundle) {\n      ctx.moveTo(shape.cx + shape.r, shape.cy);\n    } // else {\n    //     if (ctx.allocate && !ctx.data.length) {\n    //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n    //     }\n    // }\n    // Better stroking in ShapeBundle\n    // ctx.moveTo(shape.cx + shape.r, shape.cy);\n\n\n    ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n  }\n});\n\nmodule.exports = _default;","var Pattern = function (image, repeat) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {image: ...}`, where this constructor will not be called.\n  this.image = image;\n  this.repeat = repeat; // Can be cloned\n\n  this.type = 'pattern';\n};\n\nPattern.prototype.getCanvasPattern = function (ctx) {\n  return ctx.createPattern(this.image, this.repeat || 'repeat');\n};\n\nvar _default = Pattern;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar clazzUtil = require(\"../../util/clazz\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar axisPointerModelHelper = require(\"./modelHelper\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar throttleUtil = require(\"../../util/throttle\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\nvar clone = zrUtil.clone;\nvar bind = zrUtil.bind;\n/**\n * Base axis pointer class in 2D.\n * Implemenents {module:echarts/component/axis/IAxisPointer}.\n */\n\nfunction BaseAxisPointer() {}\n\nBaseAxisPointer.prototype = {\n  /**\n   * @private\n   */\n  _group: null,\n\n  /**\n   * @private\n   */\n  _lastGraphicKey: null,\n\n  /**\n   * @private\n   */\n  _handle: null,\n\n  /**\n   * @private\n   */\n  _dragging: false,\n\n  /**\n   * @private\n   */\n  _lastValue: null,\n\n  /**\n   * @private\n   */\n  _lastStatus: null,\n\n  /**\n   * @private\n   */\n  _payloadInfo: null,\n\n  /**\n   * In px, arbitrary value. Do not set too small,\n   * no animation is ok for most cases.\n   * @protected\n   */\n  animationThreshold: 15,\n\n  /**\n   * @implement\n   */\n  render: function (axisModel, axisPointerModel, api, forceRender) {\n    var value = axisPointerModel.get('value');\n    var status = axisPointerModel.get('status'); // Bind them to `this`, not in closure, otherwise they will not\n    // be replaced when user calling setOption in not merge mode.\n\n    this._axisModel = axisModel;\n    this._axisPointerModel = axisPointerModel;\n    this._api = api; // Optimize: `render` will be called repeatly during mouse move.\n    // So it is power consuming if performing `render` each time,\n    // especially on mobile device.\n\n    if (!forceRender && this._lastValue === value && this._lastStatus === status) {\n      return;\n    }\n\n    this._lastValue = value;\n    this._lastStatus = status;\n    var group = this._group;\n    var handle = this._handle;\n\n    if (!status || status === 'hide') {\n      // Do not clear here, for animation better.\n      group && group.hide();\n      handle && handle.hide();\n      return;\n    }\n\n    group && group.show();\n    handle && handle.show(); // Otherwise status is 'show'\n\n    var elOption = {};\n    this.makeElOption(elOption, value, axisModel, axisPointerModel, api); // Enable change axis pointer type.\n\n    var graphicKey = elOption.graphicKey;\n\n    if (graphicKey !== this._lastGraphicKey) {\n      this.clear(api);\n    }\n\n    this._lastGraphicKey = graphicKey;\n    var moveAnimation = this._moveAnimation = this.determineAnimation(axisModel, axisPointerModel);\n\n    if (!group) {\n      group = this._group = new graphic.Group();\n      this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n      this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n      api.getZr().add(group);\n    } else {\n      var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n      this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n      this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n    }\n\n    updateMandatoryProps(group, axisPointerModel, true);\n\n    this._renderHandle(value);\n  },\n\n  /**\n   * @implement\n   */\n  remove: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @implement\n   */\n  dispose: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @protected\n   */\n  determineAnimation: function (axisModel, axisPointerModel) {\n    var animation = axisPointerModel.get('animation');\n    var axis = axisModel.axis;\n    var isCategoryAxis = axis.type === 'category';\n    var useSnap = axisPointerModel.get('snap'); // Value axis without snap always do not snap.\n\n    if (!useSnap && !isCategoryAxis) {\n      return false;\n    }\n\n    if (animation === 'auto' || animation == null) {\n      var animationThreshold = this.animationThreshold;\n\n      if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n        return true;\n      } // It is important to auto animation when snap used. Consider if there is\n      // a dataZoom, animation will be disabled when too many points exist, while\n      // it will be enabled for better visual effect when little points exist.\n\n\n      if (useSnap) {\n        var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n        var axisExtent = axis.getExtent(); // Approximate band width\n\n        return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n      }\n\n      return false;\n    }\n\n    return animation === true;\n  },\n\n  /**\n   * add {pointer, label, graphicKey} to elOption\n   * @protected\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {// Shoule be implemenented by sub-class.\n  },\n\n  /**\n   * @protected\n   */\n  createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n    var pointerOption = elOption.pointer;\n\n    if (pointerOption) {\n      var pointerEl = inner(group).pointerEl = new graphic[pointerOption.type](clone(elOption.pointer));\n      group.add(pointerEl);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n    if (elOption.label) {\n      var labelEl = inner(group).labelEl = new graphic.Rect(clone(elOption.label));\n      group.add(labelEl);\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updatePointerEl: function (group, elOption, updateProps) {\n    var pointerEl = inner(group).pointerEl;\n\n    if (pointerEl) {\n      pointerEl.setStyle(elOption.pointer.style);\n      updateProps(pointerEl, {\n        shape: elOption.pointer.shape\n      });\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n    var labelEl = inner(group).labelEl;\n\n    if (labelEl) {\n      labelEl.setStyle(elOption.label.style);\n      updateProps(labelEl, {\n        // Consider text length change in vertical axis, animation should\n        // be used on shape, otherwise the effect will be weird.\n        shape: elOption.label.shape,\n        position: elOption.label.position\n      });\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderHandle: function (value) {\n    if (this._dragging || !this.updateHandleTransform) {\n      return;\n    }\n\n    var axisPointerModel = this._axisPointerModel;\n\n    var zr = this._api.getZr();\n\n    var handle = this._handle;\n    var handleModel = axisPointerModel.getModel('handle');\n    var status = axisPointerModel.get('status');\n\n    if (!handleModel.get('show') || !status || status === 'hide') {\n      handle && zr.remove(handle);\n      this._handle = null;\n      return;\n    }\n\n    var isInit;\n\n    if (!this._handle) {\n      isInit = true;\n      handle = this._handle = graphic.createIcon(handleModel.get('icon'), {\n        cursor: 'move',\n        draggable: true,\n        onmousemove: function (e) {\n          // Fot mobile devicem, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n        drift: bind(this._onHandleDragMove, this),\n        ondragend: bind(this._onHandleDragEnd, this)\n      });\n      zr.add(handle);\n    }\n\n    updateMandatoryProps(handle, axisPointerModel, false); // update style\n\n    var includeStyles = ['color', 'borderColor', 'borderWidth', 'opacity', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'];\n    handle.setStyle(handleModel.getItemStyle(null, includeStyles)); // update position\n\n    var handleSize = handleModel.get('size');\n\n    if (!zrUtil.isArray(handleSize)) {\n      handleSize = [handleSize, handleSize];\n    }\n\n    handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n    throttleUtil.createOrUpdate(this, '_doDispatchAxisPointer', handleModel.get('throttle') || 0, 'fixRate');\n\n    this._moveHandleToValue(value, isInit);\n  },\n\n  /**\n   * @private\n   */\n  _moveHandleToValue: function (value, isInit) {\n    updateProps(this._axisPointerModel, !isInit && this._moveAnimation, this._handle, getHandleTransProps(this.getHandleTransform(value, this._axisModel, this._axisPointerModel)));\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragMove: function (dx, dy) {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    this._dragging = true; // Persistent for throttle.\n\n    var trans = this.updateHandleTransform(getHandleTransProps(handle), [dx, dy], this._axisModel, this._axisPointerModel);\n    this._payloadInfo = trans;\n    handle.stopAnimation();\n    handle.attr(getHandleTransProps(trans));\n    inner(handle).lastProp = null;\n\n    this._doDispatchAxisPointer();\n  },\n\n  /**\n   * Throttled method.\n   * @private\n   */\n  _doDispatchAxisPointer: function () {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var payloadInfo = this._payloadInfo;\n    var axisModel = this._axisModel;\n\n    this._api.dispatchAction({\n      type: 'updateAxisPointer',\n      x: payloadInfo.cursorPoint[0],\n      y: payloadInfo.cursorPoint[1],\n      tooltipOption: payloadInfo.tooltipOption,\n      axesInfo: [{\n        axisDim: axisModel.axis.dim,\n        axisIndex: axisModel.componentIndex\n      }]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragEnd: function (moveAnimation) {\n    this._dragging = false;\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var value = this._axisPointerModel.get('value'); // Consider snap or categroy axis, handle may be not consistent with\n    // axisPointer. So move handle to align the exact value position when\n    // drag ended.\n\n\n    this._moveHandleToValue(value); // For the effect: tooltip will be shown when finger holding on handle\n    // button, and will be hidden after finger left handle button.\n\n\n    this._api.dispatchAction({\n      type: 'hideTip'\n    });\n  },\n\n  /**\n   * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {number} value\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0}\n   */\n  getHandleTransform: null,\n\n  /**\n   * * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {Object} transform {position, rotation}\n   * @param {Array.<number>} delta [dx, dy]\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n   */\n  updateHandleTransform: null,\n\n  /**\n   * @private\n   */\n  clear: function (api) {\n    this._lastValue = null;\n    this._lastStatus = null;\n    var zr = api.getZr();\n    var group = this._group;\n    var handle = this._handle;\n\n    if (zr && group) {\n      this._lastGraphicKey = null;\n      group && zr.remove(group);\n      handle && zr.remove(handle);\n      this._group = null;\n      this._handle = null;\n      this._payloadInfo = null;\n    }\n  },\n\n  /**\n   * @protected\n   */\n  doClear: function () {// Implemented by sub-class if necessary.\n  },\n\n  /**\n   * @protected\n   * @param {Array.<number>} xy\n   * @param {Array.<number>} wh\n   * @param {number} [xDimIndex=0] or 1\n   */\n  buildLabel: function (xy, wh, xDimIndex) {\n    xDimIndex = xDimIndex || 0;\n    return {\n      x: xy[xDimIndex],\n      y: xy[1 - xDimIndex],\n      width: wh[xDimIndex],\n      height: wh[1 - xDimIndex]\n    };\n  }\n};\nBaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\nfunction updateProps(animationModel, moveAnimation, el, props) {\n  // Animation optimize.\n  if (!propsEqual(inner(el).lastProp, props)) {\n    inner(el).lastProp = props;\n    moveAnimation ? graphic.updateProps(el, props, animationModel) : (el.stopAnimation(), el.attr(props));\n  }\n}\n\nfunction propsEqual(lastProps, newProps) {\n  if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n    var equals = true;\n    zrUtil.each(newProps, function (item, key) {\n      equals = equals && propsEqual(lastProps[key], item);\n    });\n    return !!equals;\n  } else {\n    return lastProps === newProps;\n  }\n}\n\nfunction updateLabelShowHide(labelEl, axisPointerModel) {\n  labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n}\n\nfunction getHandleTransProps(trans) {\n  return {\n    position: trans.position.slice(),\n    rotation: trans.rotation || 0\n  };\n}\n\nfunction updateMandatoryProps(group, axisPointerModel, silent) {\n  var z = axisPointerModel.get('z');\n  var zlevel = axisPointerModel.get('zlevel');\n  group && group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n      el.silent = silent;\n    }\n  });\n}\n\nclazzUtil.enableClassExtend(BaseAxisPointer);\nvar _default = BaseAxisPointer;\nmodule.exports = _default;","var zrUtil = require(\"../core/util\");\n\nvar Gradient = require(\"./Gradient\");\n\n/**\n * x, y, r are all percent from 0 to 1\n * @param {number} [x=0.5]\n * @param {number} [y=0.5]\n * @param {number} [r=0.5]\n * @param {Array.<Object>} [colorStops]\n * @param {boolean} [globalCoord=false]\n */\nvar RadialGradient = function (x, y, r, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'radial', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0.5 : x;\n  this.y = y == null ? 0.5 : y;\n  this.r = r == null ? 0.5 : r; // Can be cloned\n\n  this.type = 'radial'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nRadialGradient.prototype = {\n  constructor: RadialGradient\n};\nzrUtil.inherits(RadialGradient, Gradient);\nvar _default = RadialGradient;\nmodule.exports = _default;","/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\nvar idStart = 0x0907;\n\nfunction _default() {\n  return idStart++;\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = {\n  getBoxLayoutParams: function () {\n    return {\n      left: this.get('left'),\n      top: this.get('top'),\n      right: this.get('right'),\n      bottom: this.get('bottom'),\n      width: this.get('width'),\n      height: this.get('height')\n    };\n  }\n};\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar _model = require(\"../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar _axisHelper = require(\"./axisHelper\");\n\nvar makeLabelFormatter = _axisHelper.makeLabelFormatter;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\n/**\n * @param {module:echats/coord/Axis} axis\n * @return {Object} {\n *     labels: [{\n *         formattedLabel: string,\n *         rawLabel: string,\n *         tickValue: number\n *     }, ...],\n *     labelCategoryInterval: number\n * }\n */\n\nfunction createAxisLabels(axis) {\n  // Only ordinal scale support tick interval\n  return axis.type === 'category' ? makeCategoryLabels(axis) : makeRealNumberLabels(axis);\n}\n/**\n * @param {module:echats/coord/Axis} axis\n * @param {module:echarts/model/Model} tickModel For example, can be axisTick, splitLine, splitArea.\n * @return {Object} {\n *     ticks: Array.<number>\n *     tickCategoryInterval: number\n * }\n */\n\n\nfunction createAxisTicks(axis, tickModel) {\n  // Only ordinal scale support tick interval\n  return axis.type === 'category' ? makeCategoryTicks(axis, tickModel) : {\n    ticks: axis.scale.getTicks()\n  };\n}\n\nfunction makeCategoryLabels(axis) {\n  var labelModel = axis.getLabelModel();\n  var result = makeCategoryLabelsActually(axis, labelModel);\n  return !labelModel.get('show') || axis.scale.isBlank() ? {\n    labels: [],\n    labelCategoryInterval: result.labelCategoryInterval\n  } : result;\n}\n\nfunction makeCategoryLabelsActually(axis, labelModel) {\n  var labelsCache = getListCache(axis, 'labels');\n  var optionLabelInterval = getOptionCategoryInterval(labelModel);\n  var result = listCacheGet(labelsCache, optionLabelInterval);\n\n  if (result) {\n    return result;\n  }\n\n  var labels;\n  var numericLabelInterval;\n\n  if (zrUtil.isFunction(optionLabelInterval)) {\n    labels = makeLabelsByCustomizedCategoryInterval(axis, optionLabelInterval);\n  } else {\n    numericLabelInterval = optionLabelInterval === 'auto' ? makeAutoCategoryInterval(axis) : optionLabelInterval;\n    labels = makeLabelsByNumericCategoryInterval(axis, numericLabelInterval);\n  } // Cache to avoid calling interval function repeatly.\n\n\n  return listCacheSet(labelsCache, optionLabelInterval, {\n    labels: labels,\n    labelCategoryInterval: numericLabelInterval\n  });\n}\n\nfunction makeCategoryTicks(axis, tickModel) {\n  var ticksCache = getListCache(axis, 'ticks');\n  var optionTickInterval = getOptionCategoryInterval(tickModel);\n  var result = listCacheGet(ticksCache, optionTickInterval);\n\n  if (result) {\n    return result;\n  }\n\n  var ticks;\n  var tickCategoryInterval; // Optimize for the case that large category data and no label displayed,\n  // we should not return all ticks.\n\n  if (!tickModel.get('show') || axis.scale.isBlank()) {\n    ticks = [];\n  }\n\n  if (zrUtil.isFunction(optionTickInterval)) {\n    ticks = makeLabelsByCustomizedCategoryInterval(axis, optionTickInterval, true);\n  } // Always use label interval by default despite label show. Consider this\n  // scenario, Use multiple grid with the xAxis sync, and only one xAxis shows\n  // labels. `splitLine` and `axisTick` should be consistent in this case.\n  else if (optionTickInterval === 'auto') {\n      var labelsResult = makeCategoryLabelsActually(axis, axis.getLabelModel());\n      tickCategoryInterval = labelsResult.labelCategoryInterval;\n      ticks = zrUtil.map(labelsResult.labels, function (labelItem) {\n        return labelItem.tickValue;\n      });\n    } else {\n      tickCategoryInterval = optionTickInterval;\n      ticks = makeLabelsByNumericCategoryInterval(axis, tickCategoryInterval, true);\n    } // Cache to avoid calling interval function repeatly.\n\n\n  return listCacheSet(ticksCache, optionTickInterval, {\n    ticks: ticks,\n    tickCategoryInterval: tickCategoryInterval\n  });\n}\n\nfunction makeRealNumberLabels(axis) {\n  var ticks = axis.scale.getTicks();\n  var labelFormatter = makeLabelFormatter(axis);\n  return {\n    labels: zrUtil.map(ticks, function (tickValue, idx) {\n      return {\n        formattedLabel: labelFormatter(tickValue, idx),\n        rawLabel: axis.scale.getLabel(tickValue),\n        tickValue: tickValue\n      };\n    })\n  };\n} // Large category data calculation is performence sensitive, and ticks and label\n// probably be fetched by multiple times. So we cache the result.\n// axis is created each time during a ec process, so we do not need to clear cache.\n\n\nfunction getListCache(axis, prop) {\n  // Because key can be funciton, and cache size always be small, we use array cache.\n  return inner(axis)[prop] || (inner(axis)[prop] = []);\n}\n\nfunction listCacheGet(cache, key) {\n  for (var i = 0; i < cache.length; i++) {\n    if (cache[i].key === key) {\n      return cache[i].value;\n    }\n  }\n}\n\nfunction listCacheSet(cache, key, value) {\n  cache.push({\n    key: key,\n    value: value\n  });\n  return value;\n}\n\nfunction makeAutoCategoryInterval(axis) {\n  var result = inner(axis).autoInterval;\n  return result != null ? result : inner(axis).autoInterval = axis.calculateCategoryInterval();\n}\n/**\n * Calculate interval for category axis ticks and labels.\n * To get precise result, at least one of `getRotate` and `isHorizontal`\n * should be implemented in axis.\n */\n\n\nfunction calculateCategoryInterval(axis) {\n  var params = fetchAutoCategoryIntervalCalculationParams(axis);\n  var labelFormatter = makeLabelFormatter(axis);\n  var rotation = (params.axisRotate - params.labelRotate) / 180 * Math.PI;\n  var ordinalScale = axis.scale;\n  var ordinalExtent = ordinalScale.getExtent(); // Providing this method is for optimization:\n  // avoid generating a long array by `getTicks`\n  // in large category data case.\n\n  var tickCount = ordinalScale.count();\n\n  if (ordinalExtent[1] - ordinalExtent[0] < 1) {\n    return 0;\n  }\n\n  var step = 1; // Simple optimization. Empirical value: tick count should less than 40.\n\n  if (tickCount > 40) {\n    step = Math.max(1, Math.floor(tickCount / 40));\n  }\n\n  var tickValue = ordinalExtent[0];\n  var unitSpan = axis.dataToCoord(tickValue + 1) - axis.dataToCoord(tickValue);\n  var unitW = Math.abs(unitSpan * Math.cos(rotation));\n  var unitH = Math.abs(unitSpan * Math.sin(rotation));\n  var maxW = 0;\n  var maxH = 0; // Caution: Performance sensitive for large category data.\n  // Consider dataZoom, we should make appropriate step to avoid O(n) loop.\n\n  for (; tickValue <= ordinalExtent[1]; tickValue += step) {\n    var width = 0;\n    var height = 0; // Polar is also calculated in assumptive linear layout here.\n    // Not precise, do not consider align and vertical align\n    // and each distance from axis line yet.\n\n    var rect = textContain.getBoundingRect(labelFormatter(tickValue), params.font, 'center', 'top'); // Magic number\n\n    width = rect.width * 1.3;\n    height = rect.height * 1.3; // Min size, void long loop.\n\n    maxW = Math.max(maxW, width, 7);\n    maxH = Math.max(maxH, height, 7);\n  }\n\n  var dw = maxW / unitW;\n  var dh = maxH / unitH; // 0/0 is NaN, 1/0 is Infinity.\n\n  isNaN(dw) && (dw = Infinity);\n  isNaN(dh) && (dh = Infinity);\n  var interval = Math.max(0, Math.floor(Math.min(dw, dh)));\n  var cache = inner(axis.model);\n  var lastAutoInterval = cache.lastAutoInterval;\n  var lastTickCount = cache.lastTickCount; // Use cache to keep interval stable while moving zoom window,\n  // otherwise the calculated interval might jitter when the zoom\n  // window size is close to the interval-changing size.\n\n  if (lastAutoInterval != null && lastTickCount != null && Math.abs(lastAutoInterval - interval) <= 1 && Math.abs(lastTickCount - tickCount) <= 1 // Always choose the bigger one, otherwise the critical\n  // point is not the same when zooming in or zooming out.\n  && lastAutoInterval > interval) {\n    interval = lastAutoInterval;\n  } // Only update cache if cache not used, otherwise the\n  // changing of interval is too insensitive.\n  else {\n      cache.lastTickCount = tickCount;\n      cache.lastAutoInterval = interval;\n    }\n\n  return interval;\n}\n\nfunction fetchAutoCategoryIntervalCalculationParams(axis) {\n  var labelModel = axis.getLabelModel();\n  return {\n    axisRotate: axis.getRotate ? axis.getRotate() : axis.isHorizontal && !axis.isHorizontal() ? 90 : 0,\n    labelRotate: labelModel.get('rotate') || 0,\n    font: labelModel.getFont()\n  };\n}\n\nfunction makeLabelsByNumericCategoryInterval(axis, categoryInterval, onlyTick) {\n  var labelFormatter = makeLabelFormatter(axis);\n  var ordinalScale = axis.scale;\n  var ordinalExtent = ordinalScale.getExtent();\n  var labelModel = axis.getLabelModel();\n  var result = []; // TODO: axisType: ordinalTime, pick the tick from each month/day/year/...\n\n  var step = Math.max((categoryInterval || 0) + 1, 1);\n  var startTick = ordinalExtent[0];\n  var tickCount = ordinalScale.count(); // Calculate start tick based on zero if possible to keep label consistent\n  // while zooming and moving while interval > 0. Otherwise the selection\n  // of displayable ticks and symbols probably keep changing.\n  // 3 is empirical value.\n\n  if (startTick !== 0 && step > 1 && tickCount / step > 2) {\n    startTick = Math.round(Math.ceil(startTick / step) * step);\n  } // (1) Only add min max label here but leave overlap checking\n  // to render stage, which also ensure the returned list\n  // suitable for splitLine and splitArea rendering.\n  // (2) Scales except category always contain min max label so\n  // do not need to perform this process.\n\n\n  var showMinMax = {\n    min: labelModel.get('showMinLabel'),\n    max: labelModel.get('showMaxLabel')\n  };\n\n  if (showMinMax.min && startTick !== ordinalExtent[0]) {\n    addItem(ordinalExtent[0]);\n  } // Optimize: avoid generating large array by `ordinalScale.getTicks()`.\n\n\n  var tickValue = startTick;\n\n  for (; tickValue <= ordinalExtent[1]; tickValue += step) {\n    addItem(tickValue);\n  }\n\n  if (showMinMax.max && tickValue !== ordinalExtent[1]) {\n    addItem(ordinalExtent[1]);\n  }\n\n  function addItem(tVal) {\n    result.push(onlyTick ? tVal : {\n      formattedLabel: labelFormatter(tVal),\n      rawLabel: ordinalScale.getLabel(tVal),\n      tickValue: tVal\n    });\n  }\n\n  return result;\n} // When interval is function, the result `false` means ignore the tick.\n// It is time consuming for large category data.\n\n\nfunction makeLabelsByCustomizedCategoryInterval(axis, categoryInterval, onlyTick) {\n  var ordinalScale = axis.scale;\n  var labelFormatter = makeLabelFormatter(axis);\n  var result = [];\n  zrUtil.each(ordinalScale.getTicks(), function (tickValue) {\n    var rawLabel = ordinalScale.getLabel(tickValue);\n\n    if (categoryInterval(tickValue, rawLabel)) {\n      result.push(onlyTick ? tickValue : {\n        formattedLabel: labelFormatter(tickValue),\n        rawLabel: rawLabel,\n        tickValue: tickValue\n      });\n    }\n  });\n  return result;\n} // Can be null|'auto'|number|function\n\n\nfunction getOptionCategoryInterval(model) {\n  var interval = model.get('interval');\n  return interval == null ? 'auto' : interval;\n}\n\nexports.createAxisLabels = createAxisLabels;\nexports.createAxisTicks = createAxisTicks;\nexports.calculateCategoryInterval = calculateCategoryInterval;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar isArray = zrUtil.isArray;\n/**\n * Make the name displayable. But we should\n * make sure it is not duplicated with user\n * specified name, so use '\\0';\n */\n\nvar DUMMY_COMPONENT_NAME_PREFIX = 'series\\0';\n/**\n * If value is not array, then translate it to array.\n * @param  {*} value\n * @return {Array} [value] or value\n */\n\nfunction normalizeToArray(value) {\n  return value instanceof Array ? value : value == null ? [] : [value];\n}\n/**\n * Sync default option between normal and emphasis like `position` and `show`\n * In case some one will write code like\n *     label: {\n *          show: false,\n *          position: 'outside',\n *          fontSize: 18\n *     },\n *     emphasis: {\n *          label: { show: true }\n *     }\n * @param {Object} opt\n * @param {string} key\n * @param {Array.<string>} subOpts\n */\n\n\nfunction defaultEmphasis(opt, key, subOpts) {\n  // Caution: performance sensitive.\n  if (opt) {\n    opt[key] = opt[key] || {};\n    opt.emphasis = opt.emphasis || {};\n    opt.emphasis[key] = opt.emphasis[key] || {}; // Default emphasis option from normal\n\n    for (var i = 0, len = subOpts.length; i < len; i++) {\n      var subOptName = subOpts[i];\n\n      if (!opt.emphasis[key].hasOwnProperty(subOptName) && opt[key].hasOwnProperty(subOptName)) {\n        opt.emphasis[key][subOptName] = opt[key][subOptName];\n      }\n    }\n  }\n}\n\nvar TEXT_STYLE_OPTIONS = ['fontStyle', 'fontWeight', 'fontSize', 'fontFamily', 'rich', 'tag', 'color', 'textBorderColor', 'textBorderWidth', 'width', 'height', 'lineHeight', 'align', 'verticalAlign', 'baseline', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY', 'textShadowColor', 'textShadowBlur', 'textShadowOffsetX', 'textShadowOffsetY', 'backgroundColor', 'borderColor', 'borderWidth', 'borderRadius', 'padding']; // modelUtil.LABEL_OPTIONS = modelUtil.TEXT_STYLE_OPTIONS.concat([\n//     'position', 'offset', 'rotate', 'origin', 'show', 'distance', 'formatter',\n//     'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\n//     // FIXME: deprecated, check and remove it.\n//     'textStyle'\n// ]);\n\n/**\n * The method do not ensure performance.\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method retieves value from data.\n * @param {string|number|Date|Array|Object} dataItem\n * @return {number|string|Date|Array.<number|string|Date>}\n */\n\nfunction getDataItemValue(dataItem) {\n  return isObject(dataItem) && !isArray(dataItem) && !(dataItem instanceof Date) ? dataItem.value : dataItem;\n}\n/**\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method determine if dataItem has extra option besides value\n * @param {string|number|Date|Array|Object} dataItem\n */\n\n\nfunction isDataItemOption(dataItem) {\n  return isObject(dataItem) && !(dataItem instanceof Array); // // markLine data can be array\n  // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n}\n/**\n * Mapping to exists for merge.\n *\n * @public\n * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n * @param {Object|Array.<Object>} newCptOptions\n * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          index of which is the same as exists.\n */\n\n\nfunction mappingToExists(exists, newCptOptions) {\n  // Mapping by the order by original option (but not order of\n  // new option) in merge mode. Because we should ensure\n  // some specified index (like xAxisIndex) is consistent with\n  // original option, which is easy to understand, espatially in\n  // media query. And in most case, merge option is used to\n  // update partial option but not be expected to change order.\n  newCptOptions = (newCptOptions || []).slice();\n  var result = zrUtil.map(exists || [], function (obj, index) {\n    return {\n      exist: obj\n    };\n  }); // Mapping by id or name if specified.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    } // id has highest priority.\n\n\n    for (var i = 0; i < result.length; i++) {\n      if (!result[i].option // Consider name: two map to one.\n      && cptOption.id != null && result[i].exist.id === cptOption.id + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n\n    for (var i = 0; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Consider name: two map to one.\n      // Can not match when both ids exist but different.\n      && (exist.id == null || cptOption.id == null) && cptOption.name != null && !isIdInner(cptOption) && !isIdInner(exist) && exist.name === cptOption.name + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n  }); // Otherwise mapping by index.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    }\n\n    var i = 0;\n\n    for (; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Existing model that already has id should be able to\n      // mapped to (because after mapping performed model may\n      // be assigned with a id, whish should not affect next\n      // mapping), except those has inner id.\n      && !isIdInner(exist) // Caution:\n      // Do not overwrite id. But name can be overwritten,\n      // because axis use name as 'show label text'.\n      // 'exist' always has id and name and we dont\n      // need to check it.\n      && cptOption.id == null) {\n        result[i].option = cptOption;\n        break;\n      }\n    }\n\n    if (i >= result.length) {\n      result.push({\n        option: cptOption\n      });\n    }\n  });\n  return result;\n}\n/**\n * Make id and name for mapping result (result of mappingToExists)\n * into `keyInfo` field.\n *\n * @public\n * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          which order is the same as exists.\n * @return {Array.<Object>} The input.\n */\n\n\nfunction makeIdAndName(mapResult) {\n  // We use this id to hash component models and view instances\n  // in echarts. id can be specified by user, or auto generated.\n  // The id generation rule ensures new view instance are able\n  // to mapped to old instance when setOption are called in\n  // no-merge mode. So we generate model id by name and plus\n  // type in view id.\n  // name can be duplicated among components, which is convenient\n  // to specify multi components (like series) by one name.\n  // Ensure that each id is distinct.\n  var idMap = zrUtil.createHashMap();\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    existCpt && idMap.set(existCpt.id, item);\n  });\n  each(mapResult, function (item, index) {\n    var opt = item.option;\n    zrUtil.assert(!opt || opt.id == null || !idMap.get(opt.id) || idMap.get(opt.id) === item, 'id duplicates: ' + (opt && opt.id));\n    opt && opt.id != null && idMap.set(opt.id, item);\n    !item.keyInfo && (item.keyInfo = {});\n  }); // Make name and id.\n\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    var opt = item.option;\n    var keyInfo = item.keyInfo;\n\n    if (!isObject(opt)) {\n      return;\n    } // name can be overwitten. Consider case: axis.name = '20km'.\n    // But id generated by name will not be changed, which affect\n    // only in that case: setOption with 'not merge mode' and view\n    // instance will be recreated, which can be accepted.\n\n\n    keyInfo.name = opt.name != null ? opt.name + '' : existCpt ? existCpt.name // Avoid diffferent series has the same name,\n    // because name may be used like in color pallet.\n    : DUMMY_COMPONENT_NAME_PREFIX + index;\n\n    if (existCpt) {\n      keyInfo.id = existCpt.id;\n    } else if (opt.id != null) {\n      keyInfo.id = opt.id + '';\n    } else {\n      // Consider this situatoin:\n      //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n      //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n      // Series with the same name between optionA and optionB\n      // should be mapped.\n      var idNum = 0;\n\n      do {\n        keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n      } while (idMap.get(keyInfo.id));\n    }\n\n    idMap.set(keyInfo.id, item);\n  });\n}\n\nfunction isNameSpecified(componentModel) {\n  var name = componentModel.name; // Is specified when `indexOf` get -1 or > 0.\n\n  return !!(name && name.indexOf(DUMMY_COMPONENT_NAME_PREFIX));\n}\n/**\n * @public\n * @param {Object} cptOption\n * @return {boolean}\n */\n\n\nfunction isIdInner(cptOption) {\n  return isObject(cptOption) && cptOption.id && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n}\n/**\n * A helper for removing duplicate items between batchA and batchB,\n * and in themselves, and categorize by series.\n *\n * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n */\n\n\nfunction compressBatches(batchA, batchB) {\n  var mapA = {};\n  var mapB = {};\n  makeMap(batchA || [], mapA);\n  makeMap(batchB || [], mapB, mapA);\n  return [mapToArray(mapA), mapToArray(mapB)];\n\n  function makeMap(sourceBatch, map, otherMap) {\n    for (var i = 0, len = sourceBatch.length; i < len; i++) {\n      var seriesId = sourceBatch[i].seriesId;\n      var dataIndices = normalizeToArray(sourceBatch[i].dataIndex);\n      var otherDataIndices = otherMap && otherMap[seriesId];\n\n      for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n        var dataIndex = dataIndices[j];\n\n        if (otherDataIndices && otherDataIndices[dataIndex]) {\n          otherDataIndices[dataIndex] = null;\n        } else {\n          (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n        }\n      }\n    }\n  }\n\n  function mapToArray(map, isData) {\n    var result = [];\n\n    for (var i in map) {\n      if (map.hasOwnProperty(i) && map[i] != null) {\n        if (isData) {\n          result.push(+i);\n        } else {\n          var dataIndices = mapToArray(map[i], true);\n          dataIndices.length && result.push({\n            seriesId: i,\n            dataIndex: dataIndices\n          });\n        }\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n *                         each of which can be Array or primary type.\n * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n */\n\n\nfunction queryDataIndex(data, payload) {\n  if (payload.dataIndexInside != null) {\n    return payload.dataIndexInside;\n  } else if (payload.dataIndex != null) {\n    return zrUtil.isArray(payload.dataIndex) ? zrUtil.map(payload.dataIndex, function (value) {\n      return data.indexOfRawIndex(value);\n    }) : data.indexOfRawIndex(payload.dataIndex);\n  } else if (payload.name != null) {\n    return zrUtil.isArray(payload.name) ? zrUtil.map(payload.name, function (value) {\n      return data.indexOfName(value);\n    }) : data.indexOfName(payload.name);\n  }\n}\n/**\n * Enable property storage to any host object.\n * Notice: Serialization is not supported.\n *\n * For example:\n * var inner = zrUitl.makeInner();\n *\n * function some1(hostObj) {\n *      inner(hostObj).someProperty = 1212;\n *      ...\n * }\n * function some2() {\n *      var fields = inner(this);\n *      fields.someProperty1 = 1212;\n *      fields.someProperty2 = 'xx';\n *      ...\n * }\n *\n * @return {Function}\n */\n\n\nfunction makeInner() {\n  // Consider different scope by es module import.\n  var key = '__\\0ec_inner_' + innerUniqueIndex++ + '_' + Math.random().toFixed(5);\n  return function (hostObj) {\n    return hostObj[key] || (hostObj[key] = {});\n  };\n}\n\nvar innerUniqueIndex = 0;\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex, seriesId, seriesName,\n *            geoIndex, geoId, geoName,\n *            bmapIndex, bmapId, bmapName,\n *            xAxisIndex, xAxisId, xAxisName,\n *            yAxisIndex, yAxisId, yAxisName,\n *            gridIndex, gridId, gridName,\n *            ... (can be extended)\n *        }\n *        Each properties can be number|string|Array.<number>|Array.<string>\n *        For example, a finder could be\n *        {\n *            seriesIndex: 3,\n *            geoId: ['aa', 'cc'],\n *            gridName: ['xx', 'rr']\n *        }\n *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n *        If nothing or null/undefined specified, return nothing.\n * @param {Object} [opt]\n * @param {string} [opt.defaultMainType]\n * @param {Array.<string>} [opt.includeMainTypes]\n * @return {Object} result like:\n *        {\n *            seriesModels: [seriesModel1, seriesModel2],\n *            seriesModel: seriesModel1, // The first model\n *            geoModels: [geoModel1, geoModel2],\n *            geoModel: geoModel1, // The first model\n *            ...\n *        }\n */\n\nfunction parseFinder(ecModel, finder, opt) {\n  if (zrUtil.isString(finder)) {\n    var obj = {};\n    obj[finder + 'Index'] = 0;\n    finder = obj;\n  }\n\n  var defaultMainType = opt && opt.defaultMainType;\n\n  if (defaultMainType && !has(finder, defaultMainType + 'Index') && !has(finder, defaultMainType + 'Id') && !has(finder, defaultMainType + 'Name')) {\n    finder[defaultMainType + 'Index'] = 0;\n  }\n\n  var result = {};\n  each(finder, function (value, key) {\n    var value = finder[key]; // Exclude 'dataIndex' and other illgal keys.\n\n    if (key === 'dataIndex' || key === 'dataIndexInside') {\n      result[key] = value;\n      return;\n    }\n\n    var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n    var mainType = parsedKey[1];\n    var queryType = (parsedKey[2] || '').toLowerCase();\n\n    if (!mainType || !queryType || value == null || queryType === 'index' && value === 'none' || opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0) {\n      return;\n    }\n\n    var queryParam = {\n      mainType: mainType\n    };\n\n    if (queryType !== 'index' || value !== 'all') {\n      queryParam[queryType] = value;\n    }\n\n    var models = ecModel.queryComponents(queryParam);\n    result[mainType + 'Models'] = models;\n    result[mainType + 'Model'] = models[0];\n  });\n  return result;\n}\n\nfunction has(obj, prop) {\n  return obj && obj.hasOwnProperty(prop);\n}\n\nfunction setAttribute(dom, key, value) {\n  dom.setAttribute ? dom.setAttribute(key, value) : dom[key] = value;\n}\n\nfunction getAttribute(dom, key) {\n  return dom.getAttribute ? dom.getAttribute(key) : dom[key];\n}\n\nexports.normalizeToArray = normalizeToArray;\nexports.defaultEmphasis = defaultEmphasis;\nexports.TEXT_STYLE_OPTIONS = TEXT_STYLE_OPTIONS;\nexports.getDataItemValue = getDataItemValue;\nexports.isDataItemOption = isDataItemOption;\nexports.mappingToExists = mappingToExists;\nexports.makeIdAndName = makeIdAndName;\nexports.isNameSpecified = isNameSpecified;\nexports.isIdInner = isIdInner;\nexports.compressBatches = compressBatches;\nexports.queryDataIndex = queryDataIndex;\nexports.makeInner = makeInner;\nexports.parseFinder = parseFinder;\nexports.setAttribute = setAttribute;\nexports.getAttribute = getAttribute;","var clazzUtil = require(\"../util/clazz\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n/**\n * @param {Object} [setting]\n */\nfunction Scale(setting) {\n  this._setting = setting || {};\n  /**\n   * Extent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._extent = [Infinity, -Infinity];\n  /**\n   * Step is calculated in adjustExtent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._interval = 0;\n  this.init && this.init.apply(this, arguments);\n}\n/**\n * Parse input val to valid inner number.\n * @param {*} val\n * @return {number}\n */\n\n\nScale.prototype.parse = function (val) {\n  // Notice: This would be a trap here, If the implementation\n  // of this method depends on extent, and this method is used\n  // before extent set (like in dataZoom), it would be wrong.\n  // Nevertheless, parse does not depend on extent generally.\n  return val;\n};\n\nScale.prototype.getSetting = function (name) {\n  return this._setting[name];\n};\n\nScale.prototype.contain = function (val) {\n  var extent = this._extent;\n  return val >= extent[0] && val <= extent[1];\n};\n/**\n * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.normalize = function (val) {\n  var extent = this._extent;\n\n  if (extent[1] === extent[0]) {\n    return 0.5;\n  }\n\n  return (val - extent[0]) / (extent[1] - extent[0]);\n};\n/**\n * Scale normalized value\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.scale = function (val) {\n  var extent = this._extent;\n  return val * (extent[1] - extent[0]) + extent[0];\n};\n/**\n * Set extent from data\n * @param {Array.<number>} other\n */\n\n\nScale.prototype.unionExtent = function (other) {\n  var extent = this._extent;\n  other[0] < extent[0] && (extent[0] = other[0]);\n  other[1] > extent[1] && (extent[1] = other[1]); // not setExtent because in log axis it may transformed to power\n  // this.setExtent(extent[0], extent[1]);\n};\n/**\n * Set extent from data\n * @param {module:echarts/data/List} data\n * @param {string} dim\n */\n\n\nScale.prototype.unionExtentFromData = function (data, dim) {\n  this.unionExtent(data.getApproximateExtent(dim));\n};\n/**\n * Get extent\n * @return {Array.<number>}\n */\n\n\nScale.prototype.getExtent = function () {\n  return this._extent.slice();\n};\n/**\n * Set extent\n * @param {number} start\n * @param {number} end\n */\n\n\nScale.prototype.setExtent = function (start, end) {\n  var thisExtent = this._extent;\n\n  if (!isNaN(start)) {\n    thisExtent[0] = start;\n  }\n\n  if (!isNaN(end)) {\n    thisExtent[1] = end;\n  }\n};\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\n\n\nScale.prototype.isBlank = function () {\n  return this._isBlank;\n},\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\nScale.prototype.setBlank = function (isBlank) {\n  this._isBlank = isBlank;\n};\n/**\n * @abstract\n * @param {*} tick\n * @return {string} label of the tick.\n */\n\nScale.prototype.getLabel = null;\nclazzUtil.enableClassExtend(Scale);\nclazzUtil.enableClassManagement(Scale, {\n  registerWhenExtend: true\n});\nvar _default = Scale;\nmodule.exports = _default;","var zrUtil = require(\"../core/util\");\n\nvar Element = require(\"../Element\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\n/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/container/Group');\n *     var Circle = require('zrender/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n/**\n * @alias module:zrender/graphic/Group\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @extends module:zrender/mixin/Eventful\n */\nvar Group = function (opts) {\n  opts = opts || {};\n  Element.call(this, opts);\n\n  for (var key in opts) {\n    if (opts.hasOwnProperty(key)) {\n      this[key] = opts[key];\n    }\n  }\n\n  this._children = [];\n  this.__storage = null;\n  this.__dirty = true;\n};\n\nGroup.prototype = {\n  constructor: Group,\n  isGroup: true,\n\n  /**\n   * @type {string}\n   */\n  type: 'group',\n\n  /**\n   * 所有子孙元素是否响应鼠标事件\n   * @name module:/zrender/container/Group#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * @return {Array.<module:zrender/Element>}\n   */\n  children: function () {\n    return this._children.slice();\n  },\n\n  /**\n   * 获取指定 index 的儿子节点\n   * @param  {number} idx\n   * @return {module:zrender/Element}\n   */\n  childAt: function (idx) {\n    return this._children[idx];\n  },\n\n  /**\n   * 获取指定名字的儿子节点\n   * @param  {string} name\n   * @return {module:zrender/Element}\n   */\n  childOfName: function (name) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      if (children[i].name === name) {\n        return children[i];\n      }\n    }\n  },\n\n  /**\n   * @return {number}\n   */\n  childCount: function () {\n    return this._children.length;\n  },\n\n  /**\n   * 添加子节点到最后\n   * @param {module:zrender/Element} child\n   */\n  add: function (child) {\n    if (child && child !== this && child.parent !== this) {\n      this._children.push(child);\n\n      this._doAdd(child);\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加子节点在 nextSibling 之前\n   * @param {module:zrender/Element} child\n   * @param {module:zrender/Element} nextSibling\n   */\n  addBefore: function (child, nextSibling) {\n    if (child && child !== this && child.parent !== this && nextSibling && nextSibling.parent === this) {\n      var children = this._children;\n      var idx = children.indexOf(nextSibling);\n\n      if (idx >= 0) {\n        children.splice(idx, 0, child);\n\n        this._doAdd(child);\n      }\n    }\n\n    return this;\n  },\n  _doAdd: function (child) {\n    if (child.parent) {\n      child.parent.remove(child);\n    }\n\n    child.parent = this;\n    var storage = this.__storage;\n    var zr = this.__zr;\n\n    if (storage && storage !== child.__storage) {\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n  },\n\n  /**\n   * 移除子节点\n   * @param {module:zrender/Element} child\n   */\n  remove: function (child) {\n    var zr = this.__zr;\n    var storage = this.__storage;\n    var children = this._children;\n    var idx = zrUtil.indexOf(children, child);\n\n    if (idx < 0) {\n      return this;\n    }\n\n    children.splice(idx, 1);\n    child.parent = null;\n\n    if (storage) {\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n    return this;\n  },\n\n  /**\n   * 移除所有子节点\n   */\n  removeAll: function () {\n    var children = this._children;\n    var storage = this.__storage;\n    var child;\n    var i;\n\n    for (i = 0; i < children.length; i++) {\n      child = children[i];\n\n      if (storage) {\n        storage.delFromStorage(child);\n\n        if (child instanceof Group) {\n          child.delChildrenFromStorage(storage);\n        }\n      }\n\n      child.parent = null;\n    }\n\n    children.length = 0;\n    return this;\n  },\n\n  /**\n   * 遍历所有子节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  eachChild: function (cb, context) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n      cb.call(context, child, i);\n    }\n\n    return this;\n  },\n\n  /**\n   * 深度优先遍历所有子孙节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      cb.call(context, child);\n\n      if (child.type === 'group') {\n        child.traverse(cb, context);\n      }\n    }\n\n    return this;\n  },\n  addChildrenToStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n  },\n  delChildrenFromStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n  },\n  dirty: function () {\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh();\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function (includeChildren) {\n    // TODO Caching\n    var rect = null;\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var children = includeChildren || this._children;\n    var tmpMat = [];\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n\n      if (child.ignore || child.invisible) {\n        continue;\n      }\n\n      var childRect = child.getBoundingRect();\n      var transform = child.getLocalTransform(tmpMat); // TODO\n      // The boundingRect cacluated by transforming original\n      // rect may be bigger than the actual bundingRect when rotation\n      // is used. (Consider a circle rotated aginst its center, where\n      // the actual boundingRect should be the same as that not be\n      // rotated.) But we can not find better approach to calculate\n      // actual boundingRect yet, considering performance.\n\n      if (transform) {\n        tmpRect.copy(childRect);\n        tmpRect.applyTransform(transform);\n        rect = rect || tmpRect.clone();\n        rect.union(tmpRect);\n      } else {\n        rect = rect || childRect.clone();\n        rect.union(childRect);\n      }\n    }\n\n    return rect || tmpRect;\n  }\n};\nzrUtil.inherits(Group, Element);\nvar _default = Group;\nmodule.exports = _default;","var vec2 = require(\"./vector\");\n\nvar curve = require(\"./curve\");\n\n/**\n * @author Yi Shen(https://github.com/pissang)\n */\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI2 = Math.PI * 2;\nvar start = vec2.create();\nvar end = vec2.create();\nvar extremity = vec2.create();\n/**\n * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n * @module zrender/core/bbox\n * @param {Array<Object>} points 顶点数组\n * @param {number} min\n * @param {number} max\n */\n\nfunction fromPoints(points, min, max) {\n  if (points.length === 0) {\n    return;\n  }\n\n  var p = points[0];\n  var left = p[0];\n  var right = p[0];\n  var top = p[1];\n  var bottom = p[1];\n  var i;\n\n  for (i = 1; i < points.length; i++) {\n    p = points[i];\n    left = mathMin(left, p[0]);\n    right = mathMax(right, p[0]);\n    top = mathMin(top, p[1]);\n    bottom = mathMax(bottom, p[1]);\n  }\n\n  min[0] = left;\n  min[1] = top;\n  max[0] = right;\n  max[1] = bottom;\n}\n/**\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromLine(x0, y0, x1, y1, min, max) {\n  min[0] = mathMin(x0, x1);\n  min[1] = mathMin(y0, y1);\n  max[0] = mathMax(x0, x1);\n  max[1] = mathMax(y0, y1);\n}\n\nvar xDim = [];\nvar yDim = [];\n/**\n * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\nfunction fromCubic(x0, y0, x1, y1, x2, y2, x3, y3, min, max) {\n  var cubicExtrema = curve.cubicExtrema;\n  var cubicAt = curve.cubicAt;\n  var i;\n  var n = cubicExtrema(x0, x1, x2, x3, xDim);\n  min[0] = Infinity;\n  min[1] = Infinity;\n  max[0] = -Infinity;\n  max[1] = -Infinity;\n\n  for (i = 0; i < n; i++) {\n    var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n    min[0] = mathMin(x, min[0]);\n    max[0] = mathMax(x, max[0]);\n  }\n\n  n = cubicExtrema(y0, y1, y2, y3, yDim);\n\n  for (i = 0; i < n; i++) {\n    var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n    min[1] = mathMin(y, min[1]);\n    max[1] = mathMax(y, max[1]);\n  }\n\n  min[0] = mathMin(x0, min[0]);\n  max[0] = mathMax(x0, max[0]);\n  min[0] = mathMin(x3, min[0]);\n  max[0] = mathMax(x3, max[0]);\n  min[1] = mathMin(y0, min[1]);\n  max[1] = mathMax(y0, max[1]);\n  min[1] = mathMin(y3, min[1]);\n  max[1] = mathMax(y3, max[1]);\n}\n/**\n * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromQuadratic(x0, y0, x1, y1, x2, y2, min, max) {\n  var quadraticExtremum = curve.quadraticExtremum;\n  var quadraticAt = curve.quadraticAt; // Find extremities, where derivative in x dim or y dim is zero\n\n  var tx = mathMax(mathMin(quadraticExtremum(x0, x1, x2), 1), 0);\n  var ty = mathMax(mathMin(quadraticExtremum(y0, y1, y2), 1), 0);\n  var x = quadraticAt(x0, x1, x2, tx);\n  var y = quadraticAt(y0, y1, y2, ty);\n  min[0] = mathMin(x0, x2, x);\n  min[1] = mathMin(y0, y2, y);\n  max[0] = mathMax(x0, x2, x);\n  max[1] = mathMax(y0, y2, y);\n}\n/**\n * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n * @method\n * @memberOf module:zrender/core/bbox\n * @param {number} x\n * @param {number} y\n * @param {number} rx\n * @param {number} ry\n * @param {number} startAngle\n * @param {number} endAngle\n * @param {number} anticlockwise\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromArc(x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max) {\n  var vec2Min = vec2.min;\n  var vec2Max = vec2.max;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff % PI2 < 1e-4 && diff > 1e-4) {\n    // Is a circle\n    min[0] = x - rx;\n    min[1] = y - ry;\n    max[0] = x + rx;\n    max[1] = y + ry;\n    return;\n  }\n\n  start[0] = mathCos(startAngle) * rx + x;\n  start[1] = mathSin(startAngle) * ry + y;\n  end[0] = mathCos(endAngle) * rx + x;\n  end[1] = mathSin(endAngle) * ry + y;\n  vec2Min(min, start, end);\n  vec2Max(max, start, end); // Thresh to [0, Math.PI * 2]\n\n  startAngle = startAngle % PI2;\n\n  if (startAngle < 0) {\n    startAngle = startAngle + PI2;\n  }\n\n  endAngle = endAngle % PI2;\n\n  if (endAngle < 0) {\n    endAngle = endAngle + PI2;\n  }\n\n  if (startAngle > endAngle && !anticlockwise) {\n    endAngle += PI2;\n  } else if (startAngle < endAngle && anticlockwise) {\n    startAngle += PI2;\n  }\n\n  if (anticlockwise) {\n    var tmp = endAngle;\n    endAngle = startAngle;\n    startAngle = tmp;\n  } // var number = 0;\n  // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n\n\n  for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n    if (angle > startAngle) {\n      extremity[0] = mathCos(angle) * rx + x;\n      extremity[1] = mathSin(angle) * ry + y;\n      vec2Min(min, extremity, min);\n      vec2Max(max, extremity, max);\n    }\n  }\n}\n\nexports.fromPoints = fromPoints;\nexports.fromLine = fromLine;\nexports.fromCubic = fromCubic;\nexports.fromQuadratic = fromQuadratic;\nexports.fromArc = fromArc;","var _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\nvar normalizeToArray = _model.normalizeToArray;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\n\nfunction getNearestColorPalette(colors, requestColorNum) {\n  var paletteNum = colors.length; // TODO colors must be in order\n\n  for (var i = 0; i < paletteNum; i++) {\n    if (colors[i].length > requestColorNum) {\n      return colors[i];\n    }\n  }\n\n  return colors[paletteNum - 1];\n}\n\nvar _default = {\n  clearColorPalette: function () {\n    inner(this).colorIdx = 0;\n    inner(this).colorNameMap = {};\n  },\n\n  /**\n   * @param {string} name MUST NOT be null/undefined. Otherwise call this function\n   *                 twise with the same parameters will get different result.\n   * @param {Object} [scope=this]\n   * @param {Object} [requestColorNum]\n   * @return {string} color string.\n   */\n  getColorFromPalette: function (name, scope, requestColorNum) {\n    scope = scope || this;\n    var scopeFields = inner(scope);\n    var colorIdx = scopeFields.colorIdx || 0;\n    var colorNameMap = scopeFields.colorNameMap = scopeFields.colorNameMap || {}; // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n\n    if (colorNameMap.hasOwnProperty(name)) {\n      return colorNameMap[name];\n    }\n\n    var defaultColorPalette = normalizeToArray(this.get('color', true));\n    var layeredColorPalette = this.get('colorLayer', true);\n    var colorPalette = requestColorNum == null || !layeredColorPalette ? defaultColorPalette : getNearestColorPalette(layeredColorPalette, requestColorNum); // In case can't find in layered color palette.\n\n    colorPalette = colorPalette || defaultColorPalette;\n\n    if (!colorPalette || !colorPalette.length) {\n      return;\n    }\n\n    var color = colorPalette[colorIdx];\n\n    if (name) {\n      colorNameMap[name] = color;\n    }\n\n    scopeFields.colorIdx = (colorIdx + 1) % colorPalette.length;\n    return color;\n  }\n};\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar _labelHelper = require(\"../helper/labelHelper\");\n\nvar getDefaultLabel = _labelHelper.getDefaultLabel;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction setLabel(normalStyle, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside) {\n  var labelModel = itemModel.getModel('label');\n  var hoverLabelModel = itemModel.getModel('emphasis.label');\n  graphic.setLabelStyle(normalStyle, hoverStyle, labelModel, hoverLabelModel, {\n    labelFetcher: seriesModel,\n    labelDataIndex: dataIndex,\n    defaultText: getDefaultLabel(seriesModel.getData(), dataIndex),\n    isRectText: true,\n    autoColor: color\n  });\n  fixPosition(normalStyle);\n  fixPosition(hoverStyle);\n}\n\nfunction fixPosition(style, labelPositionOutside) {\n  if (style.textPosition === 'outside') {\n    style.textPosition = labelPositionOutside;\n  }\n}\n\nexports.setLabel = setLabel;","var curve = require(\"../core/curve\");\n\n/**\n * 三次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  x3\n * @param  {number}  y3\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l) {\n    return false;\n  }\n\n  var d = curve.cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;","var BoundingRect = require(\"../core/BoundingRect\");\n\nvar imageHelper = require(\"../graphic/helper/image\");\n\nvar _util = require(\"../core/util\");\n\nvar getContext = _util.getContext;\nvar extend = _util.extend;\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar trim = _util.trim;\nvar textWidthCache = {};\nvar textWidthCacheCounter = 0;\nvar TEXT_CACHE_MAX = 5000;\nvar STYLE_REG = /\\{([a-zA-Z0-9_]+)\\|([^}]*)\\}/g;\nvar DEFAULT_FONT = '12px sans-serif'; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  methods[name] = fn;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {number} width\n */\n\n\nfunction getWidth(text, font) {\n  font = font || DEFAULT_FONT;\n  var key = text + ':' + font;\n\n  if (textWidthCache[key]) {\n    return textWidthCache[key];\n  }\n\n  var textLines = (text + '').split('\\n');\n  var width = 0;\n\n  for (var i = 0, l = textLines.length; i < l; i++) {\n    // textContain.measureText may be overrided in SVG or VML\n    width = Math.max(measureText(textLines[i], font).width, width);\n  }\n\n  if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n    textWidthCacheCounter = 0;\n    textWidthCache = {};\n  }\n\n  textWidthCacheCounter++;\n  textWidthCache[key] = width;\n  return width;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {string} [textAlign='left']\n * @param {string} [textVerticalAlign='top']\n * @param {Array.<number>} [textPadding]\n * @param {Object} [rich]\n * @param {Object} [truncate]\n * @return {Object} {x, y, width, height, lineHeight}\n */\n\n\nfunction getBoundingRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  return rich ? getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) : getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate);\n}\n\nfunction getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate) {\n  var contentBlock = parsePlainText(text, font, textPadding, truncate);\n  var outerWidth = getWidth(text, font);\n\n  if (textPadding) {\n    outerWidth += textPadding[1] + textPadding[3];\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  var rect = new BoundingRect(x, y, outerWidth, outerHeight);\n  rect.lineHeight = contentBlock.lineHeight;\n  return rect;\n}\n\nfunction getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  var contentBlock = parseRichText(text, {\n    rich: rich,\n    truncate: truncate,\n    font: font,\n    textAlign: textAlign,\n    textPadding: textPadding\n  });\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  return new BoundingRect(x, y, outerWidth, outerHeight);\n}\n/**\n * @public\n * @param {number} x\n * @param {number} width\n * @param {string} [textAlign='left']\n * @return {number} Adjusted x.\n */\n\n\nfunction adjustTextX(x, width, textAlign) {\n  // FIXME Right to left language\n  if (textAlign === 'right') {\n    x -= width;\n  } else if (textAlign === 'center') {\n    x -= width / 2;\n  }\n\n  return x;\n}\n/**\n * @public\n * @param {number} y\n * @param {number} height\n * @param {string} [textVerticalAlign='top']\n * @return {number} Adjusted y.\n */\n\n\nfunction adjustTextY(y, height, textVerticalAlign) {\n  if (textVerticalAlign === 'middle') {\n    y -= height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y -= height;\n  }\n\n  return y;\n}\n/**\n * @public\n * @param {stirng} textPosition\n * @param {Object} rect {x, y, width, height}\n * @param {number} distance\n * @return {Object} {x, y, textAlign, textVerticalAlign}\n */\n\n\nfunction adjustTextPositionOnRect(textPosition, rect, distance) {\n  var x = rect.x;\n  var y = rect.y;\n  var height = rect.height;\n  var width = rect.width;\n  var halfHeight = height / 2;\n  var textAlign = 'left';\n  var textVerticalAlign = 'top';\n\n  switch (textPosition) {\n    case 'left':\n      x -= distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'right':\n      x += distance + width;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'top':\n      x += width / 2;\n      y -= distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'bottom':\n      x += width / 2;\n      y += height + distance;\n      textAlign = 'center';\n      break;\n\n    case 'inside':\n      x += width / 2;\n      y += halfHeight;\n      textAlign = 'center';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideLeft':\n      x += distance;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideRight':\n      x += width - distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideTop':\n      x += width / 2;\n      y += distance;\n      textAlign = 'center';\n      break;\n\n    case 'insideBottom':\n      x += width / 2;\n      y += height - distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideTopLeft':\n      x += distance;\n      y += distance;\n      break;\n\n    case 'insideTopRight':\n      x += width - distance;\n      y += distance;\n      textAlign = 'right';\n      break;\n\n    case 'insideBottomLeft':\n      x += distance;\n      y += height - distance;\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideBottomRight':\n      x += width - distance;\n      y += height - distance;\n      textAlign = 'right';\n      textVerticalAlign = 'bottom';\n      break;\n  }\n\n  return {\n    x: x,\n    y: y,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n/**\n * Show ellipsis if overflow.\n *\n * @public\n * @param  {string} text\n * @param  {string} containerWidth\n * @param  {string} font\n * @param  {number} [ellipsis='...']\n * @param  {Object} [options]\n * @param  {number} [options.maxIterations=3]\n * @param  {number} [options.minChar=0] If truncate result are less\n *                  then minChar, ellipsis will not show, which is\n *                  better for user hint in some cases.\n * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n * @return {string}\n */\n\n\nfunction truncateText(text, containerWidth, font, ellipsis, options) {\n  if (!containerWidth) {\n    return '';\n  }\n\n  var textLines = (text + '').split('\\n');\n  options = prepareTruncateOptions(containerWidth, font, ellipsis, options); // FIXME\n  // It is not appropriate that every line has '...' when truncate multiple lines.\n\n  for (var i = 0, len = textLines.length; i < len; i++) {\n    textLines[i] = truncateSingleLine(textLines[i], options);\n  }\n\n  return textLines.join('\\n');\n}\n\nfunction prepareTruncateOptions(containerWidth, font, ellipsis, options) {\n  options = extend({}, options);\n  options.font = font;\n  var ellipsis = retrieve2(ellipsis, '...');\n  options.maxIterations = retrieve2(options.maxIterations, 2);\n  var minChar = options.minChar = retrieve2(options.minChar, 0); // FIXME\n  // Other languages?\n\n  options.cnCharWidth = getWidth('国', font); // FIXME\n  // Consider proportional font?\n\n  var ascCharWidth = options.ascCharWidth = getWidth('a', font);\n  options.placeholder = retrieve2(options.placeholder, ''); // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n  // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n\n  var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n\n  for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n    contentWidth -= ascCharWidth;\n  }\n\n  var ellipsisWidth = getWidth(ellipsis);\n\n  if (ellipsisWidth > contentWidth) {\n    ellipsis = '';\n    ellipsisWidth = 0;\n  }\n\n  contentWidth = containerWidth - ellipsisWidth;\n  options.ellipsis = ellipsis;\n  options.ellipsisWidth = ellipsisWidth;\n  options.contentWidth = contentWidth;\n  options.containerWidth = containerWidth;\n  return options;\n}\n\nfunction truncateSingleLine(textLine, options) {\n  var containerWidth = options.containerWidth;\n  var font = options.font;\n  var contentWidth = options.contentWidth;\n\n  if (!containerWidth) {\n    return '';\n  }\n\n  var lineWidth = getWidth(textLine, font);\n\n  if (lineWidth <= containerWidth) {\n    return textLine;\n  }\n\n  for (var j = 0;; j++) {\n    if (lineWidth <= contentWidth || j >= options.maxIterations) {\n      textLine += options.ellipsis;\n      break;\n    }\n\n    var subLength = j === 0 ? estimateLength(textLine, contentWidth, options.ascCharWidth, options.cnCharWidth) : lineWidth > 0 ? Math.floor(textLine.length * contentWidth / lineWidth) : 0;\n    textLine = textLine.substr(0, subLength);\n    lineWidth = getWidth(textLine, font);\n  }\n\n  if (textLine === '') {\n    textLine = options.placeholder;\n  }\n\n  return textLine;\n}\n\nfunction estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n  var width = 0;\n  var i = 0;\n\n  for (var len = text.length; i < len && width < contentWidth; i++) {\n    var charCode = text.charCodeAt(i);\n    width += 0 <= charCode && charCode <= 127 ? ascCharWidth : cnCharWidth;\n  }\n\n  return i;\n}\n/**\n * @public\n * @param {string} font\n * @return {number} line height\n */\n\n\nfunction getLineHeight(font) {\n  // FIXME A rough approach.\n  return getWidth('国', font);\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {Object} width\n */\n\n\nfunction measureText(text, font) {\n  return methods.measureText(text, font);\n} // Avoid assign to an exported variable, for transforming to cjs.\n\n\nmethods.measureText = function (text, font) {\n  var ctx = getContext();\n  ctx.font = font || DEFAULT_FONT;\n  return ctx.measureText(text);\n};\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {Object} [truncate]\n * @return {Object} block: {lineHeight, lines, height, outerHeight}\n *  Notice: for performance, do not calculate outerWidth util needed.\n */\n\n\nfunction parsePlainText(text, font, padding, truncate) {\n  text != null && (text += '');\n  var lineHeight = getLineHeight(font);\n  var lines = text ? text.split('\\n') : [];\n  var height = lines.length * lineHeight;\n  var outerHeight = height;\n\n  if (padding) {\n    outerHeight += padding[0] + padding[2];\n  }\n\n  if (text && truncate) {\n    var truncOuterHeight = truncate.outerHeight;\n    var truncOuterWidth = truncate.outerWidth;\n\n    if (truncOuterHeight != null && outerHeight > truncOuterHeight) {\n      text = '';\n      lines = [];\n    } else if (truncOuterWidth != null) {\n      var options = prepareTruncateOptions(truncOuterWidth - (padding ? padding[1] + padding[3] : 0), font, truncate.ellipsis, {\n        minChar: truncate.minChar,\n        placeholder: truncate.placeholder\n      }); // FIXME\n      // It is not appropriate that every line has '...' when truncate multiple lines.\n\n      for (var i = 0, len = lines.length; i < len; i++) {\n        lines[i] = truncateSingleLine(lines[i], options);\n      }\n    }\n  }\n\n  return {\n    lines: lines,\n    height: height,\n    outerHeight: outerHeight,\n    lineHeight: lineHeight\n  };\n}\n/**\n * For example: 'some text {a|some text}other text{b|some text}xxx{c|}xxx'\n * Also consider 'bbbb{a|xxx\\nzzz}xxxx\\naaaa'.\n *\n * @public\n * @param {string} text\n * @param {Object} style\n * @return {Object} block\n * {\n *      width,\n *      height,\n *      lines: [{\n *          lineHeight,\n *          width,\n *          tokens: [[{\n *              styleName,\n *              text,\n *              width,      // include textPadding\n *              height,     // include textPadding\n *              textWidth, // pure text width\n *              textHeight, // pure text height\n *              lineHeihgt,\n *              font,\n *              textAlign,\n *              textVerticalAlign\n *          }], [...], ...]\n *      }, ...]\n * }\n * If styleName is undefined, it is plain text.\n */\n\n\nfunction parseRichText(text, style) {\n  var contentBlock = {\n    lines: [],\n    width: 0,\n    height: 0\n  };\n  text != null && (text += '');\n\n  if (!text) {\n    return contentBlock;\n  }\n\n  var lastIndex = STYLE_REG.lastIndex = 0;\n  var result;\n\n  while ((result = STYLE_REG.exec(text)) != null) {\n    var matchedIndex = result.index;\n\n    if (matchedIndex > lastIndex) {\n      pushTokens(contentBlock, text.substring(lastIndex, matchedIndex));\n    }\n\n    pushTokens(contentBlock, result[2], result[1]);\n    lastIndex = STYLE_REG.lastIndex;\n  }\n\n  if (lastIndex < text.length) {\n    pushTokens(contentBlock, text.substring(lastIndex, text.length));\n  }\n\n  var lines = contentBlock.lines;\n  var contentHeight = 0;\n  var contentWidth = 0; // For `textWidth: 100%`\n\n  var pendingList = [];\n  var stlPadding = style.textPadding;\n  var truncate = style.truncate;\n  var truncateWidth = truncate && truncate.outerWidth;\n  var truncateHeight = truncate && truncate.outerHeight;\n\n  if (stlPadding) {\n    truncateWidth != null && (truncateWidth -= stlPadding[1] + stlPadding[3]);\n    truncateHeight != null && (truncateHeight -= stlPadding[0] + stlPadding[2]);\n  } // Calculate layout info of tokens.\n\n\n  for (var i = 0; i < lines.length; i++) {\n    var line = lines[i];\n    var lineHeight = 0;\n    var lineWidth = 0;\n\n    for (var j = 0; j < line.tokens.length; j++) {\n      var token = line.tokens[j];\n      var tokenStyle = token.styleName && style.rich[token.styleName] || {}; // textPadding should not inherit from style.\n\n      var textPadding = token.textPadding = tokenStyle.textPadding; // textFont has been asigned to font by `normalizeStyle`.\n\n      var font = token.font = tokenStyle.font || style.font; // textHeight can be used when textVerticalAlign is specified in token.\n\n      var tokenHeight = token.textHeight = retrieve2( // textHeight should not be inherited, consider it can be specified\n      // as box height of the block.\n      tokenStyle.textHeight, getLineHeight(font));\n      textPadding && (tokenHeight += textPadding[0] + textPadding[2]);\n      token.height = tokenHeight;\n      token.lineHeight = retrieve3(tokenStyle.textLineHeight, style.textLineHeight, tokenHeight);\n      token.textAlign = tokenStyle && tokenStyle.textAlign || style.textAlign;\n      token.textVerticalAlign = tokenStyle && tokenStyle.textVerticalAlign || 'middle';\n\n      if (truncateHeight != null && contentHeight + token.lineHeight > truncateHeight) {\n        return {\n          lines: [],\n          width: 0,\n          height: 0\n        };\n      }\n\n      token.textWidth = getWidth(token.text, font);\n      var tokenWidth = tokenStyle.textWidth;\n      var tokenWidthNotSpecified = tokenWidth == null || tokenWidth === 'auto'; // Percent width, can be `100%`, can be used in drawing separate\n      // line when box width is needed to be auto.\n\n      if (typeof tokenWidth === 'string' && tokenWidth.charAt(tokenWidth.length - 1) === '%') {\n        token.percentWidth = tokenWidth;\n        pendingList.push(token);\n        tokenWidth = 0; // Do not truncate in this case, because there is no user case\n        // and it is too complicated.\n      } else {\n        if (tokenWidthNotSpecified) {\n          tokenWidth = token.textWidth; // FIXME: If image is not loaded and textWidth is not specified, calling\n          // `getBoundingRect()` will not get correct result.\n\n          var textBackgroundColor = tokenStyle.textBackgroundColor;\n          var bgImg = textBackgroundColor && textBackgroundColor.image; // Use cases:\n          // (1) If image is not loaded, it will be loaded at render phase and call\n          // `dirty()` and `textBackgroundColor.image` will be replaced with the loaded\n          // image, and then the right size will be calculated here at the next tick.\n          // See `graphic/helper/text.js`.\n          // (2) If image loaded, and `textBackgroundColor.image` is image src string,\n          // use `imageHelper.findExistImage` to find cached image.\n          // `imageHelper.findExistImage` will always be called here before\n          // `imageHelper.createOrUpdateImage` in `graphic/helper/text.js#renderRichText`\n          // which ensures that image will not be rendered before correct size calcualted.\n\n          if (bgImg) {\n            bgImg = imageHelper.findExistImage(bgImg);\n\n            if (imageHelper.isImageReady(bgImg)) {\n              tokenWidth = Math.max(tokenWidth, bgImg.width * tokenHeight / bgImg.height);\n            }\n          }\n        }\n\n        var paddingW = textPadding ? textPadding[1] + textPadding[3] : 0;\n        tokenWidth += paddingW;\n        var remianTruncWidth = truncateWidth != null ? truncateWidth - lineWidth : null;\n\n        if (remianTruncWidth != null && remianTruncWidth < tokenWidth) {\n          if (!tokenWidthNotSpecified || remianTruncWidth < paddingW) {\n            token.text = '';\n            token.textWidth = tokenWidth = 0;\n          } else {\n            token.text = truncateText(token.text, remianTruncWidth - paddingW, font, truncate.ellipsis, {\n              minChar: truncate.minChar\n            });\n            token.textWidth = getWidth(token.text, font);\n            tokenWidth = token.textWidth + paddingW;\n          }\n        }\n      }\n\n      lineWidth += token.width = tokenWidth;\n      tokenStyle && (lineHeight = Math.max(lineHeight, token.lineHeight));\n    }\n\n    line.width = lineWidth;\n    line.lineHeight = lineHeight;\n    contentHeight += lineHeight;\n    contentWidth = Math.max(contentWidth, lineWidth);\n  }\n\n  contentBlock.outerWidth = contentBlock.width = retrieve2(style.textWidth, contentWidth);\n  contentBlock.outerHeight = contentBlock.height = retrieve2(style.textHeight, contentHeight);\n\n  if (stlPadding) {\n    contentBlock.outerWidth += stlPadding[1] + stlPadding[3];\n    contentBlock.outerHeight += stlPadding[0] + stlPadding[2];\n  }\n\n  for (var i = 0; i < pendingList.length; i++) {\n    var token = pendingList[i];\n    var percentWidth = token.percentWidth; // Should not base on outerWidth, because token can not be placed out of padding.\n\n    token.width = parseInt(percentWidth, 10) / 100 * contentWidth;\n  }\n\n  return contentBlock;\n}\n\nfunction pushTokens(block, str, styleName) {\n  var isEmptyStr = str === '';\n  var strs = str.split('\\n');\n  var lines = block.lines;\n\n  for (var i = 0; i < strs.length; i++) {\n    var text = strs[i];\n    var token = {\n      styleName: styleName,\n      text: text,\n      isLineHolder: !text && !isEmptyStr\n    }; // The first token should be appended to the last line.\n\n    if (!i) {\n      var tokens = (lines[lines.length - 1] || (lines[0] = {\n        tokens: []\n      })).tokens; // Consider cases:\n      // (1) ''.split('\\n') => ['', '\\n', ''], the '' at the first item\n      // (which is a placeholder) should be replaced by new token.\n      // (2) A image backage, where token likes {a|}.\n      // (3) A redundant '' will affect textAlign in line.\n      // (4) tokens with the same tplName should not be merged, because\n      // they should be displayed in different box (with border and padding).\n\n      var tokensLen = tokens.length;\n      tokensLen === 1 && tokens[0].isLineHolder ? tokens[0] = token : // Consider text is '', only insert when it is the \"lineHolder\" or\n      // \"emptyStr\". Otherwise a redundant '' will affect textAlign in line.\n      (text || !tokensLen || isEmptyStr) && tokens.push(token);\n    } // Other tokens always start a new line.\n    else {\n        // If there is '', insert it as a placeholder.\n        lines.push({\n          tokens: [token]\n        });\n      }\n  }\n}\n\nfunction makeFont(style) {\n  // FIXME in node-canvas fontWeight is before fontStyle\n  // Use `fontSize` `fontFamily` to check whether font properties are defined.\n  var font = (style.fontSize || style.fontFamily) && [style.fontStyle, style.fontWeight, (style.fontSize || 12) + 'px', // If font properties are defined, `fontFamily` should not be ignored.\n  style.fontFamily || 'sans-serif'].join(' ');\n  return font && trim(font) || style.textFont || style.font;\n}\n\nexports.DEFAULT_FONT = DEFAULT_FONT;\nexports.$override = $override;\nexports.getWidth = getWidth;\nexports.getBoundingRect = getBoundingRect;\nexports.adjustTextX = adjustTextX;\nexports.adjustTextY = adjustTextY;\nexports.adjustTextPositionOnRect = adjustTextPositionOnRect;\nexports.truncateText = truncateText;\nexports.getLineHeight = getLineHeight;\nexports.measureText = measureText;\nexports.parsePlainText = parsePlainText;\nexports.parseRichText = parseRichText;\nexports.makeFont = makeFont;","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar _task = require(\"../stream/task\");\n\nvar createTask = _task.createTask;\n\nvar createRenderPlanner = require(\"../chart/helper/createRenderPlanner\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = modelUtil.makeInner();\nvar renderPlanner = createRenderPlanner();\n\nfunction Chart() {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewChart');\n  this.renderTask = createTask({\n    plan: renderTaskPlan,\n    reset: renderTaskReset\n  });\n  this.renderTask.context = {\n    view: this\n  };\n}\n\nChart.prototype = {\n  type: 'chart',\n\n  /**\n   * Init the chart.\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  init: function (ecModel, api) {},\n\n  /**\n   * Render the chart.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  render: function (seriesModel, ecModel, api, payload) {},\n\n  /**\n   * Highlight series or specified data item.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  highlight: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n  },\n\n  /**\n   * Downplay series or specified data item.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  downplay: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'normal');\n  },\n\n  /**\n   * Remove self.\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  remove: function (ecModel, api) {\n    this.group.removeAll();\n  },\n\n  /**\n   * Dispose self.\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  dispose: function () {},\n\n  /**\n   * Rendering preparation in progressive mode.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  incrementalPrepareRender: null,\n\n  /**\n   * Render in progressive mode.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  incrementalRender: null,\n\n  /**\n   * Update transform directly.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   * @return {Object} {update: true}\n   */\n  updateTransform: null\n  /**\n   * The view contains the given point.\n   * @interface\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  // containPoint: function () {}\n\n};\nvar chartProto = Chart.prototype;\n\nchartProto.updateView = chartProto.updateLayout = chartProto.updateVisual = function (seriesModel, ecModel, api, payload) {\n  this.render(seriesModel, ecModel, api, payload);\n};\n/**\n * Set state of single element\n * @param  {module:zrender/Element} el\n * @param  {string} state\n */\n\n\nfunction elSetState(el, state) {\n  if (el) {\n    el.trigger(state);\n\n    if (el.type === 'group') {\n      for (var i = 0; i < el.childCount(); i++) {\n        elSetState(el.childAt(i), state);\n      }\n    }\n  }\n}\n/**\n * @param  {module:echarts/data/List} data\n * @param  {Object} payload\n * @param  {string} state 'normal'|'emphasis'\n */\n\n\nfunction toggleHighlight(data, payload, state) {\n  var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n  if (dataIndex != null) {\n    each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n      elSetState(data.getItemGraphicEl(dataIdx), state);\n    });\n  } else {\n    data.eachItemGraphicEl(function (el) {\n      elSetState(el, state);\n    });\n  }\n} // Enable Chart.extend.\n\n\nclazzUtil.enableClassExtend(Chart, ['dispose']); // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Chart, {\n  registerWhenExtend: true\n});\n\nChart.markUpdateMethod = function (payload, methodName) {\n  inner(payload).updateMethod = methodName;\n};\n\nfunction renderTaskPlan(context) {\n  return renderPlanner(context.model);\n}\n\nfunction renderTaskReset(context) {\n  var seriesModel = context.model;\n  var ecModel = context.ecModel;\n  var api = context.api;\n  var payload = context.payload; // ???! remove updateView updateVisual\n\n  var progressiveRender = seriesModel.pipelineContext.progressiveRender;\n  var view = context.view;\n  var updateMethod = payload && inner(payload).updateMethod;\n  var methodName = progressiveRender ? 'incrementalPrepareRender' : updateMethod && view[updateMethod] ? updateMethod // `appendData` is also supported when data amount\n  // is less than progressive threshold.\n  : 'render';\n\n  if (methodName !== 'render') {\n    view[methodName](seriesModel, ecModel, api, payload);\n  }\n\n  return progressMethodMap[methodName];\n}\n\nvar progressMethodMap = {\n  incrementalPrepareRender: {\n    progress: function (params, context) {\n      context.view.incrementalRender(params, context.model, context.ecModel, context.api, context.payload);\n    }\n  },\n  render: {\n    // Put view.render in `progress` to support appendData. But in this case\n    // view.render should not be called in reset, otherwise it will be called\n    // twise. Use `forceFirstProgress` to make sure that view.render is called\n    // in any cases.\n    forceFirstProgress: true,\n    progress: function (params, context) {\n      context.view.render(context.model, context.ecModel, context.api, context.payload);\n    }\n  }\n};\nvar _default = Chart;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar modelHelper = require(\"./modelHelper\");\n\nvar findPointFromSeries = require(\"./findPointFromSeries\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar curry = zrUtil.curry;\nvar inner = makeInner();\n/**\n * Basic logic: check all axis, if they do not demand show/highlight,\n * then hide/downplay them.\n *\n * @param {Object} coordSysAxesInfo\n * @param {Object} payload\n * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n * @param {Object} [payload.dataIndex] finder, restrict target axes.\n * @param {Object} [payload.axesInfo] finder, restrict target axes.\n *        [{\n *          axisDim: 'x'|'y'|'angle'|...,\n *          axisIndex: ...,\n *          value: ...\n *        }, ...]\n * @param {Function} [payload.dispatchAction]\n * @param {Object} [payload.tooltipOption]\n * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n *        which can be specified in dispatchAction\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n * @return {Object} content of event obj for echarts.connect.\n */\n\nfunction _default(payload, ecModel, api) {\n  var currTrigger = payload.currTrigger;\n  var point = [payload.x, payload.y];\n  var finder = payload;\n  var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n  var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo; // Pending\n  // See #6121. But we are not able to reproduce it yet.\n\n  if (!coordSysAxesInfo) {\n    return;\n  }\n\n  if (illegalPoint(point)) {\n    // Used in the default behavior of `connection`: use the sample seriesIndex\n    // and dataIndex. And also used in the tooltipView trigger.\n    point = findPointFromSeries({\n      seriesIndex: finder.seriesIndex,\n      // Do not use dataIndexInside from other ec instance.\n      // FIXME: auto detect it?\n      dataIndex: finder.dataIndex\n    }, ecModel).point;\n  }\n\n  var isIllegalPoint = illegalPoint(point); // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n  // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n  // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n  // and dataIndex.\n\n  var inputAxesInfo = finder.axesInfo;\n  var axesInfo = coordSysAxesInfo.axesInfo;\n  var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n  var outputFinder = {};\n  var showValueMap = {};\n  var dataByCoordSys = {\n    list: [],\n    map: {}\n  };\n  var updaters = {\n    showPointer: curry(showPointer, showValueMap),\n    showTooltip: curry(showTooltip, dataByCoordSys)\n  }; // Process for triggered axes.\n\n  each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n    // If a point given, it must be contained by the coordinate system.\n    var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n    each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n      var axis = axisInfo.axis;\n      var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo); // If no inputAxesInfo, no axis is restricted.\n\n      if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n        var val = inputAxisInfo && inputAxisInfo.value;\n\n        if (val == null && !isIllegalPoint) {\n          val = axis.pointToData(point);\n        }\n\n        val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n      }\n    });\n  }); // Process for linked axes.\n\n  var linkTriggers = {};\n  each(axesInfo, function (tarAxisInfo, tarKey) {\n    var linkGroup = tarAxisInfo.linkGroup; // If axis has been triggered in the previous stage, it should not be triggered by link.\n\n    if (linkGroup && !showValueMap[tarKey]) {\n      each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n        var srcValItem = showValueMap[srcKey]; // If srcValItem exist, source axis is triggered, so link to target axis.\n\n        if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n          var val = srcValItem.value;\n          linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo))));\n          linkTriggers[tarAxisInfo.key] = val;\n        }\n      });\n    }\n  });\n  each(linkTriggers, function (val, tarKey) {\n    processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n  });\n  updateModelActually(showValueMap, axesInfo, outputFinder);\n  dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n  dispatchHighDownActually(axesInfo, dispatchAction, api);\n  return outputFinder;\n}\n\nfunction processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n  var axis = axisInfo.axis;\n\n  if (axis.scale.isBlank() || !axis.containData(newValue)) {\n    return;\n  }\n\n  if (!axisInfo.involveSeries) {\n    updaters.showPointer(axisInfo, newValue);\n    return;\n  } // Heavy calculation. So put it after axis.containData checking.\n\n\n  var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n  var payloadBatch = payloadInfo.payloadBatch;\n  var snapToValue = payloadInfo.snapToValue; // Fill content of event obj for echarts.connect.\n  // By defualt use the first involved series data as a sample to connect.\n\n  if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n    zrUtil.extend(outputFinder, payloadBatch[0]);\n  } // If no linkSource input, this process is for collecting link\n  // target, where snap should not be accepted.\n\n\n  if (!dontSnap && axisInfo.snap) {\n    if (axis.containData(snapToValue) && snapToValue != null) {\n      newValue = snapToValue;\n    }\n  }\n\n  updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder); // Tooltip should always be snapToValue, otherwise there will be\n  // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n\n  updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n}\n\nfunction buildPayloadsBySeries(value, axisInfo) {\n  var axis = axisInfo.axis;\n  var dim = axis.dim;\n  var snapToValue = value;\n  var payloadBatch = [];\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n  each(axisInfo.seriesModels, function (series, idx) {\n    var dataDim = series.getData().mapDimension(dim, true);\n    var seriesNestestValue;\n    var dataIndices;\n\n    if (series.getAxisTooltipData) {\n      var result = series.getAxisTooltipData(dataDim, value, axis);\n      dataIndices = result.dataIndices;\n      seriesNestestValue = result.nestestValue;\n    } else {\n      dataIndices = series.getData().indicesOfNearest(dataDim[0], value, // Add a threshold to avoid find the wrong dataIndex\n      // when data length is not same.\n      // false,\n      axis.type === 'category' ? 0.5 : null);\n\n      if (!dataIndices.length) {\n        return;\n      }\n\n      seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n    }\n\n    if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n      return;\n    }\n\n    var diff = value - seriesNestestValue;\n    var dist = Math.abs(diff); // Consider category case\n\n    if (dist <= minDist) {\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        snapToValue = seriesNestestValue;\n        payloadBatch.length = 0;\n      }\n\n      each(dataIndices, function (dataIndex) {\n        payloadBatch.push({\n          seriesIndex: series.seriesIndex,\n          dataIndexInside: dataIndex,\n          dataIndex: series.getData().getRawIndex(dataIndex)\n        });\n      });\n    }\n  });\n  return {\n    payloadBatch: payloadBatch,\n    snapToValue: snapToValue\n  };\n}\n\nfunction showPointer(showValueMap, axisInfo, value, payloadBatch) {\n  showValueMap[axisInfo.key] = {\n    value: value,\n    payloadBatch: payloadBatch\n  };\n}\n\nfunction showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n  var payloadBatch = payloadInfo.payloadBatch;\n  var axis = axisInfo.axis;\n  var axisModel = axis.model;\n  var axisPointerModel = axisInfo.axisPointerModel; // If no data, do not create anything in dataByCoordSys,\n  // whose length will be used to judge whether dispatch action.\n\n  if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n    return;\n  }\n\n  var coordSysModel = axisInfo.coordSys.model;\n  var coordSysKey = modelHelper.makeKey(coordSysModel);\n  var coordSysItem = dataByCoordSys.map[coordSysKey];\n\n  if (!coordSysItem) {\n    coordSysItem = dataByCoordSys.map[coordSysKey] = {\n      coordSysId: coordSysModel.id,\n      coordSysIndex: coordSysModel.componentIndex,\n      coordSysType: coordSysModel.type,\n      coordSysMainType: coordSysModel.mainType,\n      dataByAxis: []\n    };\n    dataByCoordSys.list.push(coordSysItem);\n  }\n\n  coordSysItem.dataByAxis.push({\n    axisDim: axis.dim,\n    axisIndex: axisModel.componentIndex,\n    axisType: axisModel.type,\n    axisId: axisModel.id,\n    value: value,\n    // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n    // depends that all models have been updated. So it should not be performed\n    // here. Considering axisPointerModel used here is volatile, which is hard\n    // to be retrieve in TooltipView, we prepare parameters here.\n    valueLabelOpt: {\n      precision: axisPointerModel.get('label.precision'),\n      formatter: axisPointerModel.get('label.formatter')\n    },\n    seriesDataIndices: payloadBatch.slice()\n  });\n}\n\nfunction updateModelActually(showValueMap, axesInfo, outputFinder) {\n  var outputAxesInfo = outputFinder.axesInfo = []; // Basic logic: If no 'show' required, 'hide' this axisPointer.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    var valItem = showValueMap[key];\n\n    if (valItem) {\n      !axisInfo.useHandle && (option.status = 'show');\n      option.value = valItem.value; // For label formatter param and highlight.\n\n      option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n    } // When always show (e.g., handle used), remain\n    // original value and status.\n    else {\n        // If hide, value still need to be set, consider\n        // click legend to toggle axis blank.\n        !axisInfo.useHandle && (option.status = 'hide');\n      } // If status is 'hide', should be no info in payload.\n\n\n    option.status === 'show' && outputAxesInfo.push({\n      axisDim: axisInfo.axis.dim,\n      axisIndex: axisInfo.axis.model.componentIndex,\n      value: option.value\n    });\n  });\n}\n\nfunction dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n  // Basic logic: If no showTip required, hideTip will be dispatched.\n  if (illegalPoint(point) || !dataByCoordSys.list.length) {\n    dispatchAction({\n      type: 'hideTip'\n    });\n    return;\n  } // In most case only one axis (or event one series is used). It is\n  // convinient to fetch payload.seriesIndex and payload.dataIndex\n  // dirtectly. So put the first seriesIndex and dataIndex of the first\n  // axis on the payload.\n\n\n  var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n  dispatchAction({\n    type: 'showTip',\n    escapeConnect: true,\n    x: point[0],\n    y: point[1],\n    tooltipOption: payload.tooltipOption,\n    position: payload.position,\n    dataIndexInside: sampleItem.dataIndexInside,\n    dataIndex: sampleItem.dataIndex,\n    seriesIndex: sampleItem.seriesIndex,\n    dataByCoordSys: dataByCoordSys.list\n  });\n}\n\nfunction dispatchHighDownActually(axesInfo, dispatchAction, api) {\n  // FIXME\n  // highlight status modification shoule be a stage of main process?\n  // (Consider confilct (e.g., legend and axisPointer) and setOption)\n  var zr = api.getZr();\n  var highDownKey = 'axisPointerLastHighlights';\n  var lastHighlights = inner(zr)[highDownKey] || {};\n  var newHighlights = inner(zr)[highDownKey] = {}; // Update highlight/downplay status according to axisPointer model.\n  // Build hash map and remove duplicate incidentally.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n      var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n      newHighlights[key] = batchItem;\n    });\n  }); // Diff.\n\n  var toHighlight = [];\n  var toDownplay = [];\n  zrUtil.each(lastHighlights, function (batchItem, key) {\n    !newHighlights[key] && toDownplay.push(batchItem);\n  });\n  zrUtil.each(newHighlights, function (batchItem, key) {\n    !lastHighlights[key] && toHighlight.push(batchItem);\n  });\n  toDownplay.length && api.dispatchAction({\n    type: 'downplay',\n    escapeConnect: true,\n    batch: toDownplay\n  });\n  toHighlight.length && api.dispatchAction({\n    type: 'highlight',\n    escapeConnect: true,\n    batch: toHighlight\n  });\n}\n\nfunction findInputAxisInfo(inputAxesInfo, axisInfo) {\n  for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n    var inputAxisInfo = inputAxesInfo[i];\n\n    if (axisInfo.axis.dim === inputAxisInfo.axisDim && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex) {\n      return inputAxisInfo;\n    }\n  }\n}\n\nfunction makeMapperParam(axisInfo) {\n  var axisModel = axisInfo.axis.model;\n  var item = {};\n  var dim = item.axisDim = axisInfo.axis.dim;\n  item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n  item.axisName = item[dim + 'AxisName'] = axisModel.name;\n  item.axisId = item[dim + 'AxisId'] = axisModel.id;\n  return item;\n}\n\nfunction illegalPoint(point) {\n  return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Extend axis 2d\n * @constructor module:echarts/coord/cartesian/Axis2D\n * @extends {module:echarts/coord/cartesian/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar Axis2D = function (dim, scale, coordExtent, axisType, position) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis position\n   *  - 'top'\n   *  - 'bottom'\n   *  - 'left'\n   *  - 'right'\n   */\n\n  this.position = position || 'bottom';\n};\n\nAxis2D.prototype = {\n  constructor: Axis2D,\n\n  /**\n   * Index of axis, can be used as key\n   */\n  index: 0,\n\n  /**\n   * Implemented in <module:echarts/coord/cartesian/Grid>.\n   * @return {Array.<module:echarts/coord/cartesian/Axis2D>}\n   *         If not on zero of other axis, return null/undefined.\n   *         If no axes, return an empty array.\n   */\n  getAxesOnZeroOf: null,\n\n  /**\n   * Axis model\n   * @param {module:echarts/coord/cartesian/AxisModel}\n   */\n  model: null,\n  isHorizontal: function () {\n    var position = this.position;\n    return position === 'top' || position === 'bottom';\n  },\n\n  /**\n   * Each item cooresponds to this.getExtent(), which\n   * means globalExtent[0] may greater than globalExtent[1],\n   * unless `asc` is input.\n   *\n   * @param {boolean} [asc]\n   * @return {Array.<number>}\n   */\n  getGlobalExtent: function (asc) {\n    var ret = this.getExtent();\n    ret[0] = this.toGlobalCoord(ret[0]);\n    ret[1] = this.toGlobalCoord(ret[1]);\n    asc && ret[0] > ret[1] && ret.reverse();\n    return ret;\n  },\n  getOtherAxis: function () {\n    this.grid.getOtherAxis();\n  },\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n  },\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var localCoord = axis.toLocalCoord(80);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toLocalCoord: null,\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var globalCoord = axis.toLocalCoord(40);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toGlobalCoord: null\n};\nzrUtil.inherits(Axis2D, Axis);\nvar _default = Axis2D;\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar isTypedArray = _util.isTypedArray;\n\nvar _clazz = require(\"../util/clazz\");\n\nvar enableClassCheck = _clazz.enableClassCheck;\n\nvar _sourceType = require(\"./helper/sourceType\");\n\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\nvar SERIES_LAYOUT_BY_COLUMN = _sourceType.SERIES_LAYOUT_BY_COLUMN;\nvar SOURCE_FORMAT_UNKNOWN = _sourceType.SOURCE_FORMAT_UNKNOWN;\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\nvar SOURCE_FORMAT_KEYED_COLUMNS = _sourceType.SOURCE_FORMAT_KEYED_COLUMNS;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * [sourceFormat]\n *\n * + \"original\":\n * This format is only used in series.data, where\n * itemStyle can be specified in data item.\n *\n * + \"arrayRows\":\n * [\n *     ['product', 'score', 'amount'],\n *     ['Matcha Latte', 89.3, 95.8],\n *     ['Milk Tea', 92.1, 89.4],\n *     ['Cheese Cocoa', 94.4, 91.2],\n *     ['Walnut Brownie', 85.4, 76.9]\n * ]\n *\n * + \"objectRows\":\n * [\n *     {product: 'Matcha Latte', score: 89.3, amount: 95.8},\n *     {product: 'Milk Tea', score: 92.1, amount: 89.4},\n *     {product: 'Cheese Cocoa', score: 94.4, amount: 91.2},\n *     {product: 'Walnut Brownie', score: 85.4, amount: 76.9}\n * ]\n *\n * + \"keyedColumns\":\n * {\n *     'product': ['Matcha Latte', 'Milk Tea', 'Cheese Cocoa', 'Walnut Brownie'],\n *     'count': [823, 235, 1042, 988],\n *     'score': [95.8, 81.4, 91.2, 76.9]\n * }\n *\n * + \"typedArray\"\n *\n * + \"unknown\"\n */\n\n/**\n * @constructor\n * @param {Object} fields\n * @param {string} fields.sourceFormat\n * @param {Array|Object} fields.fromDataset\n * @param {Array|Object} [fields.data]\n * @param {string} [seriesLayoutBy='column']\n * @param {Array.<Object|string>} [dimensionsDefine]\n * @param {Objet|HashMap} [encodeDefine]\n * @param {number} [startIndex=0]\n * @param {number} [dimensionsDetectCount]\n */\nfunction Source(fields) {\n  /**\n   * @type {boolean}\n   */\n  this.fromDataset = fields.fromDataset;\n  /**\n   * Not null/undefined.\n   * @type {Array|Object}\n   */\n\n  this.data = fields.data || (fields.sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS ? {} : []);\n  /**\n   * See also \"detectSourceFormat\".\n   * Not null/undefined.\n   * @type {string}\n   */\n\n  this.sourceFormat = fields.sourceFormat || SOURCE_FORMAT_UNKNOWN;\n  /**\n   * 'row' or 'column'\n   * Not null/undefined.\n   * @type {string} seriesLayoutBy\n   */\n\n  this.seriesLayoutBy = fields.seriesLayoutBy || SERIES_LAYOUT_BY_COLUMN;\n  /**\n   * dimensions definition in option.\n   * can be null/undefined.\n   * @type {Array.<Object|string>}\n   */\n\n  this.dimensionsDefine = fields.dimensionsDefine;\n  /**\n   * encode definition in option.\n   * can be null/undefined.\n   * @type {Objet|HashMap}\n   */\n\n  this.encodeDefine = fields.encodeDefine && createHashMap(fields.encodeDefine);\n  /**\n   * Not null/undefined, uint.\n   * @type {number}\n   */\n\n  this.startIndex = fields.startIndex || 0;\n  /**\n   * Can be null/undefined (when unknown), uint.\n   * @type {number}\n   */\n\n  this.dimensionsDetectCount = fields.dimensionsDetectCount;\n}\n/**\n * Wrap original series data for some compatibility cases.\n */\n\n\nSource.seriesDataToSource = function (data) {\n  return new Source({\n    data: data,\n    sourceFormat: isTypedArray(data) ? SOURCE_FORMAT_TYPED_ARRAY : SOURCE_FORMAT_ORIGINAL,\n    fromDataset: false\n  });\n};\n\nenableClassCheck(Source);\nvar _default = Source;\nmodule.exports = _default;","var _config = require(\"./config\");\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar util = require(\"./core/util\");\n\nvar log = require(\"./core/log\");\n\nvar BoundingRect = require(\"./core/BoundingRect\");\n\nvar timsort = require(\"./core/timsort\");\n\nvar Layer = require(\"./Layer\");\n\nvar requestAnimationFrame = require(\"./animation/requestAnimationFrame\");\n\nvar Image = require(\"./graphic/Image\");\n\nvar env = require(\"./core/env\");\n\nvar HOVER_LAYER_ZLEVEL = 1e5;\nvar CANVAS_ZLEVEL = 314159;\nvar EL_AFTER_INCREMENTAL_INC = 0.01;\nvar INCREMENTAL_INC = 0.001;\n\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n\nfunction isLayerValid(layer) {\n  if (!layer) {\n    return false;\n  }\n\n  if (layer.__builtin__) {\n    return true;\n  }\n\n  if (typeof layer.resize !== 'function' || typeof layer.refresh !== 'function') {\n    return false;\n  }\n\n  return true;\n}\n\nvar tmpRect = new BoundingRect(0, 0, 0, 0);\nvar viewRect = new BoundingRect(0, 0, 0, 0);\n\nfunction isDisplayableCulled(el, width, height) {\n  tmpRect.copy(el.getBoundingRect());\n\n  if (el.transform) {\n    tmpRect.applyTransform(el.transform);\n  }\n\n  viewRect.width = width;\n  viewRect.height = height;\n  return !tmpRect.intersect(viewRect);\n}\n\nfunction isClipPathChanged(clipPaths, prevClipPaths) {\n  if (clipPaths == prevClipPaths) {\n    // Can both be null or undefined\n    return false;\n  }\n\n  if (!clipPaths || !prevClipPaths || clipPaths.length !== prevClipPaths.length) {\n    return true;\n  }\n\n  for (var i = 0; i < clipPaths.length; i++) {\n    if (clipPaths[i] !== prevClipPaths[i]) {\n      return true;\n    }\n  }\n}\n\nfunction doClip(clipPaths, ctx) {\n  for (var i = 0; i < clipPaths.length; i++) {\n    var clipPath = clipPaths[i];\n    clipPath.setTransform(ctx);\n    ctx.beginPath();\n    clipPath.buildPath(ctx, clipPath.shape);\n    ctx.clip(); // Transform back\n\n    clipPath.restoreTransform(ctx);\n  }\n}\n\nfunction createRoot(width, height) {\n  var domRoot = document.createElement('div'); // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n  domRoot.style.cssText = ['position:relative', 'overflow:hidden', 'width:' + width + 'px', 'height:' + height + 'px', 'padding:0', 'margin:0', 'border-width:0'].join(';') + ';';\n  return domRoot;\n}\n/**\n * @alias module:zrender/Painter\n * @constructor\n * @param {HTMLElement} root 绘图容器\n * @param {module:zrender/Storage} storage\n * @param {Object} opts\n */\n\n\nvar Painter = function (root, storage, opts) {\n  this.type = 'canvas'; // In node environment using node-canvas\n\n  var singleCanvas = !root.nodeName // In node ?\n  || root.nodeName.toUpperCase() === 'CANVAS';\n  this._opts = opts = util.extend({}, opts || {});\n  /**\n   * @type {number}\n   */\n\n  this.dpr = opts.devicePixelRatio || devicePixelRatio;\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._singleCanvas = singleCanvas;\n  /**\n   * 绘图容器\n   * @type {HTMLElement}\n   */\n\n  this.root = root;\n  var rootStyle = root.style;\n\n  if (rootStyle) {\n    rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n    rootStyle['-webkit-user-select'] = rootStyle['user-select'] = rootStyle['-webkit-touch-callout'] = 'none';\n    root.innerHTML = '';\n  }\n  /**\n   * @type {module:zrender/Storage}\n   */\n\n\n  this.storage = storage;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  var zlevelList = this._zlevelList = [];\n  /**\n   * @type {Object.<string, module:zrender/Layer>}\n   * @private\n   */\n\n  var layers = this._layers = {};\n  /**\n   * @type {Object.<string, Object>}\n   * @private\n   */\n\n  this._layerConfig = {};\n  /**\n   * zrender will do compositing when root is a canvas and have multiple zlevels.\n   */\n\n  this._needsManuallyCompositing = false;\n\n  if (!singleCanvas) {\n    this._width = this._getSize(0);\n    this._height = this._getSize(1);\n    var domRoot = this._domRoot = createRoot(this._width, this._height);\n    root.appendChild(domRoot);\n  } else {\n    var width = root.width;\n    var height = root.height;\n\n    if (opts.width != null) {\n      width = opts.width;\n    }\n\n    if (opts.height != null) {\n      height = opts.height;\n    }\n\n    this.dpr = opts.devicePixelRatio || 1; // Use canvas width and height directly\n\n    root.width = width * this.dpr;\n    root.height = height * this.dpr;\n    this._width = width;\n    this._height = height; // Create layer if only one given canvas\n    // Device can be specified to create a high dpi image.\n\n    var mainLayer = new Layer(root, this, this.dpr);\n    mainLayer.__builtin__ = true;\n    mainLayer.initContext(); // FIXME Use canvas width and height\n    // mainLayer.resize(width, height);\n\n    layers[CANVAS_ZLEVEL] = mainLayer;\n    mainLayer.zlevel = CANVAS_ZLEVEL; // Not use common zlevel.\n\n    zlevelList.push(CANVAS_ZLEVEL);\n    this._domRoot = root;\n  }\n  /**\n   * @type {module:zrender/Layer}\n   * @private\n   */\n\n\n  this._hoverlayer = null;\n  this._hoverElements = [];\n};\n\nPainter.prototype = {\n  constructor: Painter,\n  getType: function () {\n    return 'canvas';\n  },\n\n  /**\n   * If painter use a single canvas\n   * @return {boolean}\n   */\n  isSingleCanvas: function () {\n    return this._singleCanvas;\n  },\n\n  /**\n   * @return {HTMLDivElement}\n   */\n  getViewportRoot: function () {\n    return this._domRoot;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n\n  /**\n   * 刷新\n   * @param {boolean} [paintAll=false] 强制绘制所有displayable\n   */\n  refresh: function (paintAll) {\n    var list = this.storage.getDisplayList(true);\n    var zlevelList = this._zlevelList;\n    this._redrawId = Math.random();\n\n    this._paintList(list, paintAll, this._redrawId); // Paint custum layers\n\n\n    for (var i = 0; i < zlevelList.length; i++) {\n      var z = zlevelList[i];\n      var layer = this._layers[z];\n\n      if (!layer.__builtin__ && layer.refresh) {\n        var clearColor = i === 0 ? this._backgroundColor : null;\n        layer.refresh(clearColor);\n      }\n    }\n\n    this.refreshHover();\n    return this;\n  },\n  addHover: function (el, hoverStyle) {\n    if (el.__hoverMir) {\n      return;\n    }\n\n    var elMirror = new el.constructor({\n      style: el.style,\n      shape: el.shape\n    });\n    elMirror.__from = el;\n    el.__hoverMir = elMirror;\n    elMirror.setStyle(hoverStyle);\n\n    this._hoverElements.push(elMirror);\n  },\n  removeHover: function (el) {\n    var elMirror = el.__hoverMir;\n    var hoverElements = this._hoverElements;\n    var idx = util.indexOf(hoverElements, elMirror);\n\n    if (idx >= 0) {\n      hoverElements.splice(idx, 1);\n    }\n\n    el.__hoverMir = null;\n  },\n  clearHover: function (el) {\n    var hoverElements = this._hoverElements;\n\n    for (var i = 0; i < hoverElements.length; i++) {\n      var from = hoverElements[i].__from;\n\n      if (from) {\n        from.__hoverMir = null;\n      }\n    }\n\n    hoverElements.length = 0;\n  },\n  refreshHover: function () {\n    var hoverElements = this._hoverElements;\n    var len = hoverElements.length;\n    var hoverLayer = this._hoverlayer;\n    hoverLayer && hoverLayer.clear();\n\n    if (!len) {\n      return;\n    }\n\n    timsort(hoverElements, this.storage.displayableSortFunc); // Use a extream large zlevel\n    // FIXME?\n\n    if (!hoverLayer) {\n      hoverLayer = this._hoverlayer = this.getLayer(HOVER_LAYER_ZLEVEL);\n    }\n\n    var scope = {};\n    hoverLayer.ctx.save();\n\n    for (var i = 0; i < len;) {\n      var el = hoverElements[i];\n      var originalEl = el.__from; // Original el is removed\n      // PENDING\n\n      if (!(originalEl && originalEl.__zr)) {\n        hoverElements.splice(i, 1);\n        originalEl.__hoverMir = null;\n        len--;\n        continue;\n      }\n\n      i++; // Use transform\n      // FIXME style and shape ?\n\n      if (!originalEl.invisible) {\n        el.transform = originalEl.transform;\n        el.invTransform = originalEl.invTransform;\n        el.__clipPaths = originalEl.__clipPaths; // el.\n\n        this._doPaintEl(el, hoverLayer, true, scope);\n      }\n    }\n\n    hoverLayer.ctx.restore();\n  },\n  getHoverLayer: function () {\n    return this.getLayer(HOVER_LAYER_ZLEVEL);\n  },\n  _paintList: function (list, paintAll, redrawId) {\n    if (this._redrawId !== redrawId) {\n      return;\n    }\n\n    paintAll = paintAll || false;\n\n    this._updateLayerStatus(list);\n\n    var finished = this._doPaintList(list, paintAll);\n\n    if (this._needsManuallyCompositing) {\n      this._compositeManually();\n    }\n\n    if (!finished) {\n      var self = this;\n      requestAnimationFrame(function () {\n        self._paintList(list, paintAll, redrawId);\n      });\n    }\n  },\n  _compositeManually: function () {\n    var ctx = this.getLayer(CANVAS_ZLEVEL).ctx;\n    var width = this._domRoot.width;\n    var height = this._domRoot.height;\n    ctx.clearRect(0, 0, width, height); // PENDING, If only builtin layer?\n\n    this.eachBuiltinLayer(function (layer) {\n      if (layer.virtual) {\n        ctx.drawImage(layer.dom, 0, 0, width, height);\n      }\n    });\n  },\n  _doPaintList: function (list, paintAll) {\n    var layerList = [];\n\n    for (var zi = 0; zi < this._zlevelList.length; zi++) {\n      var zlevel = this._zlevelList[zi];\n      var layer = this._layers[zlevel];\n\n      if (layer.__builtin__ && layer !== this._hoverlayer && (layer.__dirty || paintAll)) {\n        layerList.push(layer);\n      }\n    }\n\n    var finished = true;\n\n    for (var k = 0; k < layerList.length; k++) {\n      var layer = layerList[k];\n      var ctx = layer.ctx;\n      var scope = {};\n      ctx.save();\n      var start = paintAll ? layer.__startIndex : layer.__drawIndex;\n      var useTimer = !paintAll && layer.incremental && Date.now;\n      var startTime = useTimer && Date.now();\n      var clearColor = layer.zlevel === this._zlevelList[0] ? this._backgroundColor : null; // All elements in this layer are cleared.\n\n      if (layer.__startIndex === layer.__endIndex) {\n        layer.clear(false, clearColor);\n      } else if (start === layer.__startIndex) {\n        var firstEl = list[start];\n\n        if (!firstEl.incremental || !firstEl.notClear || paintAll) {\n          layer.clear(false, clearColor);\n        }\n      }\n\n      if (start === -1) {\n        console.error('For some unknown reason. drawIndex is -1');\n        start = layer.__startIndex;\n      }\n\n      for (var i = start; i < layer.__endIndex; i++) {\n        var el = list[i];\n\n        this._doPaintEl(el, layer, paintAll, scope);\n\n        el.__dirty = false;\n\n        if (useTimer) {\n          // Date.now can be executed in 13,025,305 ops/second.\n          var dTime = Date.now() - startTime; // Give 15 millisecond to draw.\n          // The rest elements will be drawn in the next frame.\n\n          if (dTime > 15) {\n            break;\n          }\n        }\n      }\n\n      layer.__drawIndex = i;\n\n      if (layer.__drawIndex < layer.__endIndex) {\n        finished = false;\n      }\n\n      if (scope.prevElClipPaths) {\n        // Needs restore the state. If last drawn element is in the clipping area.\n        ctx.restore();\n      }\n\n      ctx.restore();\n    }\n\n    if (env.wxa) {\n      // Flush for weixin application\n      util.each(this._layers, function (layer) {\n        if (layer && layer.ctx && layer.ctx.draw) {\n          layer.ctx.draw();\n        }\n      });\n    }\n\n    return finished;\n  },\n  _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n    var ctx = currentLayer.ctx;\n    var m = el.transform;\n\n    if ((currentLayer.__dirty || forcePaint) && // Ignore invisible element\n    !el.invisible // Ignore transparent element\n    && el.style.opacity !== 0 // Ignore scale 0 element, in some environment like node-canvas\n    // Draw a scale 0 element can cause all following draw wrong\n    // And setTransform with scale 0 will cause set back transform failed.\n    && !(m && !m[0] && !m[3]) // Ignore culled element\n    && !(el.culling && isDisplayableCulled(el, this._width, this._height))) {\n      var clipPaths = el.__clipPaths; // Optimize when clipping on group with several elements\n\n      if (!scope.prevElClipPaths || isClipPathChanged(clipPaths, scope.prevElClipPaths)) {\n        // If has previous clipping state, restore from it\n        if (scope.prevElClipPaths) {\n          currentLayer.ctx.restore();\n          scope.prevElClipPaths = null; // Reset prevEl since context has been restored\n\n          scope.prevEl = null;\n        } // New clipping state\n\n\n        if (clipPaths) {\n          ctx.save();\n          doClip(clipPaths, ctx);\n          scope.prevElClipPaths = clipPaths;\n        }\n      }\n\n      el.beforeBrush && el.beforeBrush(ctx);\n      el.brush(ctx, scope.prevEl || null);\n      scope.prevEl = el;\n      el.afterBrush && el.afterBrush(ctx);\n    }\n  },\n\n  /**\n   * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n   * @param {number} zlevel\n   * @param {boolean} virtual Virtual layer will not be inserted into dom.\n   * @return {module:zrender/Layer}\n   */\n  getLayer: function (zlevel, virtual) {\n    if (this._singleCanvas && !this._needsManuallyCompositing) {\n      zlevel = CANVAS_ZLEVEL;\n    }\n\n    var layer = this._layers[zlevel];\n\n    if (!layer) {\n      // Create a new layer\n      layer = new Layer('zr_' + zlevel, this, this.dpr);\n      layer.zlevel = zlevel;\n      layer.__builtin__ = true;\n\n      if (this._layerConfig[zlevel]) {\n        util.merge(layer, this._layerConfig[zlevel], true);\n      }\n\n      if (virtual) {\n        layer.virtual = virtual;\n      }\n\n      this.insertLayer(zlevel, layer); // Context is created after dom inserted to document\n      // Or excanvas will get 0px clientWidth and clientHeight\n\n      layer.initContext();\n    }\n\n    return layer;\n  },\n  insertLayer: function (zlevel, layer) {\n    var layersMap = this._layers;\n    var zlevelList = this._zlevelList;\n    var len = zlevelList.length;\n    var prevLayer = null;\n    var i = -1;\n    var domRoot = this._domRoot;\n\n    if (layersMap[zlevel]) {\n      log('ZLevel ' + zlevel + ' has been used already');\n      return;\n    } // Check if is a valid layer\n\n\n    if (!isLayerValid(layer)) {\n      log('Layer of zlevel ' + zlevel + ' is not valid');\n      return;\n    }\n\n    if (len > 0 && zlevel > zlevelList[0]) {\n      for (i = 0; i < len - 1; i++) {\n        if (zlevelList[i] < zlevel && zlevelList[i + 1] > zlevel) {\n          break;\n        }\n      }\n\n      prevLayer = layersMap[zlevelList[i]];\n    }\n\n    zlevelList.splice(i + 1, 0, zlevel);\n    layersMap[zlevel] = layer; // Vitual layer will not directly show on the screen.\n    // (It can be a WebGL layer and assigned to a ZImage element)\n    // But it still under management of zrender.\n\n    if (!layer.virtual) {\n      if (prevLayer) {\n        var prevDom = prevLayer.dom;\n\n        if (prevDom.nextSibling) {\n          domRoot.insertBefore(layer.dom, prevDom.nextSibling);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      } else {\n        if (domRoot.firstChild) {\n          domRoot.insertBefore(layer.dom, domRoot.firstChild);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      }\n    }\n  },\n  // Iterate each layer\n  eachLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      cb.call(context, this._layers[z], z);\n    }\n  },\n  // Iterate each buildin layer\n  eachBuiltinLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n  // Iterate each other layer except buildin layer\n  eachOtherLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (!layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n\n  /**\n   * 获取所有已创建的层\n   * @param {Array.<module:zrender/Layer>} [prevLayer]\n   */\n  getLayers: function () {\n    return this._layers;\n  },\n  _updateLayerStatus: function (list) {\n    this.eachBuiltinLayer(function (layer, z) {\n      layer.__dirty = layer.__used = false;\n    });\n\n    function updatePrevLayer(idx) {\n      if (prevLayer) {\n        if (prevLayer.__endIndex !== idx) {\n          prevLayer.__dirty = true;\n        }\n\n        prevLayer.__endIndex = idx;\n      }\n    }\n\n    if (this._singleCanvas) {\n      for (var i = 1; i < list.length; i++) {\n        var el = list[i];\n\n        if (el.zlevel !== list[i - 1].zlevel || el.incremental) {\n          this._needsManuallyCompositing = true;\n          break;\n        }\n      }\n    }\n\n    var prevLayer = null;\n    var incrementalLayerCount = 0;\n\n    for (var i = 0; i < list.length; i++) {\n      var el = list[i];\n      var zlevel = el.zlevel;\n      var layer; // PENDING If change one incremental element style ?\n      // TODO Where there are non-incremental elements between incremental elements.\n\n      if (el.incremental) {\n        layer = this.getLayer(zlevel + INCREMENTAL_INC, this._needsManuallyCompositing);\n        layer.incremental = true;\n        incrementalLayerCount = 1;\n      } else {\n        layer = this.getLayer(zlevel + (incrementalLayerCount > 0 ? EL_AFTER_INCREMENTAL_INC : 0), this._needsManuallyCompositing);\n      }\n\n      if (!layer.__builtin__) {\n        log('ZLevel ' + zlevel + ' has been used by unkown layer ' + layer.id);\n      }\n\n      if (layer !== prevLayer) {\n        layer.__used = true;\n\n        if (layer.__startIndex !== i) {\n          layer.__dirty = true;\n        }\n\n        layer.__startIndex = i;\n\n        if (!layer.incremental) {\n          layer.__drawIndex = i;\n        } else {\n          // Mark layer draw index needs to update.\n          layer.__drawIndex = -1;\n        }\n\n        updatePrevLayer(i);\n        prevLayer = layer;\n      }\n\n      if (el.__dirty) {\n        layer.__dirty = true;\n\n        if (layer.incremental && layer.__drawIndex < 0) {\n          // Start draw from the first dirty element.\n          layer.__drawIndex = i;\n        }\n      }\n    }\n\n    updatePrevLayer(i);\n    this.eachBuiltinLayer(function (layer, z) {\n      // Used in last frame but not in this frame. Needs clear\n      if (!layer.__used && layer.getElementCount() > 0) {\n        layer.__dirty = true;\n        layer.__startIndex = layer.__endIndex = layer.__drawIndex = 0;\n      } // For incremental layer. In case start index changed and no elements are dirty.\n\n\n      if (layer.__dirty && layer.__drawIndex < 0) {\n        layer.__drawIndex = layer.__startIndex;\n      }\n    });\n  },\n\n  /**\n   * 清除hover层外所有内容\n   */\n  clear: function () {\n    this.eachBuiltinLayer(this._clearLayer);\n    return this;\n  },\n  _clearLayer: function (layer) {\n    layer.clear();\n  },\n  setBackgroundColor: function (backgroundColor) {\n    this._backgroundColor = backgroundColor;\n  },\n\n  /**\n   * 修改指定zlevel的绘制参数\n   *\n   * @param {string} zlevel\n   * @param {Object} config 配置对象\n   * @param {string} [config.clearColor=0] 每次清空画布的颜色\n   * @param {string} [config.motionBlur=false] 是否开启动态模糊\n   * @param {number} [config.lastFrameAlpha=0.7]\n   *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   */\n  configLayer: function (zlevel, config) {\n    if (config) {\n      var layerConfig = this._layerConfig;\n\n      if (!layerConfig[zlevel]) {\n        layerConfig[zlevel] = config;\n      } else {\n        util.merge(layerConfig[zlevel], config, true);\n      }\n\n      for (var i = 0; i < this._zlevelList.length; i++) {\n        var _zlevel = this._zlevelList[i];\n\n        if (_zlevel === zlevel || _zlevel === zlevel + EL_AFTER_INCREMENTAL_INC) {\n          var layer = this._layers[_zlevel];\n          util.merge(layer, layerConfig[zlevel], true);\n        }\n      }\n    }\n  },\n\n  /**\n   * 删除指定层\n   * @param {number} zlevel 层所在的zlevel\n   */\n  delLayer: function (zlevel) {\n    var layers = this._layers;\n    var zlevelList = this._zlevelList;\n    var layer = layers[zlevel];\n\n    if (!layer) {\n      return;\n    }\n\n    layer.dom.parentNode.removeChild(layer.dom);\n    delete layers[zlevel];\n    zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n  },\n\n  /**\n   * 区域大小变化后重绘\n   */\n  resize: function (width, height) {\n    if (!this._domRoot.style) {\n      // Maybe in node or worker\n      if (width == null || height == null) {\n        return;\n      }\n\n      this._width = width;\n      this._height = height;\n      this.getLayer(CANVAS_ZLEVEL).resize(width, height);\n    } else {\n      var domRoot = this._domRoot; // FIXME Why ?\n\n      domRoot.style.display = 'none'; // Save input w/h\n\n      var opts = this._opts;\n      width != null && (opts.width = width);\n      height != null && (opts.height = height);\n      width = this._getSize(0);\n      height = this._getSize(1);\n      domRoot.style.display = ''; // 优化没有实际改变的resize\n\n      if (this._width != width || height != this._height) {\n        domRoot.style.width = width + 'px';\n        domRoot.style.height = height + 'px';\n\n        for (var id in this._layers) {\n          if (this._layers.hasOwnProperty(id)) {\n            this._layers[id].resize(width, height);\n          }\n        }\n\n        util.each(this._progressiveLayers, function (layer) {\n          layer.resize(width, height);\n        });\n        this.refresh(true);\n      }\n\n      this._width = width;\n      this._height = height;\n    }\n\n    return this;\n  },\n\n  /**\n   * 清除单独的一个层\n   * @param {number} zlevel\n   */\n  clearLayer: function (zlevel) {\n    var layer = this._layers[zlevel];\n\n    if (layer) {\n      layer.clear();\n    }\n  },\n\n  /**\n   * 释放\n   */\n  dispose: function () {\n    this.root.innerHTML = '';\n    this.root = this.storage = this._domRoot = this._layers = null;\n  },\n\n  /**\n   * Get canvas which has all thing rendered\n   * @param {Object} opts\n   * @param {string} [opts.backgroundColor]\n   * @param {number} [opts.pixelRatio]\n   */\n  getRenderedCanvas: function (opts) {\n    opts = opts || {};\n\n    if (this._singleCanvas && !this._compositeManually) {\n      return this._layers[CANVAS_ZLEVEL].dom;\n    }\n\n    var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n    imageLayer.initContext();\n    imageLayer.clear(false, opts.backgroundColor || this._backgroundColor);\n\n    if (opts.pixelRatio <= this.dpr) {\n      this.refresh();\n      var width = imageLayer.dom.width;\n      var height = imageLayer.dom.height;\n      var ctx = imageLayer.ctx;\n      this.eachLayer(function (layer) {\n        if (layer.__builtin__) {\n          ctx.drawImage(layer.dom, 0, 0, width, height);\n        } else if (layer.renderToCanvas) {\n          imageLayer.ctx.save();\n          layer.renderToCanvas(imageLayer.ctx);\n          imageLayer.ctx.restore();\n        }\n      });\n    } else {\n      // PENDING, echarts-gl and incremental rendering.\n      var scope = {};\n      var displayList = this.storage.getDisplayList(true);\n\n      for (var i = 0; i < displayList.length; i++) {\n        var el = displayList[i];\n\n        this._doPaintEl(el, imageLayer, true, scope);\n      }\n    }\n\n    return imageLayer.dom;\n  },\n\n  /**\n   * 获取绘图区域宽度\n   */\n  getWidth: function () {\n    return this._width;\n  },\n\n  /**\n   * 获取绘图区域高度\n   */\n  getHeight: function () {\n    return this._height;\n  },\n  _getSize: function (whIdx) {\n    var opts = this._opts;\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n      return parseFloat(opts[wh]);\n    }\n\n    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\n\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n  },\n  pathToImage: function (path, dpr) {\n    dpr = dpr || this.dpr;\n    var canvas = document.createElement('canvas');\n    var ctx = canvas.getContext('2d');\n    var rect = path.getBoundingRect();\n    var style = path.style;\n    var shadowBlurSize = style.shadowBlur * dpr;\n    var shadowOffsetX = style.shadowOffsetX * dpr;\n    var shadowOffsetY = style.shadowOffsetY * dpr;\n    var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n    var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n    var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n    var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n    var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n    var width = rect.width + leftMargin + rightMargin;\n    var height = rect.height + topMargin + bottomMargin;\n    canvas.width = width * dpr;\n    canvas.height = height * dpr;\n    ctx.scale(dpr, dpr);\n    ctx.clearRect(0, 0, width, height);\n    ctx.dpr = dpr;\n    var pathTransform = {\n      position: path.position,\n      rotation: path.rotation,\n      scale: path.scale\n    };\n    path.position = [leftMargin - rect.x, topMargin - rect.y];\n    path.rotation = 0;\n    path.scale = [1, 1];\n    path.updateTransform();\n\n    if (path) {\n      path.brush(ctx);\n    }\n\n    var ImageShape = Image;\n    var imgShape = new ImageShape({\n      style: {\n        x: 0,\n        y: 0,\n        image: canvas\n      }\n    });\n\n    if (pathTransform.position != null) {\n      imgShape.position = path.position = pathTransform.position;\n    }\n\n    if (pathTransform.rotation != null) {\n      imgShape.rotation = path.rotation = pathTransform.rotation;\n    }\n\n    if (pathTransform.scale != null) {\n      imgShape.scale = path.scale = pathTransform.scale;\n    }\n\n    return imgShape;\n  }\n};\nvar _default = Painter;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar numberUtil = require(\"./number\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * 每三位默认加,格式化\n * @param {string|number} x\n * @return {string}\n */\nfunction addCommas(x) {\n  if (isNaN(x)) {\n    return '-';\n  }\n\n  x = (x + '').split('.');\n  return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g, '$1,') + (x.length > 1 ? '.' + x[1] : '');\n}\n/**\n * @param {string} str\n * @param {boolean} [upperCaseFirst=false]\n * @return {string} str\n */\n\n\nfunction toCamelCase(str, upperCaseFirst) {\n  str = (str || '').toLowerCase().replace(/-(.)/g, function (match, group1) {\n    return group1.toUpperCase();\n  });\n\n  if (upperCaseFirst && str) {\n    str = str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  return str;\n}\n\nvar normalizeCssArray = zrUtil.normalizeCssArray;\nvar replaceReg = /([&<>\"'])/g;\nvar replaceMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  '\\'': '&#39;'\n};\n\nfunction encodeHTML(source) {\n  return source == null ? '' : (source + '').replace(replaceReg, function (str, c) {\n    return replaceMap[c];\n  });\n}\n\nvar TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\nvar wrapVar = function (varName, seriesIdx) {\n  return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n};\n/**\n * Template formatter\n * @param {string} tpl\n * @param {Array.<Object>|Object} paramsList\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTpl(tpl, paramsList, encode) {\n  if (!zrUtil.isArray(paramsList)) {\n    paramsList = [paramsList];\n  }\n\n  var seriesLen = paramsList.length;\n\n  if (!seriesLen) {\n    return '';\n  }\n\n  var $vars = paramsList[0].$vars || [];\n\n  for (var i = 0; i < $vars.length; i++) {\n    var alias = TPL_VAR_ALIAS[i];\n    tpl = tpl.replace(wrapVar(alias), wrapVar(alias, 0));\n  }\n\n  for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n    for (var k = 0; k < $vars.length; k++) {\n      var val = paramsList[seriesIdx][$vars[k]];\n      tpl = tpl.replace(wrapVar(TPL_VAR_ALIAS[k], seriesIdx), encode ? encodeHTML(val) : val);\n    }\n  }\n\n  return tpl;\n}\n/**\n * simple Template formatter\n *\n * @param {string} tpl\n * @param {Object} param\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTplSimple(tpl, param, encode) {\n  zrUtil.each(param, function (value, key) {\n    tpl = tpl.replace('{' + key + '}', encode ? encodeHTML(value) : value);\n  });\n  return tpl;\n}\n/**\n * @param {Object|string} [opt] If string, means color.\n * @param {string} [opt.color]\n * @param {string} [opt.extraCssText]\n * @param {string} [opt.type='item'] 'item' or 'subItem'\n * @return {string}\n */\n\n\nfunction getTooltipMarker(opt, extraCssText) {\n  opt = zrUtil.isString(opt) ? {\n    color: opt,\n    extraCssText: extraCssText\n  } : opt || {};\n  var color = opt.color;\n  var type = opt.type;\n  var extraCssText = opt.extraCssText;\n\n  if (!color) {\n    return '';\n  }\n\n  return type === 'subItem' ? '<span style=\"display:inline-block;vertical-align:middle;margin-right:8px;margin-left:3px;' + 'border-radius:4px;width:4px;height:4px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>' : '<span style=\"display:inline-block;margin-right:5px;' + 'border-radius:10px;width:10px;height:10px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>';\n}\n\nfunction pad(str, len) {\n  str += '';\n  return '0000'.substr(0, len - str.length) + str;\n}\n/**\n * ISO Date format\n * @param {string} tpl\n * @param {number} value\n * @param {boolean} [isUTC=false] Default in local time.\n *           see `module:echarts/scale/Time`\n *           and `module:echarts/util/number#parseDate`.\n * @inner\n */\n\n\nfunction formatTime(tpl, value, isUTC) {\n  if (tpl === 'week' || tpl === 'month' || tpl === 'quarter' || tpl === 'half-year' || tpl === 'year') {\n    tpl = 'MM-dd\\nyyyy';\n  }\n\n  var date = numberUtil.parseDate(value);\n  var utc = isUTC ? 'UTC' : '';\n  var y = date['get' + utc + 'FullYear']();\n  var M = date['get' + utc + 'Month']() + 1;\n  var d = date['get' + utc + 'Date']();\n  var h = date['get' + utc + 'Hours']();\n  var m = date['get' + utc + 'Minutes']();\n  var s = date['get' + utc + 'Seconds']();\n  var S = date['get' + utc + 'Milliseconds']();\n  tpl = tpl.replace('MM', pad(M, 2)).replace('M', M).replace('yyyy', y).replace('yy', y % 100).replace('dd', pad(d, 2)).replace('d', d).replace('hh', pad(h, 2)).replace('h', h).replace('mm', pad(m, 2)).replace('m', m).replace('ss', pad(s, 2)).replace('s', s).replace('SSS', pad(S, 3));\n  return tpl;\n}\n/**\n * Capital first\n * @param {string} str\n * @return {string}\n */\n\n\nfunction capitalFirst(str) {\n  return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n}\n\nvar truncateText = textContain.truncateText;\nvar getTextRect = textContain.getBoundingRect;\nexports.addCommas = addCommas;\nexports.toCamelCase = toCamelCase;\nexports.normalizeCssArray = normalizeCssArray;\nexports.encodeHTML = encodeHTML;\nexports.formatTpl = formatTpl;\nexports.formatTplSimple = formatTplSimple;\nexports.getTooltipMarker = getTooltipMarker;\nexports.formatTime = formatTime;\nexports.capitalFirst = capitalFirst;\nexports.truncateText = truncateText;\nexports.getTextRect = getTextRect;","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar isString = _util.isString;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Note that it is too complicated to support 3d stack by value\n * (have to create two-dimension inverted index), so in 3d case\n * we just support that stacked by index.\n *\n * @param {module:echarts/model/Series} seriesModel\n * @param {Array.<string|Object>} dimensionInfoList The same as the input of <module:echarts/data/List>.\n *        The input dimensionInfoList will be modified.\n * @param {Object} [opt]\n * @param {boolean} [opt.stackedCoordDimension=''] Specify a coord dimension if needed.\n * @param {boolean} [opt.byIndex=false]\n * @return {Object} calculationInfo\n * {\n *     stackedDimension: string\n *     stackedByDimension: string\n *     isStackedByIndex: boolean\n *     stackedOverDimension: string\n *     stackResultDimension: string\n * }\n */\nfunction enableDataStack(seriesModel, dimensionInfoList, opt) {\n  opt = opt || {};\n  var byIndex = opt.byIndex;\n  var stackedCoordDimension = opt.stackedCoordDimension; // Compatibal: when `stack` is set as '', do not stack.\n\n  var mayStack = !!(seriesModel && seriesModel.get('stack'));\n  var stackedByDimInfo;\n  var stackedDimInfo;\n  var stackResultDimension;\n  var stackedOverDimension;\n  each(dimensionInfoList, function (dimensionInfo, index) {\n    if (isString(dimensionInfo)) {\n      dimensionInfoList[index] = dimensionInfo = {\n        name: dimensionInfo\n      };\n    }\n\n    if (mayStack && !dimensionInfo.isExtraCoord) {\n      // Find the first ordinal dimension as the stackedByDimInfo.\n      if (!byIndex && !stackedByDimInfo && dimensionInfo.ordinalMeta) {\n        stackedByDimInfo = dimensionInfo;\n      } // Find the first stackable dimension as the stackedDimInfo.\n\n\n      if (!stackedDimInfo && dimensionInfo.type !== 'ordinal' && dimensionInfo.type !== 'time' && (!stackedCoordDimension || stackedCoordDimension === dimensionInfo.coordDim)) {\n        stackedDimInfo = dimensionInfo;\n      }\n    }\n  });\n\n  if (stackedDimInfo && !byIndex && !stackedByDimInfo) {\n    // Compatible with previous design, value axis (time axis) only stack by index.\n    // It may make sense if the user provides elaborately constructed data.\n    byIndex = true;\n  } // Add stack dimension, they can be both calculated by coordinate system in `unionExtent`.\n  // That put stack logic in List is for using conveniently in echarts extensions, but it\n  // might not be a good way.\n\n\n  if (stackedDimInfo) {\n    // Use a weird name that not duplicated with other names.\n    stackResultDimension = '__\\0ecstackresult';\n    stackedOverDimension = '__\\0ecstackedover'; // Create inverted index to fast query index by value.\n\n    if (stackedByDimInfo) {\n      stackedByDimInfo.createInvertedIndices = true;\n    }\n\n    var stackedDimCoordDim = stackedDimInfo.coordDim;\n    var stackedDimType = stackedDimInfo.type;\n    var stackedDimCoordIndex = 0;\n    each(dimensionInfoList, function (dimensionInfo) {\n      if (dimensionInfo.coordDim === stackedDimCoordDim) {\n        stackedDimCoordIndex++;\n      }\n    });\n    dimensionInfoList.push({\n      name: stackResultDimension,\n      coordDim: stackedDimCoordDim,\n      coordDimIndex: stackedDimCoordIndex,\n      type: stackedDimType,\n      isExtraCoord: true,\n      isCalculationCoord: true\n    });\n    stackedDimCoordIndex++;\n    dimensionInfoList.push({\n      name: stackedOverDimension,\n      // This dimension contains stack base (generally, 0), so do not set it as\n      // `stackedDimCoordDim` to avoid extent calculation, consider log scale.\n      coordDim: stackedOverDimension,\n      coordDimIndex: stackedDimCoordIndex,\n      type: stackedDimType,\n      isExtraCoord: true,\n      isCalculationCoord: true\n    });\n  }\n\n  return {\n    stackedDimension: stackedDimInfo && stackedDimInfo.name,\n    stackedByDimension: stackedByDimInfo && stackedByDimInfo.name,\n    isStackedByIndex: byIndex,\n    stackedOverDimension: stackedOverDimension,\n    stackResultDimension: stackResultDimension\n  };\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {string} stackedDim\n */\n\n\nfunction isDimensionStacked(data, stackedDim\n/*, stackedByDim*/\n) {\n  // Each single series only maps to one pair of axis. So we do not need to\n  // check stackByDim, whatever stacked by a dimension or stacked by index.\n  return !!stackedDim && stackedDim === data.getCalculationInfo('stackedDimension'); // && (\n  //     stackedByDim != null\n  //         ? stackedByDim === data.getCalculationInfo('stackedByDimension')\n  //         : data.getCalculationInfo('isStackedByIndex')\n  // );\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {string} targetDim\n * @param {string} [stackedByDim] If not input this parameter, check whether\n *                                stacked by index.\n * @return {string} dimension\n */\n\n\nfunction getStackedDimension(data, targetDim) {\n  return isDimensionStacked(data, targetDim) ? data.getCalculationInfo('stackResultDimension') : targetDim;\n}\n\nexports.enableDataStack = enableDataStack;\nexports.isDimensionStacked = isDimensionStacked;\nexports.getStackedDimension = getStackedDimension;","var PathProxy = require(\"../core/PathProxy\");\n\nvar _vector = require(\"../core/vector\");\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar CMD = PathProxy.CMD;\nvar points = [[], [], []];\nvar mathSqrt = Math.sqrt;\nvar mathAtan2 = Math.atan2;\n\nfunction _default(path, m) {\n  var data = path.data;\n  var cmd;\n  var nPoint;\n  var i;\n  var j;\n  var k;\n  var p;\n  var M = CMD.M;\n  var C = CMD.C;\n  var L = CMD.L;\n  var R = CMD.R;\n  var A = CMD.A;\n  var Q = CMD.Q;\n\n  for (i = 0, j = 0; i < data.length;) {\n    cmd = data[i++];\n    j = i;\n    nPoint = 0;\n\n    switch (cmd) {\n      case M:\n        nPoint = 1;\n        break;\n\n      case L:\n        nPoint = 1;\n        break;\n\n      case C:\n        nPoint = 3;\n        break;\n\n      case Q:\n        nPoint = 2;\n        break;\n\n      case A:\n        var x = m[4];\n        var y = m[5];\n        var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n        var angle = mathAtan2(-m[1] / sy, m[0] / sx); // cx\n\n        data[i] *= sx;\n        data[i++] += x; // cy\n\n        data[i] *= sy;\n        data[i++] += y; // Scale rx and ry\n        // FIXME Assume psi is 0 here\n\n        data[i++] *= sx;\n        data[i++] *= sy; // Start angle\n\n        data[i++] += angle; // end angle\n\n        data[i++] += angle; // FIXME psi\n\n        i += 2;\n        j = i;\n        break;\n\n      case R:\n        // x0, y0\n        p[0] = data[i++];\n        p[1] = data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1]; // x1, y1\n\n        p[0] += data[i++];\n        p[1] += data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1];\n    }\n\n    for (k = 0; k < nPoint; k++) {\n      var p = points[k];\n      p[0] = data[i++];\n      p[1] = data[i++];\n      v2ApplyTransform(p, p, m); // Write back\n\n      data[j++] = p[0];\n      data[j++] = p[1];\n    }\n  }\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./line/LineSeries\");\n\nrequire(\"./line/LineView\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar layoutPoints = require(\"../layout/points\");\n\nvar dataSample = require(\"../processor/dataSample\");\n\nrequire(\"../component/gridSimple\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// In case developer forget to include grid component\necharts.registerVisual(visualSymbol('line', 'circle', 'line'));\necharts.registerLayout(layoutPoints('line')); // Down sample after filter\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, dataSample('line'));","var _helper = require(\"./helper\");\n\nvar prepareDataCoordInfo = _helper.prepareDataCoordInfo;\nvar getStackedOnPoint = _helper.getStackedOnPoint;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// var arrayDiff = require('zrender/src/core/arrayDiff');\n// 'zrender/src/core/arrayDiff' has been used before, but it did\n// not do well in performance when roam with fixed dataZoom window.\n// function convertToIntId(newIdList, oldIdList) {\n//     // Generate int id instead of string id.\n//     // Compare string maybe slow in score function of arrDiff\n//     // Assume id in idList are all unique\n//     var idIndicesMap = {};\n//     var idx = 0;\n//     for (var i = 0; i < newIdList.length; i++) {\n//         idIndicesMap[newIdList[i]] = idx;\n//         newIdList[i] = idx++;\n//     }\n//     for (var i = 0; i < oldIdList.length; i++) {\n//         var oldId = oldIdList[i];\n//         // Same with newIdList\n//         if (idIndicesMap[oldId]) {\n//             oldIdList[i] = idIndicesMap[oldId];\n//         }\n//         else {\n//             oldIdList[i] = idx++;\n//         }\n//     }\n// }\nfunction diffData(oldData, newData) {\n  var diffResult = [];\n  newData.diff(oldData).add(function (idx) {\n    diffResult.push({\n      cmd: '+',\n      idx: idx\n    });\n  }).update(function (newIdx, oldIdx) {\n    diffResult.push({\n      cmd: '=',\n      idx: oldIdx,\n      idx1: newIdx\n    });\n  }).remove(function (idx) {\n    diffResult.push({\n      cmd: '-',\n      idx: idx\n    });\n  }).execute();\n  return diffResult;\n}\n\nfunction _default(oldData, newData, oldStackedOnPoints, newStackedOnPoints, oldCoordSys, newCoordSys, oldValueOrigin, newValueOrigin) {\n  var diff = diffData(oldData, newData); // var newIdList = newData.mapArray(newData.getId);\n  // var oldIdList = oldData.mapArray(oldData.getId);\n  // convertToIntId(newIdList, oldIdList);\n  // // FIXME One data ?\n  // diff = arrayDiff(oldIdList, newIdList);\n\n  var currPoints = [];\n  var nextPoints = []; // Points for stacking base line\n\n  var currStackedPoints = [];\n  var nextStackedPoints = [];\n  var status = [];\n  var sortedIndices = [];\n  var rawIndices = [];\n  var newDataOldCoordInfo = prepareDataCoordInfo(oldCoordSys, newData, oldValueOrigin);\n  var oldDataNewCoordInfo = prepareDataCoordInfo(newCoordSys, oldData, newValueOrigin);\n\n  for (var i = 0; i < diff.length; i++) {\n    var diffItem = diff[i];\n    var pointAdded = true; // FIXME, animation is not so perfect when dataZoom window moves fast\n    // Which is in case remvoing or add more than one data in the tail or head\n\n    switch (diffItem.cmd) {\n      case '=':\n        var currentPt = oldData.getItemLayout(diffItem.idx);\n        var nextPt = newData.getItemLayout(diffItem.idx1); // If previous data is NaN, use next point directly\n\n        if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n          currentPt = nextPt.slice();\n        }\n\n        currPoints.push(currentPt);\n        nextPoints.push(nextPt);\n        currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n        nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n        rawIndices.push(newData.getRawIndex(diffItem.idx1));\n        break;\n\n      case '+':\n        var idx = diffItem.idx;\n        currPoints.push(oldCoordSys.dataToPoint([newData.get(newDataOldCoordInfo.dataDimsForPoint[0], idx), newData.get(newDataOldCoordInfo.dataDimsForPoint[1], idx)]));\n        nextPoints.push(newData.getItemLayout(idx).slice());\n        currStackedPoints.push(getStackedOnPoint(newDataOldCoordInfo, oldCoordSys, newData, idx));\n        nextStackedPoints.push(newStackedOnPoints[idx]);\n        rawIndices.push(newData.getRawIndex(idx));\n        break;\n\n      case '-':\n        var idx = diffItem.idx;\n        var rawIndex = oldData.getRawIndex(idx); // Data is replaced. In the case of dynamic data queue\n        // FIXME FIXME FIXME\n\n        if (rawIndex !== idx) {\n          currPoints.push(oldData.getItemLayout(idx));\n          nextPoints.push(newCoordSys.dataToPoint([oldData.get(oldDataNewCoordInfo.dataDimsForPoint[0], idx), oldData.get(oldDataNewCoordInfo.dataDimsForPoint[1], idx)]));\n          currStackedPoints.push(oldStackedOnPoints[idx]);\n          nextStackedPoints.push(getStackedOnPoint(oldDataNewCoordInfo, newCoordSys, oldData, idx));\n          rawIndices.push(rawIndex);\n        } else {\n          pointAdded = false;\n        }\n\n    } // Original indices\n\n\n    if (pointAdded) {\n      status.push(diffItem);\n      sortedIndices.push(sortedIndices.length);\n    }\n  } // Diff result may be crossed if all items are changed\n  // Sort by data index\n\n\n  sortedIndices.sort(function (a, b) {\n    return rawIndices[a] - rawIndices[b];\n  });\n  var sortedCurrPoints = [];\n  var sortedNextPoints = [];\n  var sortedCurrStackedPoints = [];\n  var sortedNextStackedPoints = [];\n  var sortedStatus = [];\n\n  for (var i = 0; i < sortedIndices.length; i++) {\n    var idx = sortedIndices[i];\n    sortedCurrPoints[i] = currPoints[idx];\n    sortedNextPoints[i] = nextPoints[idx];\n    sortedCurrStackedPoints[i] = currStackedPoints[idx];\n    sortedNextStackedPoints[i] = nextStackedPoints[idx];\n    sortedStatus[i] = status[idx];\n  }\n\n  return {\n    current: sortedCurrPoints,\n    next: sortedNextPoints,\n    stackedOnCurrent: sortedCurrStackedPoints,\n    stackedOnNext: sortedNextStackedPoints,\n    status: sortedStatus\n  };\n}\n\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar SymbolClz = require(\"../helper/Symbol\");\n\nvar lineAnimationDiff = require(\"./lineAnimationDiff\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar _poly = require(\"./poly\");\n\nvar Polyline = _poly.Polyline;\nvar Polygon = _poly.Polygon;\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar _number = require(\"../../util/number\");\n\nvar round = _number.round;\n\nvar _helper = require(\"./helper\");\n\nvar prepareDataCoordInfo = _helper.prepareDataCoordInfo;\nvar getStackedOnPoint = _helper.getStackedOnPoint;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME step not support polar\nfunction isPointsSame(points1, points2) {\n  if (points1.length !== points2.length) {\n    return;\n  }\n\n  for (var i = 0; i < points1.length; i++) {\n    var p1 = points1[i];\n    var p2 = points2[i];\n\n    if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n      return;\n    }\n  }\n\n  return true;\n}\n\nfunction getSmooth(smooth) {\n  return typeof smooth === 'number' ? smooth : smooth ? 0.5 : 0;\n}\n\nfunction getAxisExtentWithGap(axis) {\n  var extent = axis.getGlobalExtent();\n\n  if (axis.onBand) {\n    // Remove extra 1px to avoid line miter in clipped edge\n    var halfBandWidth = axis.getBandWidth() / 2 - 1;\n    var dir = extent[1] > extent[0] ? 1 : -1;\n    extent[0] += dir * halfBandWidth;\n    extent[1] -= dir * halfBandWidth;\n  }\n\n  return extent;\n}\n/**\n * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n * @param {module:echarts/data/List} data\n * @param {Object} dataCoordInfo\n * @param {Array.<Array.<number>>} points\n */\n\n\nfunction getStackedOnPoints(coordSys, data, dataCoordInfo) {\n  if (!dataCoordInfo.valueDim) {\n    return [];\n  }\n\n  var points = [];\n\n  for (var idx = 0, len = data.count(); idx < len; idx++) {\n    points.push(getStackedOnPoint(dataCoordInfo, coordSys, data, idx));\n  }\n\n  return points;\n}\n\nfunction createGridClipShape(cartesian, hasAnimation, forSymbol, seriesModel) {\n  var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n  var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n  var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n  var x = Math.min(xExtent[0], xExtent[1]);\n  var y = Math.min(yExtent[0], yExtent[1]);\n  var width = Math.max(xExtent[0], xExtent[1]) - x;\n  var height = Math.max(yExtent[0], yExtent[1]) - y; // Avoid float number rounding error for symbol on the edge of axis extent.\n  // See #7913 and `test/dataZoom-clip.html`.\n\n  if (forSymbol) {\n    x -= 0.5;\n    width += 0.5;\n    y -= 0.5;\n    height += 0.5;\n  } else {\n    var lineWidth = seriesModel.get('lineStyle.width') || 2; // Expand clip shape to avoid clipping when line value exceeds axis\n\n    var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n\n    if (isHorizontal) {\n      y -= expandSize;\n      height += expandSize * 2;\n    } else {\n      x -= expandSize;\n      width += expandSize * 2;\n    }\n  }\n\n  var clipPath = new graphic.Rect({\n    shape: {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n    graphic.initProps(clipPath, {\n      shape: {\n        width: width,\n        height: height\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createPolarClipShape(polar, hasAnimation, forSymbol, seriesModel) {\n  var angleAxis = polar.getAngleAxis();\n  var radiusAxis = polar.getRadiusAxis();\n  var radiusExtent = radiusAxis.getExtent().slice();\n  radiusExtent[0] > radiusExtent[1] && radiusExtent.reverse();\n  var angleExtent = angleAxis.getExtent();\n  var RADIAN = Math.PI / 180; // Avoid float number rounding error for symbol on the edge of axis extent.\n\n  if (forSymbol) {\n    radiusExtent[0] -= 0.5;\n    radiusExtent[1] += 0.5;\n  }\n\n  var clipPath = new graphic.Sector({\n    shape: {\n      cx: round(polar.cx, 1),\n      cy: round(polar.cy, 1),\n      r0: round(radiusExtent[0], 1),\n      r: round(radiusExtent[1], 1),\n      startAngle: -angleExtent[0] * RADIAN,\n      endAngle: -angleExtent[1] * RADIAN,\n      clockwise: angleAxis.inverse\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: -angleExtent[1] * RADIAN\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createClipShape(coordSys, hasAnimation, forSymbol, seriesModel) {\n  return coordSys.type === 'polar' ? createPolarClipShape(coordSys, hasAnimation, forSymbol, seriesModel) : createGridClipShape(coordSys, hasAnimation, forSymbol, seriesModel);\n}\n\nfunction turnPointsIntoStep(points, coordSys, stepTurnAt) {\n  var baseAxis = coordSys.getBaseAxis();\n  var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n  var stepPoints = [];\n\n  for (var i = 0; i < points.length - 1; i++) {\n    var nextPt = points[i + 1];\n    var pt = points[i];\n    stepPoints.push(pt);\n    var stepPt = [];\n\n    switch (stepTurnAt) {\n      case 'end':\n        stepPt[baseIndex] = nextPt[baseIndex];\n        stepPt[1 - baseIndex] = pt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n        break;\n\n      case 'middle':\n        // default is start\n        var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n        var stepPt2 = [];\n        stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n        stepPt[1 - baseIndex] = pt[1 - baseIndex];\n        stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n        stepPoints.push(stepPt);\n        stepPoints.push(stepPt2);\n        break;\n\n      default:\n        stepPt[baseIndex] = pt[baseIndex];\n        stepPt[1 - baseIndex] = nextPt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n    }\n  } // Last points\n\n\n  points[i] && stepPoints.push(points[i]);\n  return stepPoints;\n}\n\nfunction getVisualGradient(data, coordSys) {\n  var visualMetaList = data.getVisual('visualMeta');\n\n  if (!visualMetaList || !visualMetaList.length || !data.count()) {\n    // When data.count() is 0, gradient range can not be calculated.\n    return;\n  }\n\n  if (coordSys.type !== 'cartesian2d') {\n    return;\n  }\n\n  var coordDim;\n  var visualMeta;\n\n  for (var i = visualMetaList.length - 1; i >= 0; i--) {\n    var dimIndex = visualMetaList[i].dimension;\n    var dimName = data.dimensions[dimIndex];\n    var dimInfo = data.getDimensionInfo(dimName);\n    coordDim = dimInfo && dimInfo.coordDim; // Can only be x or y\n\n    if (coordDim === 'x' || coordDim === 'y') {\n      visualMeta = visualMetaList[i];\n      break;\n    }\n  }\n\n  if (!visualMeta) {\n    return;\n  } // If the area to be rendered is bigger than area defined by LinearGradient,\n  // the canvas spec prescribes that the color of the first stop and the last\n  // stop should be used. But if two stops are added at offset 0, in effect\n  // browsers use the color of the second stop to render area outside\n  // LinearGradient. So we can only infinitesimally extend area defined in\n  // LinearGradient to render `outerColors`.\n\n\n  var axis = coordSys.getAxis(coordDim); // dataToCoor mapping may not be linear, but must be monotonic.\n\n  var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n    return {\n      coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n      color: stop.color\n    };\n  });\n  var stopLen = colorStops.length;\n  var outerColors = visualMeta.outerColors.slice();\n\n  if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n    colorStops.reverse();\n    outerColors.reverse();\n  }\n\n  var tinyExtent = 10; // Arbitrary value: 10px\n\n  var minCoord = colorStops[0].coord - tinyExtent;\n  var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n  var coordSpan = maxCoord - minCoord;\n\n  if (coordSpan < 1e-3) {\n    return 'transparent';\n  }\n\n  zrUtil.each(colorStops, function (stop) {\n    stop.offset = (stop.coord - minCoord) / coordSpan;\n  });\n  colorStops.push({\n    offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n    color: outerColors[1] || 'transparent'\n  });\n  colorStops.unshift({\n    // notice colorStops.length have been changed.\n    offset: stopLen ? colorStops[0].offset : 0.5,\n    color: outerColors[0] || 'transparent'\n  }); // zrUtil.each(colorStops, function (colorStop) {\n  //     // Make sure each offset has rounded px to avoid not sharp edge\n  //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n  // });\n\n  var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n  gradient[coordDim] = minCoord;\n  gradient[coordDim + '2'] = maxCoord;\n  return gradient;\n}\n\nfunction getIsIgnoreFunc(seriesModel, data, coordSys) {\n  var showAllSymbol = seriesModel.get('showAllSymbol');\n  var isAuto = showAllSymbol === 'auto';\n\n  if (showAllSymbol && !isAuto) {\n    return;\n  }\n\n  var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n\n  if (!categoryAxis) {\n    return;\n  } // Note that category label interval strategy might bring some weird effect\n  // in some scenario: users may wonder why some of the symbols are not\n  // displayed. So we show all symbols as possible as we can.\n\n\n  if (isAuto // Simplify the logic, do not determine label overlap here.\n  && canShowAllSymbolForCategory(categoryAxis, data)) {\n    return;\n  } // Otherwise follow the label interval strategy on category axis.\n\n\n  var categoryDataDim = data.mapDimension(categoryAxis.dim);\n  var labelMap = {};\n  zrUtil.each(categoryAxis.getViewLabels(), function (labelItem) {\n    labelMap[labelItem.tickValue] = 1;\n  });\n  return function (dataIndex) {\n    return !labelMap.hasOwnProperty(data.get(categoryDataDim, dataIndex));\n  };\n}\n\nfunction canShowAllSymbolForCategory(categoryAxis, data) {\n  // In mose cases, line is monotonous on category axis, and the label size\n  // is close with each other. So we check the symbol size and some of the\n  // label size alone with the category axis to estimate whether all symbol\n  // can be shown without overlap.\n  var axisExtent = categoryAxis.getExtent();\n  var availSize = Math.abs(axisExtent[1] - axisExtent[0]) / categoryAxis.scale.count();\n  isNaN(availSize) && (availSize = 0); // 0/0 is NaN.\n  // Sampling some points, max 5.\n\n  var dataLen = data.count();\n  var step = Math.max(1, Math.round(dataLen / 5));\n\n  for (var dataIndex = 0; dataIndex < dataLen; dataIndex += step) {\n    if (SymbolClz.getSymbolSize(data, dataIndex // Only for cartesian, where `isHorizontal` exists.\n    )[categoryAxis.isHorizontal() ? 1 : 0] // Empirical number\n    * 1.5 > availSize) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nvar _default = ChartView.extend({\n  type: 'line',\n  init: function () {\n    var lineGroup = new graphic.Group();\n    var symbolDraw = new SymbolDraw();\n    this.group.add(symbolDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineGroup = lineGroup;\n  },\n  render: function (seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var lineStyleModel = seriesModel.getModel('lineStyle');\n    var areaStyleModel = seriesModel.getModel('areaStyle');\n    var points = data.mapArray(data.getItemLayout);\n    var isCoordSysPolar = coordSys.type === 'polar';\n    var prevCoordSys = this._coordSys;\n    var symbolDraw = this._symbolDraw;\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var lineGroup = this._lineGroup;\n    var hasAnimation = seriesModel.get('animation');\n    var isAreaChart = !areaStyleModel.isEmpty();\n    var valueOrigin = areaStyleModel.get('origin');\n    var dataCoordInfo = prepareDataCoordInfo(coordSys, data, valueOrigin);\n    var stackedOnPoints = getStackedOnPoints(coordSys, data, dataCoordInfo);\n    var showSymbol = seriesModel.get('showSymbol');\n    var isIgnoreFunc = showSymbol && !isCoordSysPolar && getIsIgnoreFunc(seriesModel, data, coordSys); // Remove temporary symbols\n\n    var oldData = this._data;\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    }); // Remove previous created symbols if showSymbol changed to false\n\n    if (!showSymbol) {\n      symbolDraw.remove();\n    }\n\n    group.add(lineGroup); // FIXME step not support polar\n\n    var step = !isCoordSysPolar && seriesModel.get('step'); // Initialization animation or coordinate system changed\n\n    if (!(polyline && prevCoordSys.type === coordSys.type && step === this._step)) {\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isIgnoreFunc,\n        clipShape: createClipShape(coordSys, false, true, seriesModel)\n      });\n\n      if (step) {\n        // TODO If stacked series is not step\n        points = turnPointsIntoStep(points, coordSys, step);\n        stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n      }\n\n      polyline = this._newPolyline(points, coordSys, hasAnimation);\n\n      if (isAreaChart) {\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      }\n\n      lineGroup.setClipPath(createClipShape(coordSys, true, false, seriesModel));\n    } else {\n      if (isAreaChart && !polygon) {\n        // If areaStyle is added\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      } else if (polygon && !isAreaChart) {\n        // If areaStyle is removed\n        lineGroup.remove(polygon);\n        polygon = this._polygon = null;\n      } // Update clipPath\n\n\n      lineGroup.setClipPath(createClipShape(coordSys, false, false, seriesModel)); // Always update, or it is wrong in the case turning on legend\n      // because points are not changed\n\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isIgnoreFunc,\n        clipShape: createClipShape(coordSys, false, true, seriesModel)\n      }); // Stop symbol animation and sync with line points\n      // FIXME performance?\n\n      data.eachItemGraphicEl(function (el) {\n        el.stopAnimation(true);\n      }); // In the case data zoom triggerred refreshing frequently\n      // Data may not change if line has a category axis. So it should animate nothing\n\n      if (!isPointsSame(this._stackedOnPoints, stackedOnPoints) || !isPointsSame(this._points, points)) {\n        if (hasAnimation) {\n          this._updateAnimation(data, stackedOnPoints, coordSys, api, step, valueOrigin);\n        } else {\n          // Not do it in update with animation\n          if (step) {\n            // TODO If stacked series is not step\n            points = turnPointsIntoStep(points, coordSys, step);\n            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n          }\n\n          polyline.setShape({\n            points: points\n          });\n          polygon && polygon.setShape({\n            points: points,\n            stackedOnPoints: stackedOnPoints\n          });\n        }\n      }\n    }\n\n    var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n    polyline.useStyle(zrUtil.defaults( // Use color in lineStyle first\n    lineStyleModel.getLineStyle(), {\n      fill: 'none',\n      stroke: visualColor,\n      lineJoin: 'bevel'\n    }));\n    var smooth = seriesModel.get('smooth');\n    smooth = getSmooth(seriesModel.get('smooth'));\n    polyline.setShape({\n      smooth: smooth,\n      smoothMonotone: seriesModel.get('smoothMonotone'),\n      connectNulls: seriesModel.get('connectNulls')\n    });\n\n    if (polygon) {\n      var stackedOnSeries = data.getCalculationInfo('stackedOnSeries');\n      var stackedOnSmooth = 0;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: visualColor,\n        opacity: 0.7,\n        lineJoin: 'bevel'\n      }));\n\n      if (stackedOnSeries) {\n        stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n      }\n\n      polygon.setShape({\n        smooth: smooth,\n        stackedOnSmooth: stackedOnSmooth,\n        smoothMonotone: seriesModel.get('smoothMonotone'),\n        connectNulls: seriesModel.get('connectNulls')\n      });\n    }\n\n    this._data = data; // Save the coordinate system for transition animation when data changed\n\n    this._coordSys = coordSys;\n    this._stackedOnPoints = stackedOnPoints;\n    this._points = points;\n    this._step = step;\n    this._valueOrigin = valueOrigin;\n  },\n  dispose: function () {},\n  highlight: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (!symbol) {\n        // Create a temporary symbol if it is not exists\n        var pt = data.getItemLayout(dataIndex);\n\n        if (!pt) {\n          // Null data\n          return;\n        }\n\n        symbol = new SymbolClz(data, dataIndex);\n        symbol.position = pt;\n        symbol.setZ(seriesModel.get('zlevel'), seriesModel.get('z'));\n        symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n        symbol.__temp = true;\n        data.setItemGraphicEl(dataIndex, symbol); // Stop scale animation\n\n        symbol.stopSymbolAnimation(true);\n        this.group.add(symbol);\n      }\n\n      symbol.highlight();\n    } else {\n      // Highlight whole series\n      ChartView.prototype.highlight.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n  downplay: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (symbol) {\n        if (symbol.__temp) {\n          data.setItemGraphicEl(dataIndex, null);\n          this.group.remove(symbol);\n        } else {\n          symbol.downplay();\n        }\n      }\n    } else {\n      // FIXME\n      // can not downplay completely.\n      // Downplay whole series\n      ChartView.prototype.downplay.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolyline: function (points) {\n    var polyline = this._polyline; // Remove previous created polyline\n\n    if (polyline) {\n      this._lineGroup.remove(polyline);\n    }\n\n    polyline = new Polyline({\n      shape: {\n        points: points\n      },\n      silent: true,\n      z2: 10\n    });\n\n    this._lineGroup.add(polyline);\n\n    this._polyline = polyline;\n    return polyline;\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} stackedOnPoints\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolygon: function (points, stackedOnPoints) {\n    var polygon = this._polygon; // Remove previous created polygon\n\n    if (polygon) {\n      this._lineGroup.remove(polygon);\n    }\n\n    polygon = new Polygon({\n      shape: {\n        points: points,\n        stackedOnPoints: stackedOnPoints\n      },\n      silent: true\n    });\n\n    this._lineGroup.add(polygon);\n\n    this._polygon = polygon;\n    return polygon;\n  },\n\n  /**\n   * @private\n   */\n  // FIXME Two value axis\n  _updateAnimation: function (data, stackedOnPoints, coordSys, api, step, valueOrigin) {\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var seriesModel = data.hostModel;\n    var diff = lineAnimationDiff(this._data, data, this._stackedOnPoints, stackedOnPoints, this._coordSys, coordSys, this._valueOrigin, valueOrigin);\n    var current = diff.current;\n    var stackedOnCurrent = diff.stackedOnCurrent;\n    var next = diff.next;\n    var stackedOnNext = diff.stackedOnNext;\n\n    if (step) {\n      // TODO If stacked series is not step\n      current = turnPointsIntoStep(diff.current, coordSys, step);\n      stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n      next = turnPointsIntoStep(diff.next, coordSys, step);\n      stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n    } // `diff.current` is subset of `current` (which should be ensured by\n    // turnPointsIntoStep), so points in `__points` can be updated when\n    // points in `current` are update during animation.\n\n\n    polyline.shape.__points = diff.current;\n    polyline.shape.points = current;\n    graphic.updateProps(polyline, {\n      shape: {\n        points: next\n      }\n    }, seriesModel);\n\n    if (polygon) {\n      polygon.setShape({\n        points: current,\n        stackedOnPoints: stackedOnCurrent\n      });\n      graphic.updateProps(polygon, {\n        shape: {\n          points: next,\n          stackedOnPoints: stackedOnNext\n        }\n      }, seriesModel);\n    }\n\n    var updatedDataInfo = [];\n    var diffStatus = diff.status;\n\n    for (var i = 0; i < diffStatus.length; i++) {\n      var cmd = diffStatus[i].cmd;\n\n      if (cmd === '=') {\n        var el = data.getItemGraphicEl(diffStatus[i].idx1);\n\n        if (el) {\n          updatedDataInfo.push({\n            el: el,\n            ptIdx: i // Index of points\n\n          });\n        }\n      }\n    }\n\n    if (polyline.animators && polyline.animators.length) {\n      polyline.animators[0].during(function () {\n        for (var i = 0; i < updatedDataInfo.length; i++) {\n          var el = updatedDataInfo[i].el;\n          el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n        }\n      });\n    }\n  },\n  remove: function (ecModel) {\n    var group = this.group;\n    var oldData = this._data;\n\n    this._lineGroup.removeAll();\n\n    this._symbolDraw.remove(true); // Remove temporary created elements when highlighting\n\n\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    });\n    this._polyline = this._polygon = this._coordSys = this._points = this._stackedOnPoints = this._data = null;\n  }\n});\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar contrastColor = '#eee';\n\nvar axisCommon = function () {\n  return {\n    axisLine: {\n      lineStyle: {\n        color: contrastColor\n      }\n    },\n    axisTick: {\n      lineStyle: {\n        color: contrastColor\n      }\n    },\n    axisLabel: {\n      textStyle: {\n        color: contrastColor\n      }\n    },\n    splitLine: {\n      lineStyle: {\n        type: 'dashed',\n        color: '#aaa'\n      }\n    },\n    splitArea: {\n      areaStyle: {\n        color: contrastColor\n      }\n    }\n  };\n};\n\nvar colorPalette = ['#dd6b66', '#759aa0', '#e69d87', '#8dc1a9', '#ea7e53', '#eedd78', '#73a373', '#73b9bc', '#7289ab', '#91ca8c', '#f49f42'];\nvar theme = {\n  color: colorPalette,\n  backgroundColor: '#333',\n  tooltip: {\n    axisPointer: {\n      lineStyle: {\n        color: contrastColor\n      },\n      crossStyle: {\n        color: contrastColor\n      }\n    }\n  },\n  legend: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  textStyle: {\n    color: contrastColor\n  },\n  title: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  toolbox: {\n    iconStyle: {\n      normal: {\n        borderColor: contrastColor\n      }\n    }\n  },\n  dataZoom: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  visualMap: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  timeline: {\n    lineStyle: {\n      color: contrastColor\n    },\n    itemStyle: {\n      normal: {\n        color: colorPalette[1]\n      }\n    },\n    label: {\n      normal: {\n        textStyle: {\n          color: contrastColor\n        }\n      }\n    },\n    controlStyle: {\n      normal: {\n        color: contrastColor,\n        borderColor: contrastColor\n      }\n    }\n  },\n  timeAxis: axisCommon(),\n  logAxis: axisCommon(),\n  valueAxis: axisCommon(),\n  categoryAxis: axisCommon(),\n  line: {\n    symbol: 'circle'\n  },\n  graph: {\n    color: colorPalette\n  },\n  gauge: {\n    title: {\n      textStyle: {\n        color: contrastColor\n      }\n    }\n  },\n  candlestick: {\n    itemStyle: {\n      normal: {\n        color: '#FD1050',\n        color0: '#0CF49B',\n        borderColor: '#FD1050',\n        borderColor0: '#0CF49B'\n      }\n    }\n  }\n};\ntheme.categoryAxis.splitLine.show = false;\nvar _default = theme;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar AxisView = require(\"./AxisView\");\n\nvar cartesianAxisHelper = require(\"../../coord/cartesian/cartesianAxisHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitArea', 'splitLine']; // function getAlignWithLabel(model, axisModel) {\n//     var alignWithLabel = model.get('alignWithLabel');\n//     if (alignWithLabel === 'auto') {\n//         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n//     }\n//     return alignWithLabel;\n// }\n\nvar CartesianAxisView = AxisView.extend({\n  type: 'cartesianAxis',\n  axisPointerClass: 'CartesianAxisPointer',\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    this.group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    this.group.add(this._axisGroup);\n\n    if (!axisModel.get('show')) {\n      return;\n    }\n\n    var gridModel = axisModel.getCoordSysModel();\n    var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n    this._axisGroup.add(axisBuilder.getGroup());\n\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (axisModel.get(name + '.show')) {\n        this['_' + name](axisModel, gridModel);\n      }\n    }, this);\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n    CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n  },\n  remove: function () {\n    this._splitAreaColors = null;\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @private\n   */\n  _splitLine: function (axisModel, gridModel) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords({\n      tickModel: splitLineModel\n    });\n    var p1 = [];\n    var p2 = []; // Simple optimization\n    // Batching the lines if color are the same\n\n    var lineStyle = lineStyleModel.getLineStyle();\n\n    for (var i = 0; i < ticksCoords.length; i++) {\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i].coord);\n\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n\n      var colorIndex = lineCount++ % lineColors.length;\n      var tickValue = ticksCoords[i].tickValue;\n\n      this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n        anid: tickValue != null ? 'line_' + ticksCoords[i].tickValue : null,\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        style: zrUtil.defaults({\n          stroke: lineColors[colorIndex]\n        }, lineStyle),\n        silent: true\n      })));\n    }\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @private\n   */\n  _splitArea: function (axisModel, gridModel) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitAreaModel = axisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var ticksCoords = axis.getTicksCoords({\n      tickModel: splitAreaModel,\n      clamp: true\n    });\n\n    if (!ticksCoords.length) {\n      return;\n    } // For Making appropriate splitArea animation, the color and anid\n    // should be corresponding to previous one if possible.\n\n\n    var areaColorsLen = areaColors.length;\n    var lastSplitAreaColors = this._splitAreaColors;\n    var newSplitAreaColors = zrUtil.createHashMap();\n    var colorIndex = 0;\n\n    if (lastSplitAreaColors) {\n      for (var i = 0; i < ticksCoords.length; i++) {\n        var cIndex = lastSplitAreaColors.get(ticksCoords[i].tickValue);\n\n        if (cIndex != null) {\n          colorIndex = (cIndex + (areaColorsLen - 1) * i) % areaColorsLen;\n          break;\n        }\n      }\n    }\n\n    var prev = axis.toGlobalCoord(ticksCoords[0].coord);\n    var areaStyle = areaStyleModel.getAreaStyle();\n    areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n\n    for (var i = 1; i < ticksCoords.length; i++) {\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i].coord);\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (axis.isHorizontal()) {\n        x = prev;\n        y = gridRect.y;\n        width = tickCoord - x;\n        height = gridRect.height;\n        prev = x + width;\n      } else {\n        x = gridRect.x;\n        y = prev;\n        width = gridRect.width;\n        height = tickCoord - y;\n        prev = y + height;\n      }\n\n      var tickValue = ticksCoords[i - 1].tickValue;\n      tickValue != null && newSplitAreaColors.set(tickValue, colorIndex);\n\n      this._axisGroup.add(new graphic.Rect({\n        anid: tickValue != null ? 'area_' + tickValue : null,\n        shape: {\n          x: x,\n          y: y,\n          width: width,\n          height: height\n        },\n        style: zrUtil.defaults({\n          fill: areaColors[colorIndex]\n        }, areaStyle),\n        silent: true\n      }));\n\n      colorIndex = (colorIndex + 1) % areaColorsLen;\n    }\n\n    this._splitAreaColors = newSplitAreaColors;\n  }\n});\nCartesianAxisView.extend({\n  type: 'xAxis'\n});\nCartesianAxisView.extend({\n  type: 'yAxis'\n});","var BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar bbox = require(\"zrender/lib/core/bbox\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar polygonContain = require(\"zrender/lib/contain/polygon\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/coord/geo/Region\n */\n\n/**\n * @param {string} name\n * @param {Array} geometries\n * @param {Array.<number>} cp\n */\nfunction Region(name, geometries, cp) {\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  this.name = name;\n  /**\n   * @type {Array.<Array>}\n   * @readOnly\n   */\n\n  this.geometries = geometries;\n\n  if (!cp) {\n    var rect = this.getBoundingRect();\n    cp = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  } else {\n    cp = [cp[0], cp[1]];\n  }\n  /**\n   * @type {Array.<number>}\n   */\n\n\n  this.center = cp;\n}\n\nRegion.prototype = {\n  constructor: Region,\n  properties: null,\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    var rect = this._rect;\n\n    if (rect) {\n      return rect;\n    }\n\n    var MAX_NUMBER = Number.MAX_VALUE;\n    var min = [MAX_NUMBER, MAX_NUMBER];\n    var max = [-MAX_NUMBER, -MAX_NUMBER];\n    var min2 = [];\n    var max2 = [];\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      } // Doesn't consider hole\n\n\n      var exterior = geometries[i].exterior;\n      bbox.fromPoints(exterior, min2, max2);\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return this._rect = new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * @param {<Array.<number>} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var rect = this.getBoundingRect();\n    var geometries = this.geometries;\n\n    if (!rect.contain(coord[0], coord[1])) {\n      return false;\n    }\n\n    loopGeo: for (var i = 0, len = geometries.length; i < len; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      if (polygonContain.contain(exterior, coord[0], coord[1])) {\n        // Not in the region if point is in the hole.\n        for (var k = 0; k < (interiors ? interiors.length : 0); k++) {\n          if (polygonContain.contain(interiors[k])) {\n            continue loopGeo;\n          }\n        }\n\n        return true;\n      }\n    }\n\n    return false;\n  },\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var aspect = rect.width / rect.height;\n\n    if (!width) {\n      width = aspect * height;\n    } else if (!height) {\n      height = width / aspect;\n    }\n\n    var target = new BoundingRect(x, y, width, height);\n    var transform = rect.calculateTransform(target);\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      for (var p = 0; p < exterior.length; p++) {\n        vec2.applyTransform(exterior[p], exterior[p], transform);\n      }\n\n      for (var h = 0; h < (interiors ? interiors.length : 0); h++) {\n        for (var p = 0; p < interiors[h].length; p++) {\n          vec2.applyTransform(interiors[h][p], interiors[h][p], transform);\n        }\n      }\n    }\n\n    rect = this._rect;\n    rect.copy(target); // Update center\n\n    this.center = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n};\nvar _default = Region;\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar assert = _util.assert;\nvar isArray = _util.isArray;\n\nvar _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {Object} define\n * @return See the return of `createTask`.\n */\nfunction createTask(define) {\n  return new Task(define);\n}\n/**\n * @constructor\n * @param {Object} define\n * @param {Function} define.reset Custom reset\n * @param {Function} [define.plan] Returns 'reset' indicate reset immediately.\n * @param {Function} [define.count] count is used to determin data task.\n * @param {Function} [define.onDirty] count is used to determin data task.\n */\n\n\nfunction Task(define) {\n  define = define || {};\n  this._reset = define.reset;\n  this._plan = define.plan;\n  this._count = define.count;\n  this._onDirty = define.onDirty;\n  this._dirty = true; // Context must be specified implicitly, to\n  // avoid miss update context when model changed.\n\n  this.context;\n}\n\nvar taskProto = Task.prototype;\n/**\n * @param {Object} performArgs\n * @param {number} [performArgs.step] Specified step.\n * @param {number} [performArgs.skip] Skip customer perform call.\n * @param {number} [performArgs.modBy] Sampling window size.\n * @param {number} [performArgs.modDataCount] Sampling count.\n */\n\ntaskProto.perform = function (performArgs) {\n  var upTask = this._upstream;\n  var skip = performArgs && performArgs.skip; // TODO some refactor.\n  // Pull data. Must pull data each time, because context.data\n  // may be updated by Series.setData.\n\n  if (this._dirty && upTask) {\n    var context = this.context;\n    context.data = context.outputData = upTask.context.outputData;\n  }\n\n  if (this.__pipeline) {\n    this.__pipeline.currentTask = this;\n  }\n\n  var planResult;\n\n  if (this._plan && !skip) {\n    planResult = this._plan(this.context);\n  } // Support sharding by mod, which changes the render sequence and makes the rendered graphic\n  // elements uniformed distributed when progress, especially when moving or zooming.\n\n\n  var lastModBy = normalizeModBy(this._modBy);\n  var lastModDataCount = this._modDataCount || 0;\n  var modBy = normalizeModBy(performArgs && performArgs.modBy);\n  var modDataCount = performArgs && performArgs.modDataCount || 0;\n\n  if (lastModBy !== modBy || lastModDataCount !== modDataCount) {\n    planResult = 'reset';\n  }\n\n  function normalizeModBy(val) {\n    !(val >= 1) && (val = 1); // jshint ignore:line\n\n    return val;\n  }\n\n  var forceFirstProgress;\n\n  if (this._dirty || planResult === 'reset') {\n    this._dirty = false;\n    forceFirstProgress = reset(this, skip);\n  }\n\n  this._modBy = modBy;\n  this._modDataCount = modDataCount;\n  var step = performArgs && performArgs.step;\n\n  if (upTask) {\n    this._dueEnd = upTask._outputDueEnd;\n  } // DataTask or overallTask\n  else {\n      this._dueEnd = this._count ? this._count(this.context) : Infinity;\n    } // Note: Stubs, that its host overall task let it has progress, has progress.\n  // If no progress, pass index from upstream to downstream each time plan called.\n\n\n  if (this._progress) {\n    var start = this._dueIndex;\n    var end = Math.min(step != null ? this._dueIndex + step : Infinity, this._dueEnd);\n\n    if (!skip && (forceFirstProgress || start < end)) {\n      var progress = this._progress;\n\n      if (isArray(progress)) {\n        for (var i = 0; i < progress.length; i++) {\n          doProgress(this, progress[i], start, end, modBy, modDataCount);\n        }\n      } else {\n        doProgress(this, progress, start, end, modBy, modDataCount);\n      }\n    }\n\n    this._dueIndex = end; // If no `outputDueEnd`, assume that output data and\n    // input data is the same, so use `dueIndex` as `outputDueEnd`.\n\n    var outputDueEnd = this._settedOutputEnd != null ? this._settedOutputEnd : end;\n    this._outputDueEnd = outputDueEnd;\n  } else {\n    // (1) Some overall task has no progress.\n    // (2) Stubs, that its host overall task do not let it has progress, has no progress.\n    // This should always be performed so it can be passed to downstream.\n    this._dueIndex = this._outputDueEnd = this._settedOutputEnd != null ? this._settedOutputEnd : this._dueEnd;\n  }\n\n  return this.unfinished();\n};\n\nvar iterator = function () {\n  var end;\n  var current;\n  var modBy;\n  var modDataCount;\n  var winCount;\n  var it = {\n    reset: function (s, e, sStep, sCount) {\n      current = s;\n      end = e;\n      modBy = sStep;\n      modDataCount = sCount;\n      winCount = Math.ceil(modDataCount / modBy);\n      it.next = modBy > 1 && modDataCount > 0 ? modNext : sequentialNext;\n    }\n  };\n  return it;\n\n  function sequentialNext() {\n    return current < end ? current++ : null;\n  }\n\n  function modNext() {\n    var dataIndex = current % winCount * modBy + Math.ceil(current / winCount);\n    var result = current >= end ? null : dataIndex < modDataCount ? dataIndex // If modDataCount is smaller than data.count() (consider `appendData` case),\n    // Use normal linear rendering mode.\n    : current;\n    current++;\n    return result;\n  }\n}();\n\ntaskProto.dirty = function () {\n  this._dirty = true;\n  this._onDirty && this._onDirty(this.context);\n};\n\nfunction doProgress(taskIns, progress, start, end, modBy, modDataCount) {\n  iterator.reset(start, end, modBy, modDataCount);\n  taskIns._callingProgress = progress;\n\n  taskIns._callingProgress({\n    start: start,\n    end: end,\n    count: end - start,\n    next: iterator.next\n  }, taskIns.context);\n}\n\nfunction reset(taskIns, skip) {\n  taskIns._dueIndex = taskIns._outputDueEnd = taskIns._dueEnd = 0;\n  taskIns._settedOutputEnd = null;\n  var progress;\n  var forceFirstProgress;\n\n  if (!skip && taskIns._reset) {\n    progress = taskIns._reset(taskIns.context);\n\n    if (progress && progress.progress) {\n      forceFirstProgress = progress.forceFirstProgress;\n      progress = progress.progress;\n    } // To simplify no progress checking, array must has item.\n\n\n    if (isArray(progress) && !progress.length) {\n      progress = null;\n    }\n  }\n\n  taskIns._progress = progress;\n  taskIns._modBy = taskIns._modDataCount = null;\n  var downstream = taskIns._downstream;\n  downstream && downstream.dirty();\n  return forceFirstProgress;\n}\n/**\n * @return {boolean}\n */\n\n\ntaskProto.unfinished = function () {\n  return this._progress && this._dueIndex < this._dueEnd;\n};\n/**\n * @param {Object} downTask The downstream task.\n * @return {Object} The downstream task.\n */\n\n\ntaskProto.pipe = function (downTask) {\n  // If already downstream, do not dirty downTask.\n  if (this._downstream !== downTask || this._dirty) {\n    this._downstream = downTask;\n    downTask._upstream = this;\n    downTask.dirty();\n  }\n};\n\ntaskProto.dispose = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  this._upstream && (this._upstream._downstream = null);\n  this._downstream && (this._downstream._upstream = null);\n  this._dirty = false;\n  this._disposed = true;\n};\n\ntaskProto.getUpstream = function () {\n  return this._upstream;\n};\n\ntaskProto.getDownstream = function () {\n  return this._downstream;\n};\n\ntaskProto.setOutputEnd = function (end) {\n  // This only happend in dataTask, dataZoom, map, currently.\n  // where dataZoom do not set end each time, but only set\n  // when reset. So we should record the setted end, in case\n  // that the stub of dataZoom perform again and earse the\n  // setted end by upstream.\n  this._outputDueEnd = this._settedOutputEnd = end;\n}; ///////////////////////////////////////////////////////////\n// For stream debug (Should be commented out after used!)\n// Usage: printTask(this, 'begin');\n// Usage: printTask(this, null, {someExtraProp});\n// function printTask(task, prefix, extra) {\n//     window.ecTaskUID == null && (window.ecTaskUID = 0);\n//     task.uidDebug == null && (task.uidDebug = `task_${window.ecTaskUID++}`);\n//     task.agent && task.agent.uidDebug == null && (task.agent.uidDebug = `task_${window.ecTaskUID++}`);\n//     var props = [];\n//     if (task.__pipeline) {\n//         var val = `${task.__idxInPipeline}/${task.__pipeline.tail.__idxInPipeline} ${task.agent ? '(stub)' : ''}`;\n//         props.push({text: 'idx', value: val});\n//     } else {\n//         var stubCount = 0;\n//         task.agentStubMap.each(() => stubCount++);\n//         props.push({text: 'idx', value: `overall (stubs: ${stubCount})`});\n//     }\n//     props.push({text: 'uid', value: task.uidDebug});\n//     if (task.__pipeline) {\n//         props.push({text: 'pid', value: task.__pipeline.id});\n//         task.agent && props.push(\n//             {text: 'stubFor', value: task.agent.uidDebug}\n//         );\n//     }\n//     props.push(\n//         {text: 'dirty', value: task._dirty},\n//         {text: 'dueIndex', value: task._dueIndex},\n//         {text: 'dueEnd', value: task._dueEnd},\n//         {text: 'outputDueEnd', value: task._outputDueEnd}\n//     );\n//     if (extra) {\n//         Object.keys(extra).forEach(key => {\n//             props.push({text: key, value: extra[key]});\n//         });\n//     }\n//     var args = ['color: blue'];\n//     var msg = `%c[${prefix || 'T'}] %c` + props.map(item => (\n//         args.push('color: black', 'color: red'),\n//         `${item.text}: %c${item.value}`\n//     )).join('%c, ');\n//     console.log.apply(console, [msg].concat(args));\n//     // console.log(this);\n// }\n\n\nexports.createTask = createTask;","var graphic = require(\"../../util/graphic\");\n\nvar SymbolClz = require(\"./Symbol\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar isObject = _util.isObject;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n/**\n * @constructor\n * @alias module:echarts/chart/helper/SymbolDraw\n * @param {module:zrender/graphic/Group} [symbolCtor]\n */\nfunction SymbolDraw(symbolCtor) {\n  this.group = new graphic.Group();\n  this._symbolCtor = symbolCtor || SymbolClz;\n}\n\nvar symbolDrawProto = SymbolDraw.prototype;\n\nfunction symbolNeedsDraw(data, point, idx, opt) {\n  return point && !isNaN(point[0]) && !isNaN(point[1]) && !(opt.isIgnore && opt.isIgnore(idx)) // We do not set clipShape on group, because it will cut part of\n  // the symbol element shape. We use the same clip shape here as\n  // the line clip.\n  && !(opt.clipShape && !opt.clipShape.contain(point[0], point[1])) && data.getItemVisual(idx, 'symbol') !== 'none';\n}\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n * @param {Object} [opt] Or isIgnore\n * @param {Function} [opt.isIgnore]\n * @param {Object} [opt.clipShape]\n */\n\n\nsymbolDrawProto.updateData = function (data, opt) {\n  opt = normalizeUpdateOpt(opt);\n  var group = this.group;\n  var seriesModel = data.hostModel;\n  var oldData = this._data;\n  var SymbolCtor = this._symbolCtor;\n  var seriesScope = makeSeriesScope(data); // There is no oldLineData only when first rendering or switching from\n  // stream mode to normal mode, where previous elements should be removed.\n\n  if (!oldData) {\n    group.removeAll();\n  }\n\n  data.diff(oldData).add(function (newIdx) {\n    var point = data.getItemLayout(newIdx);\n\n    if (symbolNeedsDraw(data, point, newIdx, opt)) {\n      var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n      symbolEl.attr('position', point);\n      data.setItemGraphicEl(newIdx, symbolEl);\n      group.add(symbolEl);\n    }\n  }).update(function (newIdx, oldIdx) {\n    var symbolEl = oldData.getItemGraphicEl(oldIdx);\n    var point = data.getItemLayout(newIdx);\n\n    if (!symbolNeedsDraw(data, point, newIdx, opt)) {\n      group.remove(symbolEl);\n      return;\n    }\n\n    if (!symbolEl) {\n      symbolEl = new SymbolCtor(data, newIdx);\n      symbolEl.attr('position', point);\n    } else {\n      symbolEl.updateData(data, newIdx, seriesScope);\n      graphic.updateProps(symbolEl, {\n        position: point\n      }, seriesModel);\n    } // Add back\n\n\n    group.add(symbolEl);\n    data.setItemGraphicEl(newIdx, symbolEl);\n  }).remove(function (oldIdx) {\n    var el = oldData.getItemGraphicEl(oldIdx);\n    el && el.fadeOut(function () {\n      group.remove(el);\n    });\n  }).execute();\n  this._data = data;\n};\n\nsymbolDrawProto.isPersistent = function () {\n  return true;\n};\n\nsymbolDrawProto.updateLayout = function () {\n  var data = this._data;\n\n  if (data) {\n    // Not use animation\n    data.eachItemGraphicEl(function (el, idx) {\n      var point = data.getItemLayout(idx);\n      el.attr('position', point);\n    });\n  }\n};\n\nsymbolDrawProto.incrementalPrepareUpdate = function (data) {\n  this._seriesScope = makeSeriesScope(data);\n  this._data = null;\n  this.group.removeAll();\n};\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n * @param {Object} [opt] Or isIgnore\n * @param {Function} [opt.isIgnore]\n * @param {Object} [opt.clipShape]\n */\n\n\nsymbolDrawProto.incrementalUpdate = function (taskParams, data, opt) {\n  opt = normalizeUpdateOpt(opt);\n\n  function updateIncrementalAndHover(el) {\n    if (!el.isGroup) {\n      el.incremental = el.useHoverLayer = true;\n    }\n  }\n\n  for (var idx = taskParams.start; idx < taskParams.end; idx++) {\n    var point = data.getItemLayout(idx);\n\n    if (symbolNeedsDraw(data, point, idx, opt)) {\n      var el = new this._symbolCtor(data, idx, this._seriesScope);\n      el.traverse(updateIncrementalAndHover);\n      el.attr('position', point);\n      this.group.add(el);\n      data.setItemGraphicEl(idx, el);\n    }\n  }\n};\n\nfunction normalizeUpdateOpt(opt) {\n  if (opt != null && !isObject(opt)) {\n    opt = {\n      isIgnore: opt\n    };\n  }\n\n  return opt || {};\n}\n\nsymbolDrawProto.remove = function (enableAnimation) {\n  var group = this.group;\n  var data = this._data; // Incremental model do not have this._data.\n\n  if (data && enableAnimation) {\n    data.eachItemGraphicEl(function (el) {\n      el.fadeOut(function () {\n        group.remove(el);\n      });\n    });\n  } else {\n    group.removeAll();\n  }\n};\n\nfunction makeSeriesScope(data) {\n  var seriesModel = data.hostModel;\n  return {\n    itemStyle: seriesModel.getModel('itemStyle').getItemStyle(['color']),\n    hoverItemStyle: seriesModel.getModel('emphasis.itemStyle').getItemStyle(),\n    symbolRotate: seriesModel.get('symbolRotate'),\n    symbolOffset: seriesModel.get('symbolOffset'),\n    hoverAnimation: seriesModel.get('hoverAnimation'),\n    labelModel: seriesModel.getModel('label'),\n    hoverLabelModel: seriesModel.getModel('emphasis.label'),\n    cursorStyle: seriesModel.get('cursor')\n  };\n}\n\nvar _default = SymbolDraw;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _number = require(\"./number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar formatUtil = require(\"./format\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Layout helpers for each component positioning\nvar each = zrUtil.each;\n/**\n * @public\n */\n\nvar LOCATION_PARAMS = ['left', 'right', 'top', 'bottom', 'width', 'height'];\n/**\n * @public\n */\n\nvar HV_NAMES = [['width', 'left', 'right'], ['height', 'top', 'bottom']];\n\nfunction boxLayout(orient, group, gap, maxWidth, maxHeight) {\n  var x = 0;\n  var y = 0;\n\n  if (maxWidth == null) {\n    maxWidth = Infinity;\n  }\n\n  if (maxHeight == null) {\n    maxHeight = Infinity;\n  }\n\n  var currentLineMaxSize = 0;\n  group.eachChild(function (child, idx) {\n    var position = child.position;\n    var rect = child.getBoundingRect();\n    var nextChild = group.childAt(idx + 1);\n    var nextChildRect = nextChild && nextChild.getBoundingRect();\n    var nextX;\n    var nextY;\n\n    if (orient === 'horizontal') {\n      var moveX = rect.width + (nextChildRect ? -nextChildRect.x + rect.x : 0);\n      nextX = x + moveX; // Wrap when width exceeds maxWidth or meet a `newline` group\n      // FIXME compare before adding gap?\n\n      if (nextX > maxWidth || child.newline) {\n        x = 0;\n        nextX = moveX;\n        y += currentLineMaxSize + gap;\n        currentLineMaxSize = rect.height;\n      } else {\n        // FIXME: consider rect.y is not `0`?\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n      }\n    } else {\n      var moveY = rect.height + (nextChildRect ? -nextChildRect.y + rect.y : 0);\n      nextY = y + moveY; // Wrap when width exceeds maxHeight or meet a `newline` group\n\n      if (nextY > maxHeight || child.newline) {\n        x += currentLineMaxSize + gap;\n        y = 0;\n        nextY = moveY;\n        currentLineMaxSize = rect.width;\n      } else {\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n      }\n    }\n\n    if (child.newline) {\n      return;\n    }\n\n    position[0] = x;\n    position[1] = y;\n    orient === 'horizontal' ? x = nextX + gap : y = nextY + gap;\n  });\n}\n/**\n * VBox or HBox layouting\n * @param {string} orient\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\n\nvar box = boxLayout;\n/**\n * VBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar vbox = zrUtil.curry(boxLayout, 'vertical');\n/**\n * HBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar hbox = zrUtil.curry(boxLayout, 'horizontal');\n/**\n * If x or x2 is not specified or 'center' 'left' 'right',\n * the width would be as long as possible.\n * If y or y2 is not specified or 'middle' 'top' 'bottom',\n * the height would be as long as possible.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.x]\n * @param {number|string} [positionInfo.y]\n * @param {number|string} [positionInfo.x2]\n * @param {number|string} [positionInfo.y2]\n * @param {Object} containerRect {width, height}\n * @param {string|number} margin\n * @return {Object} {width, height}\n */\n\nfunction getAvailableSize(positionInfo, containerRect, margin) {\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var x = parsePercent(positionInfo.x, containerWidth);\n  var y = parsePercent(positionInfo.y, containerHeight);\n  var x2 = parsePercent(positionInfo.x2, containerWidth);\n  var y2 = parsePercent(positionInfo.y2, containerHeight);\n  (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n  (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n  (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n  (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  return {\n    width: Math.max(x2 - x - margin[1] - margin[3], 0),\n    height: Math.max(y2 - y - margin[0] - margin[2], 0)\n  };\n}\n/**\n * Parse position info.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width]\n * @param {number|string} [positionInfo.height]\n * @param {number|string} [positionInfo.aspect] Aspect is width / height\n * @param {Object} containerRect\n * @param {string|number} [margin]\n *\n * @return {module:zrender/core/BoundingRect}\n */\n\n\nfunction getLayoutRect(positionInfo, containerRect, margin) {\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var left = parsePercent(positionInfo.left, containerWidth);\n  var top = parsePercent(positionInfo.top, containerHeight);\n  var right = parsePercent(positionInfo.right, containerWidth);\n  var bottom = parsePercent(positionInfo.bottom, containerHeight);\n  var width = parsePercent(positionInfo.width, containerWidth);\n  var height = parsePercent(positionInfo.height, containerHeight);\n  var verticalMargin = margin[2] + margin[0];\n  var horizontalMargin = margin[1] + margin[3];\n  var aspect = positionInfo.aspect; // If width is not specified, calculate width from left and right\n\n  if (isNaN(width)) {\n    width = containerWidth - right - horizontalMargin - left;\n  }\n\n  if (isNaN(height)) {\n    height = containerHeight - bottom - verticalMargin - top;\n  }\n\n  if (aspect != null) {\n    // If width and height are not given\n    // 1. Graph should not exceeds the container\n    // 2. Aspect must be keeped\n    // 3. Graph should take the space as more as possible\n    // FIXME\n    // Margin is not considered, because there is no case that both\n    // using margin and aspect so far.\n    if (isNaN(width) && isNaN(height)) {\n      if (aspect > containerWidth / containerHeight) {\n        width = containerWidth * 0.8;\n      } else {\n        height = containerHeight * 0.8;\n      }\n    } // Calculate width or height with given aspect\n\n\n    if (isNaN(width)) {\n      width = aspect * height;\n    }\n\n    if (isNaN(height)) {\n      height = width / aspect;\n    }\n  } // If left is not specified, calculate left from right and width\n\n\n  if (isNaN(left)) {\n    left = containerWidth - right - width - horizontalMargin;\n  }\n\n  if (isNaN(top)) {\n    top = containerHeight - bottom - height - verticalMargin;\n  } // Align left and top\n\n\n  switch (positionInfo.left || positionInfo.right) {\n    case 'center':\n      left = containerWidth / 2 - width / 2 - margin[3];\n      break;\n\n    case 'right':\n      left = containerWidth - width - horizontalMargin;\n      break;\n  }\n\n  switch (positionInfo.top || positionInfo.bottom) {\n    case 'middle':\n    case 'center':\n      top = containerHeight / 2 - height / 2 - margin[0];\n      break;\n\n    case 'bottom':\n      top = containerHeight - height - verticalMargin;\n      break;\n  } // If something is wrong and left, top, width, height are calculated as NaN\n\n\n  left = left || 0;\n  top = top || 0;\n\n  if (isNaN(width)) {\n    // Width may be NaN if only one value is given except width\n    width = containerWidth - horizontalMargin - left - (right || 0);\n  }\n\n  if (isNaN(height)) {\n    // Height may be NaN if only one value is given except height\n    height = containerHeight - verticalMargin - top - (bottom || 0);\n  }\n\n  var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n  rect.margin = margin;\n  return rect;\n}\n/**\n * Position a zr element in viewport\n *  Group position is specified by either\n *  {left, top}, {right, bottom}\n *  If all properties exists, right and bottom will be igonred.\n *\n * Logic:\n *     1. Scale (against origin point in parent coord)\n *     2. Rotate (against origin point in parent coord)\n *     3. Traslate (with el.position by this method)\n * So this method only fixes the last step 'Traslate', which does not affect\n * scaling and rotating.\n *\n * If be called repeatly with the same input el, the same result will be gotten.\n *\n * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width] Only for opt.boundingModel: 'raw'\n * @param {number|string} [positionInfo.height] Only for opt.boundingModel: 'raw'\n * @param {Object} containerRect\n * @param {string|number} margin\n * @param {Object} [opt]\n * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n * @param {Array.<number>} [opt.boundingMode='all']\n *        Specify how to calculate boundingRect when locating.\n *        'all': Position the boundingRect that is transformed and uioned\n *               both itself and its descendants.\n *               This mode simplies confine the elements in the bounding\n *               of their container (e.g., using 'right: 0').\n *        'raw': Position the boundingRect that is not transformed and only itself.\n *               This mode is useful when you want a element can overflow its\n *               container. (Consider a rotated circle needs to be located in a corner.)\n *               In this mode positionInfo.width/height can only be number.\n */\n\n\nfunction positionElement(el, positionInfo, containerRect, margin, opt) {\n  var h = !opt || !opt.hv || opt.hv[0];\n  var v = !opt || !opt.hv || opt.hv[1];\n  var boundingMode = opt && opt.boundingMode || 'all';\n\n  if (!h && !v) {\n    return;\n  }\n\n  var rect;\n\n  if (boundingMode === 'raw') {\n    rect = el.type === 'group' ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0) : el.getBoundingRect();\n  } else {\n    rect = el.getBoundingRect();\n\n    if (el.needLocalTransform()) {\n      var transform = el.getLocalTransform(); // Notice: raw rect may be inner object of el,\n      // which should not be modified.\n\n      rect = rect.clone();\n      rect.applyTransform(transform);\n    }\n  } // The real width and height can not be specified but calculated by the given el.\n\n\n  positionInfo = getLayoutRect(zrUtil.defaults({\n    width: rect.width,\n    height: rect.height\n  }, positionInfo), containerRect, margin); // Because 'tranlate' is the last step in transform\n  // (see zrender/core/Transformable#getLocalTransform),\n  // we can just only modify el.position to get final result.\n\n  var elPos = el.position;\n  var dx = h ? positionInfo.x - rect.x : 0;\n  var dy = v ? positionInfo.y - rect.y : 0;\n  el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n}\n/**\n * @param {Object} option Contains some of the properties in HV_NAMES.\n * @param {number} hvIdx 0: horizontal; 1: vertical.\n */\n\n\nfunction sizeCalculable(option, hvIdx) {\n  return option[HV_NAMES[hvIdx][0]] != null || option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null;\n}\n/**\n * Consider Case:\n * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n * through setOption or media query, using normal zrUtil.merge will cause\n * {right: 0} does not take effect.\n *\n * @example\n * ComponentModel.extend({\n *     init: function () {\n *         ...\n *         var inputPositionParams = layout.getLayoutParams(option);\n *         this.mergeOption(inputPositionParams);\n *     },\n *     mergeOption: function (newOption) {\n *         newOption && zrUtil.merge(thisOption, newOption, true);\n *         layout.mergeLayoutParam(thisOption, newOption);\n *     }\n * });\n *\n * @param {Object} targetOption\n * @param {Object} newOption\n * @param {Object|string} [opt]\n * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Used for the components\n *  that width (or height) should not be calculated by left and right (or top and bottom).\n */\n\n\nfunction mergeLayoutParam(targetOption, newOption, opt) {\n  !zrUtil.isObject(opt) && (opt = {});\n  var ignoreSize = opt.ignoreSize;\n  !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n  var hResult = merge(HV_NAMES[0], 0);\n  var vResult = merge(HV_NAMES[1], 1);\n  copy(HV_NAMES[0], targetOption, hResult);\n  copy(HV_NAMES[1], targetOption, vResult);\n\n  function merge(names, hvIdx) {\n    var newParams = {};\n    var newValueCount = 0;\n    var merged = {};\n    var mergedValueCount = 0;\n    var enoughParamNumber = 2;\n    each(names, function (name) {\n      merged[name] = targetOption[name];\n    });\n    each(names, function (name) {\n      // Consider case: newOption.width is null, which is\n      // set by user for removing width setting.\n      hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n      hasValue(newParams, name) && newValueCount++;\n      hasValue(merged, name) && mergedValueCount++;\n    });\n\n    if (ignoreSize[hvIdx]) {\n      // Only one of left/right is premitted to exist.\n      if (hasValue(newOption, names[1])) {\n        merged[names[2]] = null;\n      } else if (hasValue(newOption, names[2])) {\n        merged[names[1]] = null;\n      }\n\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // or targetOption: {right: ...} and newOption: {width: ...},\n    // There is no conflict when merged only has params count\n    // little than enoughParamNumber.\n\n\n    if (mergedValueCount === enoughParamNumber || !newValueCount) {\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // Than we can make sure user only want those two, and ignore\n    // all origin params in targetOption.\n    else if (newValueCount >= enoughParamNumber) {\n        return newParams;\n      } else {\n        // Chose another param from targetOption by priority.\n        for (var i = 0; i < names.length; i++) {\n          var name = names[i];\n\n          if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n            newParams[name] = targetOption[name];\n            break;\n          }\n        }\n\n        return newParams;\n      }\n  }\n\n  function hasProp(obj, name) {\n    return obj.hasOwnProperty(name);\n  }\n\n  function hasValue(obj, name) {\n    return obj[name] != null && obj[name] !== 'auto';\n  }\n\n  function copy(names, target, source) {\n    each(names, function (name) {\n      target[name] = source[name];\n    });\n  }\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction getLayoutParams(source) {\n  return copyLayoutParams({}, source);\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction copyLayoutParams(target, source) {\n  source && target && each(LOCATION_PARAMS, function (name) {\n    source.hasOwnProperty(name) && (target[name] = source[name]);\n  });\n  return target;\n}\n\nexports.LOCATION_PARAMS = LOCATION_PARAMS;\nexports.HV_NAMES = HV_NAMES;\nexports.box = box;\nexports.vbox = vbox;\nexports.hbox = hbox;\nexports.getAvailableSize = getAvailableSize;\nexports.getLayoutRect = getLayoutRect;\nexports.positionElement = positionElement;\nexports.sizeCalculable = sizeCalculable;\nexports.mergeLayoutParam = mergeLayoutParam;\nexports.getLayoutParams = getLayoutParams;\nexports.copyLayoutParams = copyLayoutParams;","var _util = require(\"zrender/lib/core/util\");\n\nvar retrieve = _util.retrieve;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar each = _util.each;\n\nvar formatUtil = require(\"../../util/format\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _number = require(\"../../util/number\");\n\nvar isRadianAroundZero = _number.isRadianAroundZero;\nvar remRadian = _number.remRadian;\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar matrixUtil = require(\"zrender/lib/core/matrix\");\n\nvar _vector = require(\"zrender/lib/core/vector\");\n\nvar v2ApplyTransform = _vector.applyTransform;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PI = Math.PI;\n\nfunction makeAxisEventDataBase(axisModel) {\n  var eventData = {\n    componentType: axisModel.mainType\n  };\n  eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n  return eventData;\n}\n/**\n * A final axis is translated and rotated from a \"standard axis\".\n * So opt.position and opt.rotation is required.\n *\n * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n * for example: (0, 0) ------------> (0, 50)\n *\n * nameDirection or tickDirection or labelDirection is 1 means tick\n * or label is below the standard axis, whereas is -1 means above\n * the standard axis. labelOffset means offset between label and axis,\n * which is useful when 'onZero', where axisLabel is in the grid and\n * label in outside grid.\n *\n * Tips: like always,\n * positive rotation represents anticlockwise, and negative rotation\n * represents clockwise.\n * The direction of position coordinate is the same as the direction\n * of screen coordinate.\n *\n * Do not need to consider axis 'inverse', which is auto processed by\n * axis extent.\n *\n * @param {module:zrender/container/Group} group\n * @param {Object} axisModel\n * @param {Object} opt Standard axis parameters.\n * @param {Array.<number>} opt.position [x, y]\n * @param {number} opt.rotation by radian\n * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle' or 'center'.\n * @param {number} [opt.tickDirection=1] 1 or -1\n * @param {number} [opt.labelDirection=1] 1 or -1\n * @param {number} [opt.labelOffset=0] Usefull when onZero.\n * @param {string} [opt.axisLabelShow] default get from axisModel.\n * @param {string} [opt.axisName] default get from axisModel.\n * @param {number} [opt.axisNameAvailableWidth]\n * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n * @param {number} [opt.strokeContainThreshold] Default label interval when label\n * @param {number} [opt.nameTruncateMaxWidth]\n */\n\n\nvar AxisBuilder = function (axisModel, opt) {\n  /**\n   * @readOnly\n   */\n  this.opt = opt;\n  /**\n   * @readOnly\n   */\n\n  this.axisModel = axisModel; // Default value\n\n  defaults(opt, {\n    labelOffset: 0,\n    nameDirection: 1,\n    tickDirection: 1,\n    labelDirection: 1,\n    silent: true\n  });\n  /**\n   * @readOnly\n   */\n\n  this.group = new graphic.Group(); // FIXME Not use a seperate text group?\n\n  var dumbGroup = new graphic.Group({\n    position: opt.position.slice(),\n    rotation: opt.rotation\n  }); // this.group.add(dumbGroup);\n  // this._dumbGroup = dumbGroup;\n\n  dumbGroup.updateTransform();\n  this._transform = dumbGroup.transform;\n  this._dumbGroup = dumbGroup;\n};\n\nAxisBuilder.prototype = {\n  constructor: AxisBuilder,\n  hasBuilder: function (name) {\n    return !!builders[name];\n  },\n  add: function (name) {\n    builders[name].call(this);\n  },\n  getGroup: function () {\n    return this.group;\n  }\n};\nvar builders = {\n  /**\n   * @private\n   */\n  axisLine: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n\n    if (!axisModel.get('axisLine.show')) {\n      return;\n    }\n\n    var extent = this.axisModel.axis.getExtent();\n    var matrix = this._transform;\n    var pt1 = [extent[0], 0];\n    var pt2 = [extent[1], 0];\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    }\n\n    var lineStyle = extend({\n      lineCap: 'round'\n    }, axisModel.getModel('axisLine.lineStyle').getLineStyle());\n    this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'line',\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: lineStyle,\n      strokeContainThreshold: opt.strokeContainThreshold || 5,\n      silent: true,\n      z2: 1\n    })));\n    var arrows = axisModel.get('axisLine.symbol');\n    var arrowSize = axisModel.get('axisLine.symbolSize');\n    var arrowOffset = axisModel.get('axisLine.symbolOffset') || 0;\n\n    if (typeof arrowOffset === 'number') {\n      arrowOffset = [arrowOffset, arrowOffset];\n    }\n\n    if (arrows != null) {\n      if (typeof arrows === 'string') {\n        // Use the same arrow for start and end point\n        arrows = [arrows, arrows];\n      }\n\n      if (typeof arrowSize === 'string' || typeof arrowSize === 'number') {\n        // Use the same size for width and height\n        arrowSize = [arrowSize, arrowSize];\n      }\n\n      var symbolWidth = arrowSize[0];\n      var symbolHeight = arrowSize[1];\n      each([{\n        rotate: opt.rotation + Math.PI / 2,\n        offset: arrowOffset[0],\n        r: 0\n      }, {\n        rotate: opt.rotation - Math.PI / 2,\n        offset: arrowOffset[1],\n        r: Math.sqrt((pt1[0] - pt2[0]) * (pt1[0] - pt2[0]) + (pt1[1] - pt2[1]) * (pt1[1] - pt2[1]))\n      }], function (point, index) {\n        if (arrows[index] !== 'none' && arrows[index] != null) {\n          var symbol = createSymbol(arrows[index], -symbolWidth / 2, -symbolHeight / 2, symbolWidth, symbolHeight, lineStyle.stroke, true); // Calculate arrow position with offset\n\n          var r = point.r + point.offset;\n          var pos = [pt1[0] + r * Math.cos(opt.rotation), pt1[1] - r * Math.sin(opt.rotation)];\n          symbol.attr({\n            rotation: point.rotate,\n            position: pos,\n            silent: true\n          });\n          this.group.add(symbol);\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  axisTickLabel: function () {\n    var axisModel = this.axisModel;\n    var opt = this.opt;\n    var tickEls = buildAxisTick(this, axisModel, opt);\n    var labelEls = buildAxisLabel(this, axisModel, opt);\n    fixMinMaxLabelShow(axisModel, labelEls, tickEls);\n  },\n\n  /**\n   * @private\n   */\n  axisName: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n    var name = retrieve(opt.axisName, axisModel.get('name'));\n\n    if (!name) {\n      return;\n    }\n\n    var nameLocation = axisModel.get('nameLocation');\n    var nameDirection = opt.nameDirection;\n    var textStyleModel = axisModel.getModel('nameTextStyle');\n    var gap = axisModel.get('nameGap') || 0;\n    var extent = this.axisModel.axis.getExtent();\n    var gapSignal = extent[0] > extent[1] ? -1 : 1;\n    var pos = [nameLocation === 'start' ? extent[0] - gapSignal * gap : nameLocation === 'end' ? extent[1] + gapSignal * gap : (extent[0] + extent[1]) / 2, // 'middle'\n    // Reuse labelOffset.\n    isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0];\n    var labelLayout;\n    var nameRotation = axisModel.get('nameRotate');\n\n    if (nameRotation != null) {\n      nameRotation = nameRotation * PI / 180; // To radian.\n    }\n\n    var axisNameAvailableWidth;\n\n    if (isNameLocationCenter(nameLocation)) {\n      labelLayout = innerTextLayout(opt.rotation, nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n      nameDirection);\n    } else {\n      labelLayout = endTextLayout(opt, nameLocation, nameRotation || 0, extent);\n      axisNameAvailableWidth = opt.axisNameAvailableWidth;\n\n      if (axisNameAvailableWidth != null) {\n        axisNameAvailableWidth = Math.abs(axisNameAvailableWidth / Math.sin(labelLayout.rotation));\n        !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n      }\n    }\n\n    var textFont = textStyleModel.getFont();\n    var truncateOpt = axisModel.get('nameTruncate', true) || {};\n    var ellipsis = truncateOpt.ellipsis;\n    var maxWidth = retrieve(opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth); // FIXME\n    // truncate rich text? (consider performance)\n\n    var truncatedText = ellipsis != null && maxWidth != null ? formatUtil.truncateText(name, maxWidth, textFont, ellipsis, {\n      minChar: 2,\n      placeholder: truncateOpt.placeholder\n    }) : name;\n    var tooltipOpt = axisModel.get('tooltip', true);\n    var mainType = axisModel.mainType;\n    var formatterParams = {\n      componentType: mainType,\n      name: name,\n      $vars: ['name']\n    };\n    formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'name',\n      __fullText: name,\n      __truncatedText: truncatedText,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: isSilent(axisModel),\n      z2: 1,\n      tooltip: tooltipOpt && tooltipOpt.show ? extend({\n        content: name,\n        formatter: function () {\n          return name;\n        },\n        formatterParams: formatterParams\n      }, tooltipOpt) : null\n    });\n    graphic.setTextStyle(textEl.style, textStyleModel, {\n      text: truncatedText,\n      textFont: textFont,\n      textFill: textStyleModel.getTextColor() || axisModel.get('axisLine.lineStyle.color'),\n      textAlign: labelLayout.textAlign,\n      textVerticalAlign: labelLayout.textVerticalAlign\n    });\n\n    if (axisModel.get('triggerEvent')) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisName';\n      textEl.eventData.name = name;\n    } // FIXME\n\n\n    this._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    this.group.add(textEl);\n    textEl.decomposeTransform();\n  }\n};\n/**\n * @public\n * @static\n * @param {Object} opt\n * @param {number} axisRotation in radian\n * @param {number} textRotation in radian\n * @param {number} direction\n * @return {Object} {\n *  rotation, // according to axis\n *  textAlign,\n *  textVerticalAlign\n * }\n */\n\nvar innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n  var rotationDiff = remRadian(textRotation - axisRotation);\n  var textAlign;\n  var textVerticalAlign;\n\n  if (isRadianAroundZero(rotationDiff)) {\n    // Label is parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI)) {\n    // Label is inverse parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff > 0 && rotationDiff < PI) {\n      textAlign = direction > 0 ? 'right' : 'left';\n    } else {\n      textAlign = direction > 0 ? 'left' : 'right';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n};\n\nfunction endTextLayout(opt, textPosition, textRotate, extent) {\n  var rotationDiff = remRadian(textRotate - opt.rotation);\n  var textAlign;\n  var textVerticalAlign;\n  var inverse = extent[0] > extent[1];\n  var onLeft = textPosition === 'start' && !inverse || textPosition !== 'start' && inverse;\n\n  if (isRadianAroundZero(rotationDiff - PI / 2)) {\n    textVerticalAlign = onLeft ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n    textVerticalAlign = onLeft ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n      textAlign = onLeft ? 'left' : 'right';\n    } else {\n      textAlign = onLeft ? 'right' : 'left';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction isSilent(axisModel) {\n  var tooltipOpt = axisModel.get('tooltip');\n  return axisModel.get('silent') // Consider mouse cursor, add these restrictions.\n  || !(axisModel.get('triggerEvent') || tooltipOpt && tooltipOpt.show);\n}\n\nfunction fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\n  // If min or max are user set, we need to check\n  // If the tick on min(max) are overlap on their neighbour tick\n  // If they are overlapped, we need to hide the min(max) tick label\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel'); // FIXME\n  // Have not consider onBand yet, where tick els is more than label els.\n\n  labelEls = labelEls || [];\n  tickEls = tickEls || [];\n  var firstLabel = labelEls[0];\n  var nextLabel = labelEls[1];\n  var lastLabel = labelEls[labelEls.length - 1];\n  var prevLabel = labelEls[labelEls.length - 2];\n  var firstTick = tickEls[0];\n  var nextTick = tickEls[1];\n  var lastTick = tickEls[tickEls.length - 1];\n  var prevTick = tickEls[tickEls.length - 2];\n\n  if (showMinLabel === false) {\n    ignoreEl(firstLabel);\n    ignoreEl(firstTick);\n  } else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n    if (showMinLabel) {\n      ignoreEl(nextLabel);\n      ignoreEl(nextTick);\n    } else {\n      ignoreEl(firstLabel);\n      ignoreEl(firstTick);\n    }\n  }\n\n  if (showMaxLabel === false) {\n    ignoreEl(lastLabel);\n    ignoreEl(lastTick);\n  } else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n    if (showMaxLabel) {\n      ignoreEl(prevLabel);\n      ignoreEl(prevTick);\n    } else {\n      ignoreEl(lastLabel);\n      ignoreEl(lastTick);\n    }\n  }\n}\n\nfunction ignoreEl(el) {\n  el && (el.ignore = true);\n}\n\nfunction isTwoLabelOverlapped(current, next, labelLayout) {\n  // current and next has the same rotation.\n  var firstRect = current && current.getBoundingRect().clone();\n  var nextRect = next && next.getBoundingRect().clone();\n\n  if (!firstRect || !nextRect) {\n    return;\n  } // When checking intersect of two rotated labels, we use mRotationBack\n  // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n\n\n  var mRotationBack = matrixUtil.identity([]);\n  matrixUtil.rotate(mRotationBack, mRotationBack, -current.rotation);\n  firstRect.applyTransform(matrixUtil.mul([], mRotationBack, current.getLocalTransform()));\n  nextRect.applyTransform(matrixUtil.mul([], mRotationBack, next.getLocalTransform()));\n  return firstRect.intersect(nextRect);\n}\n\nfunction isNameLocationCenter(nameLocation) {\n  return nameLocation === 'middle' || nameLocation === 'center';\n}\n\nfunction buildAxisTick(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n\n  if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n    return;\n  }\n\n  var tickModel = axisModel.getModel('axisTick');\n  var lineStyleModel = tickModel.getModel('lineStyle');\n  var tickLen = tickModel.get('length');\n  var ticksCoords = axis.getTicksCoords();\n  var pt1 = [];\n  var pt2 = [];\n  var matrix = axisBuilder._transform;\n  var tickEls = [];\n\n  for (var i = 0; i < ticksCoords.length; i++) {\n    var tickCoord = ticksCoords[i].coord;\n    pt1[0] = tickCoord;\n    pt1[1] = 0;\n    pt2[0] = tickCoord;\n    pt2[1] = opt.tickDirection * tickLen;\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    } // Tick line, Not use group transform to have better line draw\n\n\n    var tickEl = new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'tick_' + ticksCoords[i].tickValue,\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: defaults(lineStyleModel.getLineStyle(), {\n        stroke: axisModel.get('axisLine.lineStyle.color')\n      }),\n      z2: 2,\n      silent: true\n    }));\n    axisBuilder.group.add(tickEl);\n    tickEls.push(tickEl);\n  }\n\n  return tickEls;\n}\n\nfunction buildAxisLabel(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n  var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n  if (!show || axis.scale.isBlank()) {\n    return;\n  }\n\n  var labelModel = axisModel.getModel('axisLabel');\n  var labelMargin = labelModel.get('margin');\n  var labels = axis.getViewLabels(); // Special label rotate.\n\n  var labelRotation = (retrieve(opt.labelRotate, labelModel.get('rotate')) || 0) * PI / 180;\n  var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n  var rawCategoryData = axisModel.getCategories(true);\n  var labelEls = [];\n  var silent = isSilent(axisModel);\n  var triggerEvent = axisModel.get('triggerEvent');\n  each(labels, function (labelItem, index) {\n    var tickValue = labelItem.tickValue;\n    var formattedLabel = labelItem.formattedLabel;\n    var rawLabel = labelItem.rawLabel;\n    var itemLabelModel = labelModel;\n\n    if (rawCategoryData && rawCategoryData[tickValue] && rawCategoryData[tickValue].textStyle) {\n      itemLabelModel = new Model(rawCategoryData[tickValue].textStyle, labelModel, axisModel.ecModel);\n    }\n\n    var textColor = itemLabelModel.getTextColor() || axisModel.get('axisLine.lineStyle.color');\n    var tickCoord = axis.dataToCoord(tickValue);\n    var pos = [tickCoord, opt.labelOffset + opt.labelDirection * labelMargin];\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'label_' + tickValue,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: silent,\n      z2: 10\n    });\n    graphic.setTextStyle(textEl.style, itemLabelModel, {\n      text: formattedLabel,\n      textAlign: itemLabelModel.getShallow('align', true) || labelLayout.textAlign,\n      textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true) || itemLabelModel.getShallow('baseline', true) || labelLayout.textVerticalAlign,\n      textFill: typeof textColor === 'function' ? textColor( // (1) In category axis with data zoom, tick is not the original\n      // index of axis.data. So tick should not be exposed to user\n      // in category axis.\n      // (2) Compatible with previous version, which always use formatted label as\n      // input. But in interval scale the formatted label is like '223,445', which\n      // maked user repalce ','. So we modify it to return original val but remain\n      // it as 'string' to avoid error in replacing.\n      axis.type === 'category' ? rawLabel : axis.type === 'value' ? tickValue + '' : tickValue, index) : textColor\n    }); // Pack data for mouse event\n\n    if (triggerEvent) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisLabel';\n      textEl.eventData.value = rawLabel;\n    } // FIXME\n\n\n    axisBuilder._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    labelEls.push(textEl);\n    axisBuilder.group.add(textEl);\n    textEl.decomposeTransform();\n  });\n  return labelEls;\n}\n\nvar _default = AxisBuilder;\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar isArray = _util.isArray;\nvar isObject = _util.isObject;\n\nvar compatStyle = require(\"./helper/compatStyle\");\n\nvar _model = require(\"../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Compatitable with 2.0\nfunction get(opt, path) {\n  path = path.split(',');\n  var obj = opt;\n\n  for (var i = 0; i < path.length; i++) {\n    obj = obj && obj[path[i]];\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  return obj;\n}\n\nfunction set(opt, path, val, overwrite) {\n  path = path.split(',');\n  var obj = opt;\n  var key;\n\n  for (var i = 0; i < path.length - 1; i++) {\n    key = path[i];\n\n    if (obj[key] == null) {\n      obj[key] = {};\n    }\n\n    obj = obj[key];\n  }\n\n  if (overwrite || obj[path[i]] == null) {\n    obj[path[i]] = val;\n  }\n}\n\nfunction compatLayoutProperties(option) {\n  each(LAYOUT_PROPERTIES, function (prop) {\n    if (prop[0] in option && !(prop[1] in option)) {\n      option[prop[1]] = option[prop[0]];\n    }\n  });\n}\n\nvar LAYOUT_PROPERTIES = [['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']];\nvar COMPATITABLE_COMPONENTS = ['grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'];\n\nfunction _default(option, isTheme) {\n  compatStyle(option, isTheme); // Make sure series array for model initialization.\n\n  option.series = normalizeToArray(option.series);\n  each(option.series, function (seriesOpt) {\n    if (!isObject(seriesOpt)) {\n      return;\n    }\n\n    var seriesType = seriesOpt.type;\n\n    if (seriesType === 'pie' || seriesType === 'gauge') {\n      if (seriesOpt.clockWise != null) {\n        seriesOpt.clockwise = seriesOpt.clockWise;\n      }\n    }\n\n    if (seriesType === 'gauge') {\n      var pointerColor = get(seriesOpt, 'pointer.color');\n      pointerColor != null && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n    }\n\n    compatLayoutProperties(seriesOpt);\n  }); // dataRange has changed to visualMap\n\n  if (option.dataRange) {\n    option.visualMap = option.dataRange;\n  }\n\n  each(COMPATITABLE_COMPONENTS, function (componentName) {\n    var options = option[componentName];\n\n    if (options) {\n      if (!isArray(options)) {\n        options = [options];\n      }\n\n      each(options, function (option) {\n        compatLayoutProperties(option);\n      });\n    }\n  });\n}\n\nmodule.exports = _default;","var Gradient = require(\"zrender/lib/graphic/Gradient\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = {\n  createOnAllSeries: true,\n  performRawSeries: true,\n  reset: function (seriesModel, ecModel) {\n    var data = seriesModel.getData();\n    var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.color').split('.');\n    var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n    || seriesModel.getColorFromPalette( // TODO series count changed.\n    seriesModel.name, null, ecModel.getSeriesCount()); // Default color\n    // FIXME Set color function or use the platte color\n\n    data.setVisual('color', color); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      if (typeof color === 'function' && !(color instanceof Gradient)) {\n        data.each(function (idx) {\n          data.setItemVisual(idx, 'color', color(seriesModel.getDataParams(idx)));\n        });\n      } // itemStyle in each data item\n\n\n      var dataEach = function (data, idx) {\n        var itemModel = data.getItemModel(idx);\n        var color = itemModel.get(colorAccessPath, true);\n\n        if (color != null) {\n          data.setItemVisual(idx, 'color', color);\n        }\n      };\n\n      return {\n        dataEach: data.hasItemOption ? dataEach : null\n      };\n    }\n  }\n};\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar samplers = {\n  average: function (frame) {\n    var sum = 0;\n    var count = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      if (!isNaN(frame[i])) {\n        sum += frame[i];\n        count++;\n      }\n    } // Return NaN if count is 0\n\n\n    return count === 0 ? NaN : sum / count;\n  },\n  sum: function (frame) {\n    var sum = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      // Ignore NaN\n      sum += frame[i] || 0;\n    }\n\n    return sum;\n  },\n  max: function (frame) {\n    var max = -Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] > max && (max = frame[i]);\n    } // NaN will cause illegal axis extent.\n\n\n    return isFinite(max) ? max : NaN;\n  },\n  min: function (frame) {\n    var min = Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] < min && (min = frame[i]);\n    } // NaN will cause illegal axis extent.\n\n\n    return isFinite(min) ? min : NaN;\n  },\n  // TODO\n  // Median\n  nearest: function (frame) {\n    return frame[0];\n  }\n};\n\nvar indexSampler = function (frame, value) {\n  return Math.round(frame.length / 2);\n};\n\nfunction _default(seriesType) {\n  return {\n    seriesType: seriesType,\n    modifyOutputEnd: true,\n    reset: function (seriesModel, ecModel, api) {\n      var data = seriesModel.getData();\n      var sampling = seriesModel.get('sampling');\n      var coordSys = seriesModel.coordinateSystem; // Only cartesian2d support down sampling\n\n      if (coordSys.type === 'cartesian2d' && sampling) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var extent = baseAxis.getExtent(); // Coordinste system has been resized\n\n        var size = extent[1] - extent[0];\n        var rate = Math.round(data.count() / size);\n\n        if (rate > 1) {\n          var sampler;\n\n          if (typeof sampling === 'string') {\n            sampler = samplers[sampling];\n          } else if (typeof sampling === 'function') {\n            sampler = sampling;\n          }\n\n          if (sampler) {\n            // Only support sample the first dim mapped from value axis.\n            seriesModel.setData(data.downSample(data.mapDimension(valueAxis.dim), 1 / rate, sampler, indexSampler));\n          }\n        }\n      }\n    }\n  };\n}\n\nmodule.exports = _default;","var textContain = require(\"zrender/lib/contain/text\");\n\nvar graphicUtil = require(\"../../util/graphic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PATH_COLOR = ['textStyle', 'color'];\nvar _default = {\n  /**\n   * Get color property or get color from option.textStyle.color\n   * @param {boolean} [isEmphasis]\n   * @return {string}\n   */\n  getTextColor: function (isEmphasis) {\n    var ecModel = this.ecModel;\n    return this.getShallow('color') || (!isEmphasis && ecModel ? ecModel.get(PATH_COLOR) : null);\n  },\n\n  /**\n   * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n   * @return {string}\n   */\n  getFont: function () {\n    return graphicUtil.getFont({\n      fontStyle: this.getShallow('fontStyle'),\n      fontWeight: this.getShallow('fontWeight'),\n      fontSize: this.getShallow('fontSize'),\n      fontFamily: this.getShallow('fontFamily')\n    }, this.ecModel);\n  },\n  getTextRect: function (text) {\n    return textContain.getBoundingRect(text, this.getFont(), this.getShallow('align'), this.getShallow('verticalAlign') || this.getShallow('baseline'), this.getShallow('padding'), this.getShallow('rich'), this.getShallow('truncateText'));\n  }\n};\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar AxisBuilder = require(\"../axis/AxisBuilder\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/model/Model} axisPointerModel\n */\nfunction buildElStyle(axisPointerModel) {\n  var axisPointerType = axisPointerModel.get('type');\n  var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n  var style;\n\n  if (axisPointerType === 'line') {\n    style = styleModel.getLineStyle();\n    style.fill = null;\n  } else if (axisPointerType === 'shadow') {\n    style = styleModel.getAreaStyle();\n    style.stroke = null;\n  }\n\n  return style;\n}\n/**\n * @param {Function} labelPos {align, verticalAlign, position}\n */\n\n\nfunction buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos) {\n  var value = axisPointerModel.get('value');\n  var text = getValueLabel(value, axisModel.axis, axisModel.ecModel, axisPointerModel.get('seriesDataIndices'), {\n    precision: axisPointerModel.get('label.precision'),\n    formatter: axisPointerModel.get('label.formatter')\n  });\n  var labelModel = axisPointerModel.getModel('label');\n  var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n  var font = labelModel.getFont();\n  var textRect = textContain.getBoundingRect(text, font);\n  var position = labelPos.position;\n  var width = textRect.width + paddings[1] + paddings[3];\n  var height = textRect.height + paddings[0] + paddings[2]; // Adjust by align.\n\n  var align = labelPos.align;\n  align === 'right' && (position[0] -= width);\n  align === 'center' && (position[0] -= width / 2);\n  var verticalAlign = labelPos.verticalAlign;\n  verticalAlign === 'bottom' && (position[1] -= height);\n  verticalAlign === 'middle' && (position[1] -= height / 2); // Not overflow ec container\n\n  confineInContainer(position, width, height, api);\n  var bgColor = labelModel.get('backgroundColor');\n\n  if (!bgColor || bgColor === 'auto') {\n    bgColor = axisModel.get('axisLine.lineStyle.color');\n  }\n\n  elOption.label = {\n    shape: {\n      x: 0,\n      y: 0,\n      width: width,\n      height: height,\n      r: labelModel.get('borderRadius')\n    },\n    position: position.slice(),\n    // TODO: rich\n    style: {\n      text: text,\n      textFont: font,\n      textFill: labelModel.getTextColor(),\n      textPosition: 'inside',\n      fill: bgColor,\n      stroke: labelModel.get('borderColor') || 'transparent',\n      lineWidth: labelModel.get('borderWidth') || 0,\n      shadowBlur: labelModel.get('shadowBlur'),\n      shadowColor: labelModel.get('shadowColor'),\n      shadowOffsetX: labelModel.get('shadowOffsetX'),\n      shadowOffsetY: labelModel.get('shadowOffsetY')\n    },\n    // Lable should be over axisPointer.\n    z2: 10\n  };\n} // Do not overflow ec container\n\n\nfunction confineInContainer(position, width, height, api) {\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  position[0] = Math.min(position[0] + width, viewWidth) - width;\n  position[1] = Math.min(position[1] + height, viewHeight) - height;\n  position[0] = Math.max(position[0], 0);\n  position[1] = Math.max(position[1], 0);\n}\n/**\n * @param {number} value\n * @param {module:echarts/coord/Axis} axis\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} opt\n * @param {Array.<Object>} seriesDataIndices\n * @param {number|string} opt.precision 'auto' or a number\n * @param {string|Function} opt.formatter label formatter\n */\n\n\nfunction getValueLabel(value, axis, ecModel, seriesDataIndices, opt) {\n  value = axis.scale.parse(value);\n  var text = axis.scale.getLabel( // If `precision` is set, width can be fixed (like '12.00500'), which\n  // helps to debounce when when moving label.\n  value, {\n    precision: opt.precision\n  });\n  var formatter = opt.formatter;\n\n  if (formatter) {\n    var params = {\n      value: axisHelper.getAxisRawValue(axis, value),\n      seriesData: []\n    };\n    zrUtil.each(seriesDataIndices, function (idxItem) {\n      var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n      var dataIndex = idxItem.dataIndexInside;\n      var dataParams = series && series.getDataParams(dataIndex);\n      dataParams && params.seriesData.push(dataParams);\n    });\n\n    if (zrUtil.isString(formatter)) {\n      text = formatter.replace('{value}', text);\n    } else if (zrUtil.isFunction(formatter)) {\n      text = formatter(params);\n    }\n  }\n\n  return text;\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @param {number} value\n * @param {Object} layoutInfo {\n *  rotation, position, labelOffset, labelDirection, labelMargin\n * }\n */\n\n\nfunction getTransformedPosition(axis, value, layoutInfo) {\n  var transform = matrix.create();\n  matrix.rotate(transform, transform, layoutInfo.rotation);\n  matrix.translate(transform, transform, layoutInfo.position);\n  return graphic.applyTransform([axis.dataToCoord(value), (layoutInfo.labelOffset || 0) + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)], transform);\n}\n\nfunction buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api) {\n  var textLayout = AxisBuilder.innerTextLayout(layoutInfo.rotation, 0, layoutInfo.labelDirection);\n  layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n  buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n    position: getTransformedPosition(axisModel.axis, value, layoutInfo),\n    align: textLayout.textAlign,\n    verticalAlign: textLayout.textVerticalAlign\n  });\n}\n/**\n * @param {Array.<number>} p1\n * @param {Array.<number>} p2\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeLineShape(p1, p2, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x1: p1[xDimIndex],\n    y1: p1[1 - xDimIndex],\n    x2: p2[xDimIndex],\n    y2: p2[1 - xDimIndex]\n  };\n}\n/**\n * @param {Array.<number>} xy\n * @param {Array.<number>} wh\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeRectShape(xy, wh, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x: xy[xDimIndex],\n    y: xy[1 - xDimIndex],\n    width: wh[xDimIndex],\n    height: wh[1 - xDimIndex]\n  };\n}\n\nfunction makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\n  return {\n    cx: cx,\n    cy: cy,\n    r0: r0,\n    r: r,\n    startAngle: startAngle,\n    endAngle: endAngle,\n    clockwise: true\n  };\n}\n\nexports.buildElStyle = buildElStyle;\nexports.buildLabelElOption = buildLabelElOption;\nexports.getValueLabel = getValueLabel;\nexports.getTransformedPosition = getTransformedPosition;\nexports.buildCartesianSingleLabelElOption = buildCartesianSingleLabelElOption;\nexports.makeLineShape = makeLineShape;\nexports.makeRectShape = makeRectShape;\nexports.makeSectorShape = makeSectorShape;"],"sourceRoot":""}